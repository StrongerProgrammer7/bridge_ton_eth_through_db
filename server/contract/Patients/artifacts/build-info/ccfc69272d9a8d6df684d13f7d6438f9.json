{
	"id": "ccfc69272d9a8d6df684d13f7d6438f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"addPatients.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"./Patient.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\";\r\n/*\r\n*@author Abdyukov Z.\r\n*@notice Регистрация пациентов, никто не имеет право на этот контракт, он используется\r\n* только для регистрации, внесение изменений, просмотра\r\n*/\r\ncontract Patients\r\n{\r\n    event NewPatient(string notice, address patient, uint256 number, address contractPatient);\r\n    event GetRole(string role, address doctor);\r\n    event Log(string func, address sender, bytes data);\r\n\r\n    uint256 private countPatients = 0;\r\n    mapping(address => address) private adressesPatient;\r\n \r\n    address private implementation;\r\n    constructor (address _implementation) \r\n    {\r\n        implementation = _implementation;\r\n    }\r\n\r\n    modifier existsPatient(address _patient)\r\n    {\r\n        require(adressesPatient[_patient]!=address(0),\"Patient don't exists!Check patient's account!\");\r\n        _;\r\n    }\r\n\r\n    function createPatient() external \r\n    {\r\n        require(adressesPatient[msg.sender]==address(0),\"You were register!\");\r\n        \r\n        address patient = Clones.clone(implementation);\r\n\r\n        Patient(patient).register(msg.sender);\r\n\r\n        adressesPatient[msg.sender] = patient;\r\n        countPatients++;\r\n\r\n        emit NewPatient(\"Create patient: \",msg.sender,countPatients-1,patient);    \r\n    }\r\n\r\n    function checkAccess(address _patient) external view  existsPatient(_patient)  returns (bool)\r\n    {\r\n        Patient p = Patient(adressesPatient[_patient]);\r\n        return p.isAccess(msg.sender);\r\n    }\r\n\r\n    function getCountPatient() external view returns(uint)\r\n    {\r\n        return countPatients;\r\n    }\r\n         \r\n    // function downloadFileLinks(address _patient,string memory _fileLinks) external existsPatient(_patient)\r\n    // {\r\n    //     Patient p = Patient(adressesPatient[_patient]);\r\n    //     p.downloadLinksFile(msg.sender,_fileLinks);\r\n    // }\r\n   \r\n    function giveRole(address _doctor) external\r\n    {\r\n        require(msg.sender != _doctor, \"You can not be a doctor!\");\r\n        Patient p = Patient(adressesPatient[msg.sender]);\r\n        p.setupRole_Doctor(msg.sender,_doctor);\r\n        emit GetRole(\"Doctor\", _doctor);\r\n    }\r\n\r\n    function anualRole(address _doctor) external\r\n    {\r\n        require(msg.sender != _doctor, \"You can not be a doctor and nothing anual!\");\r\n        Patient p = Patient(adressesPatient[msg.sender]);\r\n        p.revokeRole_Doctor(msg.sender,_doctor);\r\n    }\r\n\r\n    fallback() external \r\n    {\r\n        emit Log(\"fallback\", msg.sender, msg.data);\r\n    }\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"Patient.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n\nimport \"./access/Owner.sol\"; //Основной автор openZepplin , для этого контракта немного переделанo\nimport \"./access/Roles.sol\"; // ~\n\n/*\n *\n *\n *@title Краткие данные о пациенте\n *Имеется массив адресов врачей, \n *Если массив пуст, значит ни один врач не имеет доступа к пациенту\n *В массиве содержатся адресов врачей, которым предоставлен доступ\n *@author Abdyukov Z.\n *\n *@notice каждый пользователь сначала регистрируется , \n *\n */\n\ncontract Patient is Owner, AccessControl \n{\n\n    /*\n     *@notice для получения доступа к пациента нужен адресс врача\n     */\n    address[] private docs;\n\n    // string[] private linksStorage; //содержит хэш файлов в IPFS\n\n    bytes32 private constant DOCTOR_ROLE = keccak256(\"DOCTOR_ROLE\");\n\n    modifier onlyePatientOrDoctor(address account) \n    {\n        require(hasRole(DOCTOR_ROLE, account) ||\n                hasRole(DEFAULT_ADMIN_ROLE, account),\n            \" Caller is not doc or patient!\"\n        );\n        _;\n    }\n\n    constructor() Owner(msg.sender) {}\n\n    /*\n     *@notice регистрация пациента и получение прав админа\n     *\n     */\n    function register(address _patient) external \n    {\n        transferOwnership(_patient);\n        setAdmin(_patient);\n        _setupRole(DEFAULT_ADMIN_ROLE, _patient);  \n    }\n\n     \n    /*\n     *@notice сохранение ссылки на большие данные о пациенте\n    //  */\n    // function downloadLinksFile(address _doctor, string memory _fileLinks)\n    //     external\n    //     onlyRole(DOCTOR_ROLE, _doctor)\n    // {\n    //     linksStorage.push(_fileLinks);\n    // }\n\n      \n     /*\n     *@return Строку с ссылками\n    //  */\n    // function _getLinksIPFS() private view returns (string memory) {\n    //     string memory links = \"IPFS:\";\n    //     for (uint256 i = 0; i < linksStorage.length; i++) {\n    //         bytes memory temp = abi.encodePacked(linksStorage[i], \"|\");\n    //         links = string(abi.encodePacked(links, temp));\n    //     }\n    //     links = string(abi.encodePacked(links, \";\"));\n    //     return links;\n    // }\n\n    /*\n    *@notice Возвращает true or false , в зависимости есть ли доступ у врача\n    *@param: _doctor адрес врача, который проверяется\n    */\n    function isAccess(address _doctor) external view returns(bool)\n    {\n        for(uint256 i=0;i<docs.length;i++)\n        {\n            if(docs[i] == _doctor)\n                return true;\n        }\n        return false;\n    }\n\n    function setupRole_Doctor(address _patient, address _doctor) external onlyOwner(_patient)\n     onlyRole(DEFAULT_ADMIN_ROLE, _patient)\n    {\n        grantRole(DOCTOR_ROLE, _doctor);\n\n        for(uint256 i=0;i<docs.length;i++)\n        {\n            if(docs[i] == _doctor)\n                return;\n        }\n        docs.push(_doctor);\n    }\n\n    function revokeRole_Doctor(address _patient, address _doctor) external onlyOwner(_patient)\n        onlyRole(DEFAULT_ADMIN_ROLE, _patient)\n    {\n        revokeRole(DOCTOR_ROLE, _doctor);\n        int pos = -1;\n        for(uint256 i=0;i<docs.length-1;i++)\n        {\n            if(docs[i] == _doctor)\n                pos = int(i);    \n\n            if(pos!=-1)\n                docs[i] = docs[i+1];\n        }\n        docs.pop();\n    }\n}\n"
			},
			"access/Roles.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\r\npragma solidity ^0.8.0;\r\n\r\nimport \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\";\r\nimport \"./Owner.sol\";\r\nimport \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\";\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\r\n * members except through off-chain means by accessing the contract event logs. Some\r\n * applications may benefit from on-chain enumerability, for those cases see\r\n * {AccessControlEnumerable}.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it.\r\n */\r\nabstract contract AccessControl is ERC165,Owner\r\n{\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted signaling this.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call, an admin role\r\n     * bearer except when using {AccessControl-_setupRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    struct RoleData {\r\n        mapping(address => bool) members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    address private admin;\r\n\r\n    function setAdmin(address _sender) internal onlyOwner(_sender)\r\n    {\r\n        admin = _sender;\r\n    }\r\n    /**\r\n     * @dev Modifier that checks that an account has a specific role. Reverts\r\n     * with a standardized message including the required role.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     *\r\n     * _Available since v4.1._\r\n     */\r\n    modifier onlyRole(bytes32 role,address sender) {\r\n        _checkRole(role,sender);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n   /* function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\r\n    }*/\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\r\n        return _roles[role].members[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\r\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\r\n     *\r\n     * Format of the revert message is described in {_checkRole}.\r\n     *\r\n     * _Available since v4.6._\r\n     */\r\n    /*function _checkRole(bytes32 role,address sender) internal view virtual {\r\n        _checkRole(role, sender);\r\n    }*/\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `account` is missing `role`.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     */\r\n    function _checkRole(bytes32 role, address account) internal view virtual {\r\n        if (!hasRole(role, account)) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        \"AccessControl: account \",\r\n                        Strings.toHexString(account),\r\n                        \" is missing role \",\r\n                        Strings.toHexString(uint256(role), 32)\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function grantRole(bytes32 role, address account) internal virtual onlyRole(getRoleAdmin(role),admin) {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function revokeRole(bytes32 role, address account) internal virtual onlyRole(getRoleAdmin(role),admin) {\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function renounceRole(bytes32 role, address account) public virtual \r\n    {\r\n        require(account == admin, \"AccessControl: can only renounce roles for self\");\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event. Note that unlike {grantRole}, this function doesn't perform any\r\n     * checks on the calling account.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     *\r\n     * [WARNING]\r\n     * ====\r\n     * This function should only be called from the constructor when setting\r\n     * up the initial roles for the system.\r\n     *\r\n     * Using this function in any other way is effectively circumventing the admin\r\n     * system imposed by {AccessControl}.\r\n     * ====\r\n     *\r\n     * NOTE: This function is deprecated in favor of {_grantRole}.\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual onlyOwner(admin)\r\n    {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual onlyRole(getRoleAdmin(role),admin) {\r\n        bytes32 previousAdminRole = getRoleAdmin(role);\r\n        _roles[role].adminRole = adminRole;\r\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function _grantRole(bytes32 role, address account) private  \r\n    {\r\n        if (!hasRole(role, account)) \r\n        {\r\n            _roles[role].members[account] = true;\r\n            emit RoleGranted(role, account, admin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function _revokeRole(bytes32 role, address account) private  {\r\n        if (hasRole(role, account)) {\r\n            _roles[role].members[account] = false;\r\n            emit RoleRevoked(role, account, admin);\r\n        }\r\n    }\r\n}"
			},
			"access/Owner.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n//modify openZepplin Ownable\r\n//Foundation openZepplin/contracts/access/Ownable.sol\r\npragma solidity ^0.8.7;\r\n\r\nabstract contract Owner\r\n{\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner); \r\n\r\n    modifier onlyOwner(address _sender)\r\n    {\r\n        _checkOwner(_sender);\r\n        _;\r\n    }\r\n\r\n    constructor(address _newOwner) \r\n    {\r\n        _transferOwnership(_newOwner);\r\n    }\r\n    \r\n    function _checkOwner(address _sender) internal view virtual \r\n    {\r\n        require(owner() == _sender, \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    function owner() public view virtual returns (address) \r\n    {\r\n        return _owner;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public virtual onlyOwner(_owner) \r\n    {\r\n        require(_newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(_newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address _newOwner) private  \r\n    {\r\n        address oldOwner = _owner;\r\n        _owner = _newOwner;\r\n        emit OwnershipTransferred(oldOwner, _newOwner);\r\n    }\r\n\r\n    function renounceOwnership(address _ownerContract) internal virtual onlyOwner(_ownerContract) \r\n    {\r\n        _transferOwnership(address(0));\r\n    }\r\n    \r\n}"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Patient.sol": {
				"Patient": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_doctor",
									"type": "address"
								}
							],
							"name": "isAccess",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_patient",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_patient",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_doctor",
									"type": "address"
								}
							],
							"name": "revokeRole_Doctor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_patient",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_doctor",
									"type": "address"
								}
							],
							"name": "setupRole_Doctor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Patient.sol\":735:3701  contract Patient is Owner, AccessControl ... */\n  mstore(0x40, 0x80)\n    /* \"Patient.sol\":1329:1363  constructor() Owner(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Patient.sol\":1349:1359  msg.sender */\n  caller\n    /* \"access/Owner.sol\":448:477  _transferOwnership(_newOwner) */\n  tag_5\n    /* \"access/Owner.sol\":467:476  _newOwner */\n  dup2\n    /* \"access/Owner.sol\":448:466  _transferOwnership */\n  shl(0x20, tag_6)\n    /* \"access/Owner.sol\":448:477  _transferOwnership(_newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"access/Owner.sol\":400:485  constructor(address _newOwner) ... */\n  pop\n    /* \"Patient.sol\":735:3701  contract Patient is Owner, AccessControl ... */\n  jump(tag_8)\n    /* \"access/Owner.sol\":980:1172  function _transferOwnership(address _newOwner) private  ... */\ntag_6:\n    /* \"access/Owner.sol\":1053:1069  address oldOwner */\n  0x00\n    /* \"access/Owner.sol\":1072:1078  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"access/Owner.sol\":1053:1078  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"access/Owner.sol\":1098:1107  _newOwner */\n  dup2\n    /* \"access/Owner.sol\":1089:1095  _owner */\n  0x00\n  dup1\n    /* \"access/Owner.sol\":1089:1107  _owner = _newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"access/Owner.sol\":1154:1163  _newOwner */\n  dup2\n    /* \"access/Owner.sol\":1123:1164  OwnershipTransferred(oldOwner, _newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"access/Owner.sol\":1144:1152  oldOwner */\n  dup2\n    /* \"access/Owner.sol\":1123:1164  OwnershipTransferred(oldOwner, _newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"access/Owner.sol\":1042:1172  {... */\n  pop\n    /* \"access/Owner.sol\":980:1172  function _transferOwnership(address _newOwner) private  ... */\n  pop\n  jump\t// out\n    /* \"Patient.sol\":735:3701  contract Patient is Owner, AccessControl ... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Patient.sol\":735:3701  contract Patient is Owner, AccessControl ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa8f2be76\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xac0cc465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4cc2f081\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"access/Roles.sol\":5871:5993  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"access/Roles.sol\":7445:7651  function renounceRole(bytes32 role, address account) public virtual ... */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"Patient.sol\":1489:1663  function register(address _patient) external ... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"Patient.sol\":3270:3699  function revokeRole_Doctor(address _patient, address _doctor) external onlyOwner(_patient)... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"access/Owner.sol\":653:746  function owner() public view virtual returns (address) ... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"access/Roles.sol\":4340:4478  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"access/Roles.sol\":3281:3330  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Patient.sol\":2698:2921  function isAccess(address _doctor) external view returns(bool)... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Patient.sol\":2927:3264  function setupRole_Doctor(address _patient, address _doctor) external onlyOwner(_patient)... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"access/Owner.sol\":754:972  function transferOwnership(address _newOwner) public virtual onlyOwner(_owner) ... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_18:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":5871:5993  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_24:\n        /* \"access/Roles.sol\":5936:5943  bytes32 */\n      0x00\n        /* \"access/Roles.sol\":5963:5969  _roles */\n      0x01\n        /* \"access/Roles.sol\":5963:5975  _roles[role] */\n      0x00\n        /* \"access/Roles.sol\":5970:5974  role */\n      dup4\n        /* \"access/Roles.sol\":5963:5975  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"access/Roles.sol\":5963:5985  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"access/Roles.sol\":5956:5985  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"access/Roles.sol\":5871:5993  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":7445:7651  function renounceRole(bytes32 role, address account) public virtual ... */\n    tag_30:\n        /* \"access/Roles.sol\":7549:7554  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":7538:7554  account == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":7538:7545  account */\n      dup2\n        /* \"access/Roles.sol\":7538:7554  account == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"access/Roles.sol\":7530:7606  require(account == admin, \"AccessControl: can only renounce roles for self\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"access/Roles.sol\":7617:7643  _revokeRole(role, account) */\n      tag_66\n        /* \"access/Roles.sol\":7629:7633  role */\n      dup3\n        /* \"access/Roles.sol\":7635:7642  account */\n      dup3\n        /* \"access/Roles.sol\":7617:7628  _revokeRole */\n      tag_67\n        /* \"access/Roles.sol\":7617:7643  _revokeRole(role, account) */\n      jump\t// in\n    tag_66:\n        /* \"access/Roles.sol\":7445:7651  function renounceRole(bytes32 role, address account) public virtual ... */\n      pop\n      pop\n      jump\t// out\n        /* \"Patient.sol\":1489:1663  function register(address _patient) external ... */\n    tag_34:\n        /* \"Patient.sol\":1549:1576  transferOwnership(_patient) */\n      tag_69\n        /* \"Patient.sol\":1567:1575  _patient */\n      dup2\n        /* \"Patient.sol\":1549:1566  transferOwnership */\n      tag_59\n        /* \"Patient.sol\":1549:1576  transferOwnership(_patient) */\n      jump\t// in\n    tag_69:\n        /* \"Patient.sol\":1586:1604  setAdmin(_patient) */\n      tag_70\n        /* \"Patient.sol\":1595:1603  _patient */\n      dup2\n        /* \"Patient.sol\":1586:1594  setAdmin */\n      tag_71\n        /* \"Patient.sol\":1586:1604  setAdmin(_patient) */\n      jump\t// in\n    tag_70:\n        /* \"Patient.sol\":1614:1654  _setupRole(DEFAULT_ADMIN_ROLE, _patient) */\n      tag_72\n        /* \"access/Roles.sol\":3326:3330  0x00 */\n      0x00\n        /* \"Patient.sol\":1625:1643  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"Patient.sol\":1645:1653  _patient */\n      dup3\n        /* \"Patient.sol\":1614:1624  _setupRole */\n      tag_73\n        /* \"Patient.sol\":1614:1654  _setupRole(DEFAULT_ADMIN_ROLE, _patient) */\n      jump\t// in\n    tag_72:\n        /* \"Patient.sol\":1489:1663  function register(address _patient) external ... */\n      pop\n      jump\t// out\n        /* \"Patient.sol\":3270:3699  function revokeRole_Doctor(address _patient, address _doctor) external onlyOwner(_patient)... */\n    tag_38:\n        /* \"Patient.sol\":3351:3359  _patient */\n      dup2\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      tag_75\n        /* \"access/Owner.sol\":364:371  _sender */\n      dup2\n        /* \"access/Owner.sol\":352:363  _checkOwner */\n      tag_76\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      jump\t// in\n    tag_75:\n        /* \"access/Roles.sol\":3326:3330  0x00 */\n      0x00\n        /* \"Patient.sol\":3378:3396  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"Patient.sol\":3398:3406  _patient */\n      dup4\n        /* \"access/Roles.sol\":3925:3948  _checkRole(role,sender) */\n      tag_78\n        /* \"access/Roles.sol\":3936:3940  role */\n      dup3\n        /* \"access/Roles.sol\":3941:3947  sender */\n      dup3\n        /* \"access/Roles.sol\":3925:3935  _checkRole */\n      tag_79\n        /* \"access/Roles.sol\":3925:3948  _checkRole(role,sender) */\n      jump\t// in\n    tag_78:\n        /* \"Patient.sol\":3422:3454  revokeRole(DOCTOR_ROLE, _doctor) */\n      tag_81\n        /* \"Patient.sol\":1063:1087  keccak256(\"DOCTOR_ROLE\") */\n      0x0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f\n        /* \"Patient.sol\":3446:3453  _doctor */\n      dup6\n        /* \"Patient.sol\":3422:3432  revokeRole */\n      tag_82\n        /* \"Patient.sol\":3422:3454  revokeRole(DOCTOR_ROLE, _doctor) */\n      jump\t// in\n    tag_81:\n        /* \"Patient.sol\":3464:3471  int pos */\n      0x00\n        /* \"Patient.sol\":3474:3476  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Patient.sol\":3464:3476  int pos = -1 */\n      swap1\n      pop\n        /* \"Patient.sol\":3490:3499  uint256 i */\n      0x00\n        /* \"Patient.sol\":3486:3673  for(uint256 i=0;i<docs.length-1;i++)... */\n    tag_83:\n        /* \"Patient.sol\":3516:3517  1 */\n      0x01\n        /* \"Patient.sol\":3504:3508  docs */\n      0x03\n        /* \"Patient.sol\":3504:3515  docs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Patient.sol\":3504:3517  docs.length-1 */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"Patient.sol\":3502:3503  i */\n      dup2\n        /* \"Patient.sol\":3502:3517  i<docs.length-1 */\n      lt\n        /* \"Patient.sol\":3486:3673  for(uint256 i=0;i<docs.length-1;i++)... */\n      iszero\n      tag_84\n      jumpi\n        /* \"Patient.sol\":3559:3566  _doctor */\n      dup6\n        /* \"Patient.sol\":3548:3566  docs[i] == _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Patient.sol\":3548:3552  docs */\n      0x03\n        /* \"Patient.sol\":3553:3554  i */\n      dup3\n        /* \"Patient.sol\":3548:3555  docs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n    tag_88:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Patient.sol\":3548:3566  docs[i] == _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Patient.sol\":3545:3596  if(docs[i] == _doctor)... */\n      tag_92\n      jumpi\n        /* \"Patient.sol\":3594:3595  i */\n      dup1\n        /* \"Patient.sol\":3584:3596  pos = int(i) */\n      swap2\n      pop\n        /* \"Patient.sol\":3545:3596  if(docs[i] == _doctor)... */\n    tag_92:\n        /* \"Patient.sol\":3623:3625  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Patient.sol\":3618:3621  pos */\n      dup3\n        /* \"Patient.sol\":3618:3625  pos!=-1 */\n      eq\n        /* \"Patient.sol\":3615:3662  if(pos!=-1)... */\n      tag_93\n      jumpi\n        /* \"Patient.sol\":3653:3657  docs */\n      0x03\n        /* \"Patient.sol\":3660:3661  1 */\n      0x01\n        /* \"Patient.sol\":3658:3659  i */\n      dup3\n        /* \"Patient.sol\":3658:3661  i+1 */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"Patient.sol\":3653:3662  docs[i+1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_97\n      tag_90\n      jump\t// in\n    tag_97:\n    tag_96:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Patient.sol\":3643:3647  docs */\n      0x03\n        /* \"Patient.sol\":3648:3649  i */\n      dup3\n        /* \"Patient.sol\":3643:3650  docs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_99\n      jumpi\n      tag_100\n      tag_90\n      jump\t// in\n    tag_100:\n    tag_99:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"Patient.sol\":3643:3662  docs[i] = docs[i+1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Patient.sol\":3615:3662  if(pos!=-1)... */\n    tag_93:\n        /* \"Patient.sol\":3518:3521  i++ */\n      dup1\n      dup1\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      swap2\n      pop\n      pop\n        /* \"Patient.sol\":3486:3673  for(uint256 i=0;i<docs.length-1;i++)... */\n      jump(tag_83)\n    tag_84:\n      pop\n        /* \"Patient.sol\":3682:3686  docs */\n      0x03\n        /* \"Patient.sol\":3682:3692  docs.pop() */\n      dup1\n      sload\n      dup1\n      tag_104\n      jumpi\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n    tag_104:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"Patient.sol\":3412:3699  {... */\n      pop\n        /* \"access/Owner.sol\":383:384  _ */\n      pop\n      pop\n        /* \"Patient.sol\":3270:3699  function revokeRole_Doctor(address _patient, address _doctor) external onlyOwner(_patient)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"access/Owner.sol\":653:746  function owner() public view virtual returns (address) ... */\n    tag_40:\n        /* \"access/Owner.sol\":699:706  address */\n      0x00\n        /* \"access/Owner.sol\":732:738  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Owner.sol\":725:738  return _owner */\n      swap1\n      pop\n        /* \"access/Owner.sol\":653:746  function owner() public view virtual returns (address) ... */\n      swap1\n      jump\t// out\n        /* \"access/Roles.sol\":4340:4478  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_45:\n        /* \"access/Roles.sol\":4417:4421  bool */\n      0x00\n        /* \"access/Roles.sol\":4441:4447  _roles */\n      0x01\n        /* \"access/Roles.sol\":4441:4453  _roles[role] */\n      0x00\n        /* \"access/Roles.sol\":4448:4452  role */\n      dup5\n        /* \"access/Roles.sol\":4441:4453  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"access/Roles.sol\":4441:4461  _roles[role].members */\n      0x00\n      add\n        /* \"access/Roles.sol\":4441:4470  _roles[role].members[account] */\n      0x00\n        /* \"access/Roles.sol\":4462:4469  account */\n      dup4\n        /* \"access/Roles.sol\":4441:4470  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"access/Roles.sol\":4434:4470  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"access/Roles.sol\":4340:4478  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":3281:3330  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_48:\n        /* \"access/Roles.sol\":3326:3330  0x00 */\n      0x00\n        /* \"access/Roles.sol\":3281:3330  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"Patient.sol\":2698:2921  function isAccess(address _doctor) external view returns(bool)... */\n    tag_52:\n        /* \"Patient.sol\":2755:2759  bool */\n      0x00\n        /* \"Patient.sol\":2779:2788  uint256 i */\n      dup1\n        /* \"Patient.sol\":2789:2790  0 */\n      0x00\n        /* \"Patient.sol\":2779:2790  uint256 i=0 */\n      swap1\n      pop\n        /* \"Patient.sol\":2775:2893  for(uint256 i=0;i<docs.length;i++)... */\n    tag_111:\n        /* \"Patient.sol\":2793:2797  docs */\n      0x03\n        /* \"Patient.sol\":2793:2804  docs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Patient.sol\":2791:2792  i */\n      dup2\n        /* \"Patient.sol\":2791:2804  i<docs.length */\n      lt\n        /* \"Patient.sol\":2775:2893  for(uint256 i=0;i<docs.length;i++)... */\n      iszero\n      tag_112\n      jumpi\n        /* \"Patient.sol\":2846:2853  _doctor */\n      dup3\n        /* \"Patient.sol\":2835:2853  docs[i] == _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Patient.sol\":2835:2839  docs */\n      0x03\n        /* \"Patient.sol\":2840:2841  i */\n      dup3\n        /* \"Patient.sol\":2835:2842  docs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_115\n      tag_90\n      jump\t// in\n    tag_115:\n    tag_114:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Patient.sol\":2835:2853  docs[i] == _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Patient.sol\":2832:2882  if(docs[i] == _doctor)... */\n      tag_117\n      jumpi\n        /* \"Patient.sol\":2878:2882  true */\n      0x01\n        /* \"Patient.sol\":2871:2882  return true */\n      swap2\n      pop\n      pop\n      jump(tag_110)\n        /* \"Patient.sol\":2832:2882  if(docs[i] == _doctor)... */\n    tag_117:\n        /* \"Patient.sol\":2805:2808  i++ */\n      dup1\n      dup1\n      tag_118\n      swap1\n      tag_103\n      jump\t// in\n    tag_118:\n      swap2\n      pop\n      pop\n        /* \"Patient.sol\":2775:2893  for(uint256 i=0;i<docs.length;i++)... */\n      jump(tag_111)\n    tag_112:\n      pop\n        /* \"Patient.sol\":2909:2914  false */\n      0x00\n        /* \"Patient.sol\":2902:2914  return false */\n      swap1\n      pop\n        /* \"Patient.sol\":2698:2921  function isAccess(address _doctor) external view returns(bool)... */\n    tag_110:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Patient.sol\":2927:3264  function setupRole_Doctor(address _patient, address _doctor) external onlyOwner(_patient)... */\n    tag_56:\n        /* \"Patient.sol\":3007:3015  _patient */\n      dup2\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      tag_120\n        /* \"access/Owner.sol\":364:371  _sender */\n      dup2\n        /* \"access/Owner.sol\":352:363  _checkOwner */\n      tag_76\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      jump\t// in\n    tag_120:\n        /* \"access/Roles.sol\":3326:3330  0x00 */\n      0x00\n        /* \"Patient.sol\":3031:3049  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"Patient.sol\":3051:3059  _patient */\n      dup4\n        /* \"access/Roles.sol\":3925:3948  _checkRole(role,sender) */\n      tag_122\n        /* \"access/Roles.sol\":3936:3940  role */\n      dup3\n        /* \"access/Roles.sol\":3941:3947  sender */\n      dup3\n        /* \"access/Roles.sol\":3925:3935  _checkRole */\n      tag_79\n        /* \"access/Roles.sol\":3925:3948  _checkRole(role,sender) */\n      jump\t// in\n    tag_122:\n        /* \"Patient.sol\":3075:3106  grantRole(DOCTOR_ROLE, _doctor) */\n      tag_124\n        /* \"Patient.sol\":1063:1087  keccak256(\"DOCTOR_ROLE\") */\n      0x0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f\n        /* \"Patient.sol\":3098:3105  _doctor */\n      dup6\n        /* \"Patient.sol\":3075:3084  grantRole */\n      tag_125\n        /* \"Patient.sol\":3075:3106  grantRole(DOCTOR_ROLE, _doctor) */\n      jump\t// in\n    tag_124:\n        /* \"Patient.sol\":3121:3130  uint256 i */\n      0x00\n        /* \"Patient.sol\":3117:3230  for(uint256 i=0;i<docs.length;i++)... */\n    tag_126:\n        /* \"Patient.sol\":3135:3139  docs */\n      0x03\n        /* \"Patient.sol\":3135:3146  docs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Patient.sol\":3133:3134  i */\n      dup2\n        /* \"Patient.sol\":3133:3146  i<docs.length */\n      lt\n        /* \"Patient.sol\":3117:3230  for(uint256 i=0;i<docs.length;i++)... */\n      iszero\n      tag_127\n      jumpi\n        /* \"Patient.sol\":3188:3195  _doctor */\n      dup5\n        /* \"Patient.sol\":3177:3195  docs[i] == _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Patient.sol\":3177:3181  docs */\n      0x03\n        /* \"Patient.sol\":3182:3183  i */\n      dup3\n        /* \"Patient.sol\":3177:3184  docs[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_90\n      jump\t// in\n    tag_130:\n    tag_129:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Patient.sol\":3177:3195  docs[i] == _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Patient.sol\":3174:3220  if(docs[i] == _doctor)... */\n      tag_132\n      jumpi\n        /* \"Patient.sol\":3213:3220  return; */\n      pop\n      jump(tag_123)\n        /* \"Patient.sol\":3174:3220  if(docs[i] == _doctor)... */\n    tag_132:\n        /* \"Patient.sol\":3147:3150  i++ */\n      dup1\n      dup1\n      tag_133\n      swap1\n      tag_103\n      jump\t// in\n    tag_133:\n      swap2\n      pop\n      pop\n        /* \"Patient.sol\":3117:3230  for(uint256 i=0;i<docs.length;i++)... */\n      jump(tag_126)\n    tag_127:\n      pop\n        /* \"Patient.sol\":3239:3243  docs */\n      0x03\n        /* \"Patient.sol\":3249:3256  _doctor */\n      dup5\n        /* \"Patient.sol\":3239:3257  docs.push(_doctor) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"access/Roles.sol\":3959:3960  _ */\n    tag_123:\n        /* \"access/Owner.sol\":383:384  _ */\n      pop\n      pop\n        /* \"Patient.sol\":2927:3264  function setupRole_Doctor(address _patient, address _doctor) external onlyOwner(_patient)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"access/Owner.sol\":754:972  function transferOwnership(address _newOwner) public virtual onlyOwner(_owner) ... */\n    tag_59:\n        /* \"access/Owner.sol\":825:831  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      tag_136\n        /* \"access/Owner.sol\":364:371  _sender */\n      dup2\n        /* \"access/Owner.sol\":352:363  _checkOwner */\n      tag_76\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      jump\t// in\n    tag_136:\n        /* \"access/Owner.sol\":879:880  0 */\n      0x00\n        /* \"access/Owner.sol\":858:881  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Owner.sol\":858:867  _newOwner */\n      dup3\n        /* \"access/Owner.sol\":858:881  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"access/Owner.sol\":850:924  require(_newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"access/Owner.sol\":935:964  _transferOwnership(_newOwner) */\n      tag_141\n        /* \"access/Owner.sol\":954:963  _newOwner */\n      dup3\n        /* \"access/Owner.sol\":935:953  _transferOwnership */\n      tag_142\n        /* \"access/Owner.sol\":935:964  _transferOwnership(_newOwner) */\n      jump\t// in\n    tag_141:\n        /* \"access/Owner.sol\":754:972  function transferOwnership(address _newOwner) public virtual onlyOwner(_owner) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":9506:9730  function _revokeRole(bytes32 role, address account) private  {... */\n    tag_67:\n        /* \"access/Roles.sol\":9582:9604  hasRole(role, account) */\n      tag_144\n        /* \"access/Roles.sol\":9590:9594  role */\n      dup3\n        /* \"access/Roles.sol\":9596:9603  account */\n      dup3\n        /* \"access/Roles.sol\":9582:9589  hasRole */\n      tag_45\n        /* \"access/Roles.sol\":9582:9604  hasRole(role, account) */\n      jump\t// in\n    tag_144:\n        /* \"access/Roles.sol\":9578:9723  if (hasRole(role, account)) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"access/Roles.sol\":9653:9658  false */\n      0x00\n        /* \"access/Roles.sol\":9621:9627  _roles */\n      0x01\n        /* \"access/Roles.sol\":9621:9633  _roles[role] */\n      0x00\n        /* \"access/Roles.sol\":9628:9632  role */\n      dup5\n        /* \"access/Roles.sol\":9621:9633  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"access/Roles.sol\":9621:9641  _roles[role].members */\n      0x00\n      add\n        /* \"access/Roles.sol\":9621:9650  _roles[role].members[account] */\n      0x00\n        /* \"access/Roles.sol\":9642:9649  account */\n      dup4\n        /* \"access/Roles.sol\":9621:9650  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"access/Roles.sol\":9621:9658  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"access/Roles.sol\":9705:9710  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":9678:9711  RoleRevoked(role, account, admin) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":9696:9703  account */\n      dup2\n        /* \"access/Roles.sol\":9678:9711  RoleRevoked(role, account, admin) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":9690:9694  role */\n      dup4\n        /* \"access/Roles.sol\":9678:9711  RoleRevoked(role, account, admin) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"access/Roles.sol\":9578:9723  if (hasRole(role, account)) {... */\n    tag_145:\n        /* \"access/Roles.sol\":9506:9730  function _revokeRole(bytes32 role, address account) private  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":3369:3471  function setAdmin(address _sender) internal onlyOwner(_sender)... */\n    tag_71:\n        /* \"access/Roles.sol\":3423:3430  _sender */\n      dup1\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      tag_147\n        /* \"access/Owner.sol\":364:371  _sender */\n      dup2\n        /* \"access/Owner.sol\":352:363  _checkOwner */\n      tag_76\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      jump\t// in\n    tag_147:\n        /* \"access/Roles.sol\":3456:3463  _sender */\n      dup2\n        /* \"access/Roles.sol\":3448:3453  admin */\n      0x02\n      0x00\n        /* \"access/Roles.sol\":3448:3463  admin = _sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"access/Roles.sol\":3369:3471  function setAdmin(address _sender) internal onlyOwner(_sender)... */\n      pop\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":8358:8492  function _setupRole(bytes32 role, address account) internal virtual onlyOwner(admin)... */\n    tag_73:\n        /* \"access/Roles.sol\":8436:8441  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      tag_150\n        /* \"access/Owner.sol\":364:371  _sender */\n      dup2\n        /* \"access/Owner.sol\":352:363  _checkOwner */\n      tag_76\n        /* \"access/Owner.sol\":352:372  _checkOwner(_sender) */\n      jump\t// in\n    tag_150:\n        /* \"access/Roles.sol\":8459:8484  _grantRole(role, account) */\n      tag_152\n        /* \"access/Roles.sol\":8470:8474  role */\n      dup4\n        /* \"access/Roles.sol\":8476:8483  account */\n      dup4\n        /* \"access/Roles.sol\":8459:8469  _grantRole */\n      tag_153\n        /* \"access/Roles.sol\":8459:8484  _grantRole(role, account) */\n      jump\t// in\n    tag_152:\n        /* \"access/Roles.sol\":8358:8492  function _setupRole(bytes32 role, address account) internal virtual onlyOwner(admin)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"access/Owner.sol\":497:645  function _checkOwner(address _sender) internal view virtual ... */\n    tag_76:\n        /* \"access/Owner.sol\":593:600  _sender */\n      dup1\n        /* \"access/Owner.sol\":582:600  owner() == _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Owner.sol\":582:589  owner() */\n      tag_155\n        /* \"access/Owner.sol\":582:587  owner */\n      tag_40\n        /* \"access/Owner.sol\":582:589  owner() */\n      jump\t// in\n    tag_155:\n        /* \"access/Owner.sol\":582:600  owner() == _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"access/Owner.sol\":574:637  require(owner() == _sender, \"Ownable: caller is not the owner\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"access/Owner.sol\":497:645  function _checkOwner(address _sender) internal view virtual ... */\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":5190:5682  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_79:\n        /* \"access/Roles.sol\":5279:5301  hasRole(role, account) */\n      tag_160\n        /* \"access/Roles.sol\":5287:5291  role */\n      dup3\n        /* \"access/Roles.sol\":5293:5300  account */\n      dup3\n        /* \"access/Roles.sol\":5279:5286  hasRole */\n      tag_45\n        /* \"access/Roles.sol\":5279:5301  hasRole(role, account) */\n      jump\t// in\n    tag_160:\n        /* \"access/Roles.sol\":5274:5675  if (!hasRole(role, account)) {... */\n      tag_161\n      jumpi\n        /* \"access/Roles.sol\":5467:5495  Strings.toHexString(account) */\n      tag_162\n        /* \"access/Roles.sol\":5487:5494  account */\n      dup2\n        /* \"access/Roles.sol\":5467:5486  Strings.toHexString */\n      tag_163\n        /* \"access/Roles.sol\":5467:5495  Strings.toHexString(account) */\n      jump\t// in\n    tag_162:\n        /* \"access/Roles.sol\":5568:5606  Strings.toHexString(uint256(role), 32) */\n      tag_164\n        /* \"access/Roles.sol\":5596:5600  role */\n      dup4\n        /* \"access/Roles.sol\":5588:5601  uint256(role) */\n      0x00\n      shr\n        /* \"access/Roles.sol\":5603:5605  32 */\n      0x20\n        /* \"access/Roles.sol\":5568:5587  Strings.toHexString */\n      tag_165\n        /* \"access/Roles.sol\":5568:5606  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_164:\n        /* \"access/Roles.sol\":5372:5629  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"access/Roles.sol\":5318:5663  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"access/Roles.sol\":5274:5675  if (!hasRole(role, account)) {... */\n    tag_161:\n        /* \"access/Roles.sol\":5190:5682  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":6742:6890  function revokeRole(bytes32 role, address account) internal virtual onlyRole(getRoleAdmin(role),admin) {... */\n    tag_82:\n        /* \"access/Roles.sol\":6819:6837  getRoleAdmin(role) */\n      tag_170\n        /* \"access/Roles.sol\":6832:6836  role */\n      dup3\n        /* \"access/Roles.sol\":6819:6831  getRoleAdmin */\n      tag_24\n        /* \"access/Roles.sol\":6819:6837  getRoleAdmin(role) */\n      jump\t// in\n    tag_170:\n        /* \"access/Roles.sol\":6838:6843  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":3925:3948  _checkRole(role,sender) */\n      tag_172\n        /* \"access/Roles.sol\":3936:3940  role */\n      dup3\n        /* \"access/Roles.sol\":3941:3947  sender */\n      dup3\n        /* \"access/Roles.sol\":3925:3935  _checkRole */\n      tag_79\n        /* \"access/Roles.sol\":3925:3948  _checkRole(role,sender) */\n      jump\t// in\n    tag_172:\n        /* \"access/Roles.sol\":6856:6882  _revokeRole(role, account) */\n      tag_174\n        /* \"access/Roles.sol\":6868:6872  role */\n      dup5\n        /* \"access/Roles.sol\":6874:6881  account */\n      dup5\n        /* \"access/Roles.sol\":6856:6867  _revokeRole */\n      tag_67\n        /* \"access/Roles.sol\":6856:6882  _revokeRole(role, account) */\n      jump\t// in\n    tag_174:\n        /* \"access/Roles.sol\":6742:6890  function revokeRole(bytes32 role, address account) internal virtual onlyRole(getRoleAdmin(role),admin) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":6303:6449  function grantRole(bytes32 role, address account) internal virtual onlyRole(getRoleAdmin(role),admin) {... */\n    tag_125:\n        /* \"access/Roles.sol\":6379:6397  getRoleAdmin(role) */\n      tag_175\n        /* \"access/Roles.sol\":6392:6396  role */\n      dup3\n        /* \"access/Roles.sol\":6379:6391  getRoleAdmin */\n      tag_24\n        /* \"access/Roles.sol\":6379:6397  getRoleAdmin(role) */\n      jump\t// in\n    tag_175:\n        /* \"access/Roles.sol\":6398:6403  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":3925:3948  _checkRole(role,sender) */\n      tag_177\n        /* \"access/Roles.sol\":3936:3940  role */\n      dup3\n        /* \"access/Roles.sol\":3941:3947  sender */\n      dup3\n        /* \"access/Roles.sol\":3925:3935  _checkRole */\n      tag_79\n        /* \"access/Roles.sol\":3925:3948  _checkRole(role,sender) */\n      jump\t// in\n    tag_177:\n        /* \"access/Roles.sol\":6416:6441  _grantRole(role, account) */\n      tag_179\n        /* \"access/Roles.sol\":6427:6431  role */\n      dup5\n        /* \"access/Roles.sol\":6433:6440  account */\n      dup5\n        /* \"access/Roles.sol\":6416:6426  _grantRole */\n      tag_153\n        /* \"access/Roles.sol\":6416:6441  _grantRole(role, account) */\n      jump\t// in\n    tag_179:\n        /* \"access/Roles.sol\":6303:6449  function grantRole(bytes32 role, address account) internal virtual onlyRole(getRoleAdmin(role),admin) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"access/Owner.sol\":980:1172  function _transferOwnership(address _newOwner) private  ... */\n    tag_142:\n        /* \"access/Owner.sol\":1053:1069  address oldOwner */\n      0x00\n        /* \"access/Owner.sol\":1072:1078  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Owner.sol\":1053:1078  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"access/Owner.sol\":1098:1107  _newOwner */\n      dup2\n        /* \"access/Owner.sol\":1089:1095  _owner */\n      0x00\n      dup1\n        /* \"access/Owner.sol\":1089:1107  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"access/Owner.sol\":1154:1163  _newOwner */\n      dup2\n        /* \"access/Owner.sol\":1123:1164  OwnershipTransferred(oldOwner, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Owner.sol\":1144:1152  oldOwner */\n      dup2\n        /* \"access/Owner.sol\":1123:1164  OwnershipTransferred(oldOwner, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"access/Owner.sol\":1042:1172  {... */\n      pop\n        /* \"access/Owner.sol\":980:1172  function _transferOwnership(address _newOwner) private  ... */\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":9087:9326  function _grantRole(bytes32 role, address account) private  ... */\n    tag_153:\n        /* \"access/Roles.sol\":9169:9191  hasRole(role, account) */\n      tag_182\n        /* \"access/Roles.sol\":9177:9181  role */\n      dup3\n        /* \"access/Roles.sol\":9183:9190  account */\n      dup3\n        /* \"access/Roles.sol\":9169:9176  hasRole */\n      tag_45\n        /* \"access/Roles.sol\":9169:9191  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"access/Roles.sol\":9164:9319  if (!hasRole(role, account)) ... */\n      tag_183\n      jumpi\n        /* \"access/Roles.sol\":9250:9254  true */\n      0x01\n        /* \"access/Roles.sol\":9218:9224  _roles */\n      dup1\n        /* \"access/Roles.sol\":9218:9230  _roles[role] */\n      0x00\n        /* \"access/Roles.sol\":9225:9229  role */\n      dup5\n        /* \"access/Roles.sol\":9218:9230  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"access/Roles.sol\":9218:9238  _roles[role].members */\n      0x00\n      add\n        /* \"access/Roles.sol\":9218:9247  _roles[role].members[account] */\n      0x00\n        /* \"access/Roles.sol\":9239:9246  account */\n      dup4\n        /* \"access/Roles.sol\":9218:9247  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"access/Roles.sol\":9218:9254  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"access/Roles.sol\":9301:9306  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":9274:9307  RoleGranted(role, account, admin) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":9292:9299  account */\n      dup2\n        /* \"access/Roles.sol\":9274:9307  RoleGranted(role, account, admin) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":9286:9290  role */\n      dup4\n        /* \"access/Roles.sol\":9274:9307  RoleGranted(role, account, admin) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"access/Roles.sol\":9164:9319  if (!hasRole(role, account)) ... */\n    tag_183:\n        /* \"access/Roles.sol\":9087:9326  function _grantRole(bytes32 role, address account) private  ... */\n      pop\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_163:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_185\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2525:2529  addr */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2497:2508  toHexString */\n      tag_165\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_185:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2490:2549  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_165:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_189\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_189:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_190\n      jumpi\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n    tag_190:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_193\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_193:\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_195\n      tag_90\n      jump\t// in\n    tag_195:\n    tag_194:\n      0x20\n      add\n      add\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_197\n      tag_90\n      jump\t// in\n    tag_197:\n    tag_196:\n      0x20\n      add\n      add\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_201\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_201:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_202\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_202:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_198:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_204\n      tag_90\n      jump\t// in\n    tag_204:\n    tag_203:\n      byte\n      0xf8\n      shl\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_206\n      tag_90\n      jump\t// in\n    tag_206:\n    tag_205:\n      0x20\n      add\n      add\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      swap1\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_198)\n    tag_199:\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_213:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_215:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_216:\n        /* \"#utility.yul\":561:584   */\n      tag_256\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_215\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_257:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_217:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_259\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_216\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_17:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_262\n      tag_213\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":833:952   */\n    tag_261:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_263\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_217\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_218:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_219:\n        /* \"#utility.yul\":1268:1289   */\n      tag_266\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_218\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_20:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_268\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_219\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_220:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_221:\n        /* \"#utility.yul\":1674:1698   */\n      tag_271\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_220\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_272:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_222:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_274\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_221\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_23:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_277\n      tag_213\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1950:2069   */\n    tag_276:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_278\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_222\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_223:\n        /* \"#utility.yul\":2296:2320   */\n      tag_280\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_220\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_26:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_282\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_223\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_224:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_225:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_285\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_224\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_226:\n        /* \"#utility.yul\":2868:2892   */\n      tag_287\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_225\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_288:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_227:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_290\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_226\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_29:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_293\n      tag_213\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3161:3280   */\n    tag_292:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_294\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_222\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_295\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_227\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3877   */\n    tag_33:\n        /* \"#utility.yul\":3607:3613   */\n      0x00\n        /* \"#utility.yul\":3656:3658   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3635:3642   */\n      dup5\n        /* \"#utility.yul\":3631:3654   */\n      sub\n        /* \"#utility.yul\":3627:3659   */\n      slt\n        /* \"#utility.yul\":3624:3743   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3662:3741   */\n      tag_298\n      tag_213\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3624:3743   */\n    tag_297:\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3807:3860   */\n      tag_299\n        /* \"#utility.yul\":3852:3859   */\n      dup5\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup6\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3807:3860   */\n      tag_227\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3797:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3753:3870   */\n      pop\n        /* \"#utility.yul\":3548:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4357   */\n    tag_37:\n        /* \"#utility.yul\":3951:3957   */\n      0x00\n        /* \"#utility.yul\":3959:3965   */\n      dup1\n        /* \"#utility.yul\":4008:4010   */\n      0x40\n        /* \"#utility.yul\":3996:4005   */\n      dup4\n        /* \"#utility.yul\":3987:3994   */\n      dup6\n        /* \"#utility.yul\":3983:4006   */\n      sub\n        /* \"#utility.yul\":3979:4011   */\n      slt\n        /* \"#utility.yul\":3976:4095   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4014:4093   */\n      tag_302\n      tag_213\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3976:4095   */\n    tag_301:\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4159:4212   */\n      tag_303\n        /* \"#utility.yul\":4204:4211   */\n      dup6\n        /* \"#utility.yul\":4195:4201   */\n      dup3\n        /* \"#utility.yul\":4184:4193   */\n      dup7\n        /* \"#utility.yul\":4180:4202   */\n      add\n        /* \"#utility.yul\":4159:4212   */\n      tag_227\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4149:4212   */\n      swap3\n      pop\n        /* \"#utility.yul\":4105:4222   */\n      pop\n        /* \"#utility.yul\":4261:4263   */\n      0x20\n        /* \"#utility.yul\":4287:4340   */\n      tag_304\n        /* \"#utility.yul\":4332:4339   */\n      dup6\n        /* \"#utility.yul\":4323:4329   */\n      dup3\n        /* \"#utility.yul\":4312:4321   */\n      dup7\n        /* \"#utility.yul\":4308:4330   */\n      add\n        /* \"#utility.yul\":4287:4340   */\n      tag_227\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4277:4340   */\n      swap2\n      pop\n        /* \"#utility.yul\":4232:4350   */\n      pop\n        /* \"#utility.yul\":3883:4357   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4481   */\n    tag_228:\n        /* \"#utility.yul\":4450:4474   */\n      tag_306\n        /* \"#utility.yul\":4468:4473   */\n      dup2\n        /* \"#utility.yul\":4450:4474   */\n      tag_225\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4445:4448   */\n      dup3\n        /* \"#utility.yul\":4438:4475   */\n      mstore\n        /* \"#utility.yul\":4363:4481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4487:4709   */\n    tag_42:\n        /* \"#utility.yul\":4580:4584   */\n      0x00\n        /* \"#utility.yul\":4618:4620   */\n      0x20\n        /* \"#utility.yul\":4607:4616   */\n      dup3\n        /* \"#utility.yul\":4603:4621   */\n      add\n        /* \"#utility.yul\":4595:4621   */\n      swap1\n      pop\n        /* \"#utility.yul\":4631:4702   */\n      tag_308\n        /* \"#utility.yul\":4699:4700   */\n      0x00\n        /* \"#utility.yul\":4688:4697   */\n      dup4\n        /* \"#utility.yul\":4684:4701   */\n      add\n        /* \"#utility.yul\":4675:4681   */\n      dup5\n        /* \"#utility.yul\":4631:4702   */\n      tag_228\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4487:4709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4715:4884   */\n    tag_229:\n        /* \"#utility.yul\":4799:4810   */\n      0x00\n        /* \"#utility.yul\":4833:4839   */\n      dup3\n        /* \"#utility.yul\":4828:4831   */\n      dup3\n        /* \"#utility.yul\":4821:4840   */\n      mstore\n        /* \"#utility.yul\":4873:4877   */\n      0x20\n        /* \"#utility.yul\":4868:4871   */\n      dup3\n        /* \"#utility.yul\":4864:4878   */\n      add\n        /* \"#utility.yul\":4849:4878   */\n      swap1\n      pop\n        /* \"#utility.yul\":4715:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5124   */\n    tag_230:\n        /* \"#utility.yul\":5030:5064   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":5026:5027   */\n      0x00\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5014:5028   */\n      add\n        /* \"#utility.yul\":5007:5065   */\n      mstore\n        /* \"#utility.yul\":5099:5116   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":5094:5096   */\n      0x20\n        /* \"#utility.yul\":5086:5092   */\n      dup3\n        /* \"#utility.yul\":5082:5097   */\n      add\n        /* \"#utility.yul\":5075:5117   */\n      mstore\n        /* \"#utility.yul\":4890:5124   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5130:5496   */\n    tag_231:\n        /* \"#utility.yul\":5272:5275   */\n      0x00\n        /* \"#utility.yul\":5293:5360   */\n      tag_312\n        /* \"#utility.yul\":5357:5359   */\n      0x2f\n        /* \"#utility.yul\":5352:5355   */\n      dup4\n        /* \"#utility.yul\":5293:5360   */\n      tag_229\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5286:5360   */\n      swap2\n      pop\n        /* \"#utility.yul\":5369:5462   */\n      tag_313\n        /* \"#utility.yul\":5458:5461   */\n      dup3\n        /* \"#utility.yul\":5369:5462   */\n      tag_230\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":5487:5489   */\n      0x40\n        /* \"#utility.yul\":5482:5485   */\n      dup3\n        /* \"#utility.yul\":5478:5490   */\n      add\n        /* \"#utility.yul\":5471:5490   */\n      swap1\n      pop\n        /* \"#utility.yul\":5130:5496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5502:5921   */\n    tag_65:\n        /* \"#utility.yul\":5668:5672   */\n      0x00\n        /* \"#utility.yul\":5706:5708   */\n      0x20\n        /* \"#utility.yul\":5695:5704   */\n      dup3\n        /* \"#utility.yul\":5691:5709   */\n      add\n        /* \"#utility.yul\":5683:5709   */\n      swap1\n      pop\n        /* \"#utility.yul\":5755:5764   */\n      dup2\n        /* \"#utility.yul\":5749:5753   */\n      dup2\n        /* \"#utility.yul\":5745:5765   */\n      sub\n        /* \"#utility.yul\":5741:5742   */\n      0x00\n        /* \"#utility.yul\":5730:5739   */\n      dup4\n        /* \"#utility.yul\":5726:5743   */\n      add\n        /* \"#utility.yul\":5719:5766   */\n      mstore\n        /* \"#utility.yul\":5783:5914   */\n      tag_315\n        /* \"#utility.yul\":5909:5913   */\n      dup2\n        /* \"#utility.yul\":5783:5914   */\n      tag_231\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5775:5914   */\n      swap1\n      pop\n        /* \"#utility.yul\":5502:5921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5927:6004   */\n    tag_232:\n        /* \"#utility.yul\":5964:5971   */\n      0x00\n        /* \"#utility.yul\":5993:5998   */\n      dup2\n        /* \"#utility.yul\":5982:5998   */\n      swap1\n      pop\n        /* \"#utility.yul\":5927:6004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6010:6190   */\n    tag_233:\n        /* \"#utility.yul\":6058:6135   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6055:6056   */\n      0x00\n        /* \"#utility.yul\":6048:6136   */\n      mstore\n        /* \"#utility.yul\":6155:6159   */\n      0x11\n        /* \"#utility.yul\":6152:6153   */\n      0x04\n        /* \"#utility.yul\":6145:6160   */\n      mstore\n        /* \"#utility.yul\":6179:6183   */\n      0x24\n        /* \"#utility.yul\":6176:6177   */\n      0x00\n        /* \"#utility.yul\":6169:6184   */\n      revert\n        /* \"#utility.yul\":6196:6390   */\n    tag_87:\n        /* \"#utility.yul\":6236:6240   */\n      0x00\n        /* \"#utility.yul\":6256:6276   */\n      tag_319\n        /* \"#utility.yul\":6274:6275   */\n      dup3\n        /* \"#utility.yul\":6256:6276   */\n      tag_232\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6251:6276   */\n      swap2\n      pop\n        /* \"#utility.yul\":6290:6310   */\n      tag_320\n        /* \"#utility.yul\":6308:6309   */\n      dup4\n        /* \"#utility.yul\":6290:6310   */\n      tag_232\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6285:6310   */\n      swap3\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      dup3\n        /* \"#utility.yul\":6331:6332   */\n      dup3\n        /* \"#utility.yul\":6327:6336   */\n      sub\n        /* \"#utility.yul\":6319:6336   */\n      swap1\n      pop\n        /* \"#utility.yul\":6358:6359   */\n      dup2\n        /* \"#utility.yul\":6352:6356   */\n      dup2\n        /* \"#utility.yul\":6349:6360   */\n      gt\n        /* \"#utility.yul\":6346:6383   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6363:6381   */\n      tag_322\n      tag_233\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6346:6383   */\n    tag_321:\n        /* \"#utility.yul\":6196:6390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6396:6576   */\n    tag_90:\n        /* \"#utility.yul\":6444:6521   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6441:6442   */\n      0x00\n        /* \"#utility.yul\":6434:6522   */\n      mstore\n        /* \"#utility.yul\":6541:6545   */\n      0x32\n        /* \"#utility.yul\":6538:6539   */\n      0x04\n        /* \"#utility.yul\":6531:6546   */\n      mstore\n        /* \"#utility.yul\":6565:6569   */\n      0x24\n        /* \"#utility.yul\":6562:6563   */\n      0x00\n        /* \"#utility.yul\":6555:6570   */\n      revert\n        /* \"#utility.yul\":6582:6773   */\n    tag_95:\n        /* \"#utility.yul\":6622:6625   */\n      0x00\n        /* \"#utility.yul\":6641:6661   */\n      tag_325\n        /* \"#utility.yul\":6659:6660   */\n      dup3\n        /* \"#utility.yul\":6641:6661   */\n      tag_232\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6636:6661   */\n      swap2\n      pop\n        /* \"#utility.yul\":6675:6695   */\n      tag_326\n        /* \"#utility.yul\":6693:6694   */\n      dup4\n        /* \"#utility.yul\":6675:6695   */\n      tag_232\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6670:6695   */\n      swap3\n      pop\n        /* \"#utility.yul\":6718:6719   */\n      dup3\n        /* \"#utility.yul\":6715:6716   */\n      dup3\n        /* \"#utility.yul\":6711:6720   */\n      add\n        /* \"#utility.yul\":6704:6720   */\n      swap1\n      pop\n        /* \"#utility.yul\":6739:6742   */\n      dup1\n        /* \"#utility.yul\":6736:6737   */\n      dup3\n        /* \"#utility.yul\":6733:6743   */\n      gt\n        /* \"#utility.yul\":6730:6766   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6746:6764   */\n      tag_328\n      tag_233\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6730:6766   */\n    tag_327:\n        /* \"#utility.yul\":6582:6773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6779:7012   */\n    tag_103:\n        /* \"#utility.yul\":6818:6821   */\n      0x00\n        /* \"#utility.yul\":6841:6865   */\n      tag_330\n        /* \"#utility.yul\":6859:6864   */\n      dup3\n        /* \"#utility.yul\":6841:6865   */\n      tag_232\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6832:6865   */\n      swap2\n      pop\n        /* \"#utility.yul\":6887:6953   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6880:6885   */\n      dup3\n        /* \"#utility.yul\":6877:6954   */\n      sub\n        /* \"#utility.yul\":6874:6977   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6957:6975   */\n      tag_332\n      tag_233\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6874:6977   */\n    tag_331:\n        /* \"#utility.yul\":7004:7005   */\n      0x01\n        /* \"#utility.yul\":6997:7002   */\n      dup3\n        /* \"#utility.yul\":6993:7006   */\n      add\n        /* \"#utility.yul\":6986:7006   */\n      swap1\n      pop\n        /* \"#utility.yul\":6779:7012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7018:7198   */\n    tag_106:\n        /* \"#utility.yul\":7066:7143   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7063:7064   */\n      0x00\n        /* \"#utility.yul\":7056:7144   */\n      mstore\n        /* \"#utility.yul\":7163:7167   */\n      0x31\n        /* \"#utility.yul\":7160:7161   */\n      0x04\n        /* \"#utility.yul\":7153:7168   */\n      mstore\n        /* \"#utility.yul\":7187:7191   */\n      0x24\n        /* \"#utility.yul\":7184:7185   */\n      0x00\n        /* \"#utility.yul\":7177:7192   */\n      revert\n        /* \"#utility.yul\":7204:7429   */\n    tag_234:\n        /* \"#utility.yul\":7344:7378   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7340:7341   */\n      0x00\n        /* \"#utility.yul\":7332:7338   */\n      dup3\n        /* \"#utility.yul\":7328:7342   */\n      add\n        /* \"#utility.yul\":7321:7379   */\n      mstore\n        /* \"#utility.yul\":7413:7421   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7408:7410   */\n      0x20\n        /* \"#utility.yul\":7400:7406   */\n      dup3\n        /* \"#utility.yul\":7396:7411   */\n      add\n        /* \"#utility.yul\":7389:7422   */\n      mstore\n        /* \"#utility.yul\":7204:7429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7435:7801   */\n    tag_235:\n        /* \"#utility.yul\":7577:7580   */\n      0x00\n        /* \"#utility.yul\":7598:7665   */\n      tag_336\n        /* \"#utility.yul\":7662:7664   */\n      0x26\n        /* \"#utility.yul\":7657:7660   */\n      dup4\n        /* \"#utility.yul\":7598:7665   */\n      tag_229\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7591:7665   */\n      swap2\n      pop\n        /* \"#utility.yul\":7674:7767   */\n      tag_337\n        /* \"#utility.yul\":7763:7766   */\n      dup3\n        /* \"#utility.yul\":7674:7767   */\n      tag_234\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7792:7794   */\n      0x40\n        /* \"#utility.yul\":7787:7790   */\n      dup3\n        /* \"#utility.yul\":7783:7795   */\n      add\n        /* \"#utility.yul\":7776:7795   */\n      swap1\n      pop\n        /* \"#utility.yul\":7435:7801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7807:8226   */\n    tag_140:\n        /* \"#utility.yul\":7973:7977   */\n      0x00\n        /* \"#utility.yul\":8011:8013   */\n      0x20\n        /* \"#utility.yul\":8000:8009   */\n      dup3\n        /* \"#utility.yul\":7996:8014   */\n      add\n        /* \"#utility.yul\":7988:8014   */\n      swap1\n      pop\n        /* \"#utility.yul\":8060:8069   */\n      dup2\n        /* \"#utility.yul\":8054:8058   */\n      dup2\n        /* \"#utility.yul\":8050:8070   */\n      sub\n        /* \"#utility.yul\":8046:8047   */\n      0x00\n        /* \"#utility.yul\":8035:8044   */\n      dup4\n        /* \"#utility.yul\":8031:8048   */\n      add\n        /* \"#utility.yul\":8024:8071   */\n      mstore\n        /* \"#utility.yul\":8088:8219   */\n      tag_339\n        /* \"#utility.yul\":8214:8218   */\n      dup2\n        /* \"#utility.yul\":8088:8219   */\n      tag_235\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8080:8219   */\n      swap1\n      pop\n        /* \"#utility.yul\":7807:8226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8232:8414   */\n    tag_236:\n        /* \"#utility.yul\":8372:8406   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8368:8369   */\n      0x00\n        /* \"#utility.yul\":8360:8366   */\n      dup3\n        /* \"#utility.yul\":8356:8370   */\n      add\n        /* \"#utility.yul\":8349:8407   */\n      mstore\n        /* \"#utility.yul\":8232:8414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8420:8786   */\n    tag_237:\n        /* \"#utility.yul\":8562:8565   */\n      0x00\n        /* \"#utility.yul\":8583:8650   */\n      tag_342\n        /* \"#utility.yul\":8647:8649   */\n      0x20\n        /* \"#utility.yul\":8642:8645   */\n      dup4\n        /* \"#utility.yul\":8583:8650   */\n      tag_229\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8576:8650   */\n      swap2\n      pop\n        /* \"#utility.yul\":8659:8752   */\n      tag_343\n        /* \"#utility.yul\":8748:8751   */\n      dup3\n        /* \"#utility.yul\":8659:8752   */\n      tag_236\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8777:8779   */\n      0x20\n        /* \"#utility.yul\":8772:8775   */\n      dup3\n        /* \"#utility.yul\":8768:8780   */\n      add\n        /* \"#utility.yul\":8761:8780   */\n      swap1\n      pop\n        /* \"#utility.yul\":8420:8786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8792:9211   */\n    tag_158:\n        /* \"#utility.yul\":8958:8962   */\n      0x00\n        /* \"#utility.yul\":8996:8998   */\n      0x20\n        /* \"#utility.yul\":8985:8994   */\n      dup3\n        /* \"#utility.yul\":8981:8999   */\n      add\n        /* \"#utility.yul\":8973:8999   */\n      swap1\n      pop\n        /* \"#utility.yul\":9045:9054   */\n      dup2\n        /* \"#utility.yul\":9039:9043   */\n      dup2\n        /* \"#utility.yul\":9035:9055   */\n      sub\n        /* \"#utility.yul\":9031:9032   */\n      0x00\n        /* \"#utility.yul\":9020:9029   */\n      dup4\n        /* \"#utility.yul\":9016:9033   */\n      add\n        /* \"#utility.yul\":9009:9056   */\n      mstore\n        /* \"#utility.yul\":9073:9204   */\n      tag_345\n        /* \"#utility.yul\":9199:9203   */\n      dup2\n        /* \"#utility.yul\":9073:9204   */\n      tag_237\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9065:9204   */\n      swap1\n      pop\n        /* \"#utility.yul\":8792:9211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9217:9365   */\n    tag_238:\n        /* \"#utility.yul\":9319:9330   */\n      0x00\n        /* \"#utility.yul\":9356:9359   */\n      dup2\n        /* \"#utility.yul\":9341:9359   */\n      swap1\n      pop\n        /* \"#utility.yul\":9217:9365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9371:9544   */\n    tag_239:\n        /* \"#utility.yul\":9511:9536   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":9507:9508   */\n      0x00\n        /* \"#utility.yul\":9499:9505   */\n      dup3\n        /* \"#utility.yul\":9495:9509   */\n      add\n        /* \"#utility.yul\":9488:9537   */\n      mstore\n        /* \"#utility.yul\":9371:9544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9550:9952   */\n    tag_240:\n        /* \"#utility.yul\":9710:9713   */\n      0x00\n        /* \"#utility.yul\":9731:9816   */\n      tag_349\n        /* \"#utility.yul\":9813:9815   */\n      0x17\n        /* \"#utility.yul\":9808:9811   */\n      dup4\n        /* \"#utility.yul\":9731:9816   */\n      tag_238\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9724:9816   */\n      swap2\n      pop\n        /* \"#utility.yul\":9825:9918   */\n      tag_350\n        /* \"#utility.yul\":9914:9917   */\n      dup3\n        /* \"#utility.yul\":9825:9918   */\n      tag_239\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9943:9945   */\n      0x17\n        /* \"#utility.yul\":9938:9941   */\n      dup3\n        /* \"#utility.yul\":9934:9946   */\n      add\n        /* \"#utility.yul\":9927:9946   */\n      swap1\n      pop\n        /* \"#utility.yul\":9550:9952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9958:10057   */\n    tag_241:\n        /* \"#utility.yul\":10010:10016   */\n      0x00\n        /* \"#utility.yul\":10044:10049   */\n      dup2\n        /* \"#utility.yul\":10038:10050   */\n      mload\n        /* \"#utility.yul\":10028:10050   */\n      swap1\n      pop\n        /* \"#utility.yul\":9958:10057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10063:10309   */\n    tag_242:\n        /* \"#utility.yul\":10144:10145   */\n      0x00\n        /* \"#utility.yul\":10154:10267   */\n    tag_353:\n        /* \"#utility.yul\":10168:10174   */\n      dup4\n        /* \"#utility.yul\":10165:10166   */\n      dup2\n        /* \"#utility.yul\":10162:10175   */\n      lt\n        /* \"#utility.yul\":10154:10267   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":10253:10254   */\n      dup1\n        /* \"#utility.yul\":10248:10251   */\n      dup3\n        /* \"#utility.yul\":10244:10255   */\n      add\n        /* \"#utility.yul\":10238:10256   */\n      mload\n        /* \"#utility.yul\":10234:10235   */\n      dup2\n        /* \"#utility.yul\":10229:10232   */\n      dup5\n        /* \"#utility.yul\":10225:10236   */\n      add\n        /* \"#utility.yul\":10218:10257   */\n      mstore\n        /* \"#utility.yul\":10190:10192   */\n      0x20\n        /* \"#utility.yul\":10187:10188   */\n      dup2\n        /* \"#utility.yul\":10183:10193   */\n      add\n        /* \"#utility.yul\":10178:10193   */\n      swap1\n      pop\n        /* \"#utility.yul\":10154:10267   */\n      jump(tag_353)\n    tag_355:\n        /* \"#utility.yul\":10301:10302   */\n      0x00\n        /* \"#utility.yul\":10292:10298   */\n      dup5\n        /* \"#utility.yul\":10287:10290   */\n      dup5\n        /* \"#utility.yul\":10283:10299   */\n      add\n        /* \"#utility.yul\":10276:10303   */\n      mstore\n        /* \"#utility.yul\":10125:10309   */\n      pop\n        /* \"#utility.yul\":10063:10309   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10315:10705   */\n    tag_243:\n        /* \"#utility.yul\":10421:10424   */\n      0x00\n        /* \"#utility.yul\":10449:10488   */\n      tag_357\n        /* \"#utility.yul\":10482:10487   */\n      dup3\n        /* \"#utility.yul\":10449:10488   */\n      tag_241\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10504:10593   */\n      tag_358\n        /* \"#utility.yul\":10586:10592   */\n      dup2\n        /* \"#utility.yul\":10581:10584   */\n      dup6\n        /* \"#utility.yul\":10504:10593   */\n      tag_238\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10497:10593   */\n      swap4\n      pop\n        /* \"#utility.yul\":10602:10667   */\n      tag_359\n        /* \"#utility.yul\":10660:10666   */\n      dup2\n        /* \"#utility.yul\":10655:10658   */\n      dup6\n        /* \"#utility.yul\":10648:10652   */\n      0x20\n        /* \"#utility.yul\":10641:10646   */\n      dup7\n        /* \"#utility.yul\":10637:10653   */\n      add\n        /* \"#utility.yul\":10602:10667   */\n      tag_242\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10692:10698   */\n      dup1\n        /* \"#utility.yul\":10687:10690   */\n      dup5\n        /* \"#utility.yul\":10683:10699   */\n      add\n        /* \"#utility.yul\":10676:10699   */\n      swap2\n      pop\n        /* \"#utility.yul\":10425:10705   */\n      pop\n        /* \"#utility.yul\":10315:10705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10711:10878   */\n    tag_244:\n        /* \"#utility.yul\":10851:10870   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":10847:10848   */\n      0x00\n        /* \"#utility.yul\":10839:10845   */\n      dup3\n        /* \"#utility.yul\":10835:10849   */\n      add\n        /* \"#utility.yul\":10828:10871   */\n      mstore\n        /* \"#utility.yul\":10711:10878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10884:11286   */\n    tag_245:\n        /* \"#utility.yul\":11044:11047   */\n      0x00\n        /* \"#utility.yul\":11065:11150   */\n      tag_362\n        /* \"#utility.yul\":11147:11149   */\n      0x11\n        /* \"#utility.yul\":11142:11145   */\n      dup4\n        /* \"#utility.yul\":11065:11150   */\n      tag_238\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":11058:11150   */\n      swap2\n      pop\n        /* \"#utility.yul\":11159:11252   */\n      tag_363\n        /* \"#utility.yul\":11248:11251   */\n      dup3\n        /* \"#utility.yul\":11159:11252   */\n      tag_244\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11277:11279   */\n      0x11\n        /* \"#utility.yul\":11272:11275   */\n      dup3\n        /* \"#utility.yul\":11268:11280   */\n      add\n        /* \"#utility.yul\":11261:11280   */\n      swap1\n      pop\n        /* \"#utility.yul\":10884:11286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11292:12259   */\n    tag_167:\n        /* \"#utility.yul\":11674:11677   */\n      0x00\n        /* \"#utility.yul\":11696:11844   */\n      tag_365\n        /* \"#utility.yul\":11840:11843   */\n      dup3\n        /* \"#utility.yul\":11696:11844   */\n      tag_240\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11689:11844   */\n      swap2\n      pop\n        /* \"#utility.yul\":11861:11956   */\n      tag_366\n        /* \"#utility.yul\":11952:11955   */\n      dup3\n        /* \"#utility.yul\":11943:11949   */\n      dup6\n        /* \"#utility.yul\":11861:11956   */\n      tag_243\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":11854:11956   */\n      swap2\n      pop\n        /* \"#utility.yul\":11973:12121   */\n      tag_367\n        /* \"#utility.yul\":12117:12120   */\n      dup3\n        /* \"#utility.yul\":11973:12121   */\n      tag_245\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11966:12121   */\n      swap2\n      pop\n        /* \"#utility.yul\":12138:12233   */\n      tag_368\n        /* \"#utility.yul\":12229:12232   */\n      dup3\n        /* \"#utility.yul\":12220:12226   */\n      dup5\n        /* \"#utility.yul\":12138:12233   */\n      tag_243\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":12131:12233   */\n      swap2\n      pop\n        /* \"#utility.yul\":12250:12253   */\n      dup2\n        /* \"#utility.yul\":12243:12253   */\n      swap1\n      pop\n        /* \"#utility.yul\":11292:12259   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12265:12367   */\n    tag_246:\n        /* \"#utility.yul\":12306:12312   */\n      0x00\n        /* \"#utility.yul\":12357:12359   */\n      0x1f\n        /* \"#utility.yul\":12353:12360   */\n      not\n        /* \"#utility.yul\":12348:12350   */\n      0x1f\n        /* \"#utility.yul\":12341:12346   */\n      dup4\n        /* \"#utility.yul\":12337:12351   */\n      add\n        /* \"#utility.yul\":12333:12361   */\n      and\n        /* \"#utility.yul\":12323:12361   */\n      swap1\n      pop\n        /* \"#utility.yul\":12265:12367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12373:12750   */\n    tag_247:\n        /* \"#utility.yul\":12461:12464   */\n      0x00\n        /* \"#utility.yul\":12489:12528   */\n      tag_371\n        /* \"#utility.yul\":12522:12527   */\n      dup3\n        /* \"#utility.yul\":12489:12528   */\n      tag_241\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":12544:12615   */\n      tag_372\n        /* \"#utility.yul\":12608:12614   */\n      dup2\n        /* \"#utility.yul\":12603:12606   */\n      dup6\n        /* \"#utility.yul\":12544:12615   */\n      tag_229\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":12537:12615   */\n      swap4\n      pop\n        /* \"#utility.yul\":12624:12689   */\n      tag_373\n        /* \"#utility.yul\":12682:12688   */\n      dup2\n        /* \"#utility.yul\":12677:12680   */\n      dup6\n        /* \"#utility.yul\":12670:12674   */\n      0x20\n        /* \"#utility.yul\":12663:12668   */\n      dup7\n        /* \"#utility.yul\":12659:12675   */\n      add\n        /* \"#utility.yul\":12624:12689   */\n      tag_242\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12714:12743   */\n      tag_374\n        /* \"#utility.yul\":12736:12742   */\n      dup2\n        /* \"#utility.yul\":12714:12743   */\n      tag_246\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":12709:12712   */\n      dup5\n        /* \"#utility.yul\":12705:12744   */\n      add\n        /* \"#utility.yul\":12698:12744   */\n      swap2\n      pop\n        /* \"#utility.yul\":12465:12750   */\n      pop\n        /* \"#utility.yul\":12373:12750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12756:13069   */\n    tag_169:\n        /* \"#utility.yul\":12869:12873   */\n      0x00\n        /* \"#utility.yul\":12907:12909   */\n      0x20\n        /* \"#utility.yul\":12896:12905   */\n      dup3\n        /* \"#utility.yul\":12892:12910   */\n      add\n        /* \"#utility.yul\":12884:12910   */\n      swap1\n      pop\n        /* \"#utility.yul\":12956:12965   */\n      dup2\n        /* \"#utility.yul\":12950:12954   */\n      dup2\n        /* \"#utility.yul\":12946:12966   */\n      sub\n        /* \"#utility.yul\":12942:12943   */\n      0x00\n        /* \"#utility.yul\":12931:12940   */\n      dup4\n        /* \"#utility.yul\":12927:12944   */\n      add\n        /* \"#utility.yul\":12920:12967   */\n      mstore\n        /* \"#utility.yul\":12984:13062   */\n      tag_376\n        /* \"#utility.yul\":13057:13061   */\n      dup2\n        /* \"#utility.yul\":13048:13054   */\n      dup5\n        /* \"#utility.yul\":12984:13062   */\n      tag_247\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12976:13062   */\n      swap1\n      pop\n        /* \"#utility.yul\":12756:13069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13075:13485   */\n    tag_188:\n        /* \"#utility.yul\":13115:13122   */\n      0x00\n        /* \"#utility.yul\":13138:13158   */\n      tag_378\n        /* \"#utility.yul\":13156:13157   */\n      dup3\n        /* \"#utility.yul\":13138:13158   */\n      tag_232\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":13133:13158   */\n      swap2\n      pop\n        /* \"#utility.yul\":13172:13192   */\n      tag_379\n        /* \"#utility.yul\":13190:13191   */\n      dup4\n        /* \"#utility.yul\":13172:13192   */\n      tag_232\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":13167:13192   */\n      swap3\n      pop\n        /* \"#utility.yul\":13227:13228   */\n      dup3\n        /* \"#utility.yul\":13224:13225   */\n      dup3\n        /* \"#utility.yul\":13220:13229   */\n      mul\n        /* \"#utility.yul\":13249:13279   */\n      tag_380\n        /* \"#utility.yul\":13267:13278   */\n      dup2\n        /* \"#utility.yul\":13249:13279   */\n      tag_232\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":13238:13279   */\n      swap2\n      pop\n        /* \"#utility.yul\":13428:13429   */\n      dup3\n        /* \"#utility.yul\":13419:13426   */\n      dup3\n        /* \"#utility.yul\":13415:13430   */\n      div\n        /* \"#utility.yul\":13412:13413   */\n      dup5\n        /* \"#utility.yul\":13409:13431   */\n      eq\n        /* \"#utility.yul\":13389:13390   */\n      dup4\n        /* \"#utility.yul\":13382:13391   */\n      iszero\n        /* \"#utility.yul\":13362:13445   */\n      or\n        /* \"#utility.yul\":13339:13478   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":13458:13476   */\n      tag_382\n      tag_233\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":13339:13478   */\n    tag_381:\n        /* \"#utility.yul\":13123:13485   */\n      pop\n        /* \"#utility.yul\":13075:13485   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13491:13671   */\n    tag_192:\n        /* \"#utility.yul\":13539:13616   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13536:13537   */\n      0x00\n        /* \"#utility.yul\":13529:13617   */\n      mstore\n        /* \"#utility.yul\":13636:13640   */\n      0x41\n        /* \"#utility.yul\":13633:13634   */\n      0x04\n        /* \"#utility.yul\":13626:13641   */\n      mstore\n        /* \"#utility.yul\":13660:13664   */\n      0x24\n        /* \"#utility.yul\":13657:13658   */\n      0x00\n        /* \"#utility.yul\":13650:13665   */\n      revert\n        /* \"#utility.yul\":13677:13848   */\n    tag_208:\n        /* \"#utility.yul\":13716:13719   */\n      0x00\n        /* \"#utility.yul\":13739:13763   */\n      tag_385\n        /* \"#utility.yul\":13757:13762   */\n      dup3\n        /* \"#utility.yul\":13739:13763   */\n      tag_232\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":13730:13763   */\n      swap2\n      pop\n        /* \"#utility.yul\":13785:13789   */\n      0x00\n        /* \"#utility.yul\":13778:13783   */\n      dup3\n        /* \"#utility.yul\":13775:13790   */\n      sub\n        /* \"#utility.yul\":13772:13813   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":13793:13811   */\n      tag_387\n      tag_233\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13772:13813   */\n    tag_386:\n        /* \"#utility.yul\":13840:13841   */\n      0x01\n        /* \"#utility.yul\":13833:13838   */\n      dup3\n        /* \"#utility.yul\":13829:13842   */\n      sub\n        /* \"#utility.yul\":13822:13842   */\n      swap1\n      pop\n        /* \"#utility.yul\":13677:13848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13854:14036   */\n    tag_248:\n        /* \"#utility.yul\":13994:14028   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":13990:13991   */\n      0x00\n        /* \"#utility.yul\":13982:13988   */\n      dup3\n        /* \"#utility.yul\":13978:13992   */\n      add\n        /* \"#utility.yul\":13971:14029   */\n      mstore\n        /* \"#utility.yul\":13854:14036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14042:14408   */\n    tag_249:\n        /* \"#utility.yul\":14184:14187   */\n      0x00\n        /* \"#utility.yul\":14205:14272   */\n      tag_390\n        /* \"#utility.yul\":14269:14271   */\n      0x20\n        /* \"#utility.yul\":14264:14267   */\n      dup4\n        /* \"#utility.yul\":14205:14272   */\n      tag_229\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":14198:14272   */\n      swap2\n      pop\n        /* \"#utility.yul\":14281:14374   */\n      tag_391\n        /* \"#utility.yul\":14370:14373   */\n      dup3\n        /* \"#utility.yul\":14281:14374   */\n      tag_248\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14399:14401   */\n      0x20\n        /* \"#utility.yul\":14394:14397   */\n      dup3\n        /* \"#utility.yul\":14390:14402   */\n      add\n        /* \"#utility.yul\":14383:14402   */\n      swap1\n      pop\n        /* \"#utility.yul\":14042:14408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14414:14833   */\n    tag_211:\n        /* \"#utility.yul\":14580:14584   */\n      0x00\n        /* \"#utility.yul\":14618:14620   */\n      0x20\n        /* \"#utility.yul\":14607:14616   */\n      dup3\n        /* \"#utility.yul\":14603:14621   */\n      add\n        /* \"#utility.yul\":14595:14621   */\n      swap1\n      pop\n        /* \"#utility.yul\":14667:14676   */\n      dup2\n        /* \"#utility.yul\":14661:14665   */\n      dup2\n        /* \"#utility.yul\":14657:14677   */\n      sub\n        /* \"#utility.yul\":14653:14654   */\n      0x00\n        /* \"#utility.yul\":14642:14651   */\n      dup4\n        /* \"#utility.yul\":14638:14655   */\n      add\n        /* \"#utility.yul\":14631:14678   */\n      mstore\n        /* \"#utility.yul\":14695:14826   */\n      tag_393\n        /* \"#utility.yul\":14821:14825   */\n      dup2\n        /* \"#utility.yul\":14695:14826   */\n      tag_249\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":14687:14826   */\n      swap1\n      pop\n        /* \"#utility.yul\":14414:14833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200b97f41989442ffa3f6514f574b6db57e2d272eddd6224db358e55bb3f8e06c864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_242": {
									"entryPoint": null,
									"id": 242,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_306": {
									"entryPoint": 39,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336100218161002760201b60201c565b506100eb565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611870806100fa6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461016257806391d1485414610180578063a217fddf146101b0578063a8f2be76146101ce578063ac0cc465146101fe578063f2fde38b1461021a576100a9565b806301ffc9a7146100ae578063248a9ca3146100de57806336568abe1461010e5780634420e4861461012a5780634cc2f08114610146575b600080fd5b6100c860048036038101906100c39190611078565b610236565b6040516100d591906110c0565b60405180910390f35b6100f860048036038101906100f39190611111565b6102a0565b604051610105919061114d565b60405180910390f35b610128600480360381019061012391906111c6565b6102c0565b005b610144600480360381019061013f9190611206565b61035e565b005b610160600480360381019061015b9190611233565b610380565b005b61016a6105ab565b6040516101779190611282565b60405180910390f35b61019a600480360381019061019591906111c6565b6105d4565b6040516101a791906110c0565b60405180910390f35b6101b861063f565b6040516101c5919061114d565b60405180910390f35b6101e860048036038101906101e39190611206565b610646565b6040516101f591906110c0565b60405180910390f35b61021860048036038101906102139190611233565b6106f4565b005b610234600480360381019061022f9190611206565b61083d565b005b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600060016000838152602001908152602001600020600101549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790611320565b60405180910390fd5b61035a82826108e3565b5050565b6103678161083d565b610370816109e0565b61037d6000801b82610a2f565b50565b8161038a81610a6a565b6000801b836103998282610ae2565b6103c37f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f85610b67565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060005b60016003805490506103fd9190611379565b81101561055b578573ffffffffffffffffffffffffffffffffffffffff166003828154811061042f5761042e6113ad565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610479578091505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82146105485760036001826104af91906113dc565b815481106104c0576104bf6113ad565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600382815481106104ff576104fe6113ad565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808061055390611410565b9150506103eb565b50600380548061056e5761056d611458565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b600080600090505b6003805490508110156106e9578273ffffffffffffffffffffffffffffffffffffffff1660038281548110610686576106856113ad565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106d65760019150506106ef565b80806106e190611410565b91505061064e565b50600090505b919050565b816106fe81610a6a565b6000801b8361070d8282610ae2565b6107377f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f85610bad565b60005b6003805490508110156107d1578473ffffffffffffffffffffffffffffffffffffffff1660038281548110610772576107716113ad565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107be5750610836565b80806107c990611410565b91505061073a565b506003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661086781610a6a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd906114f9565b60405180910390fd5b6108df82610bf3565b5050565b6108ed82826105d4565b156109dc5760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b806109ea81610a6a565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610a5b81610a6a565b610a658383610cb7565b505050565b8073ffffffffffffffffffffffffffffffffffffffff16610a896105ab565b73ffffffffffffffffffffffffffffffffffffffff1614610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad690611565565b60405180910390fd5b50565b610aec82826105d4565b610b6357610af981610db2565b610b078360001c6020610ddf565b604051602001610b1892919061168e565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a9190611712565b60405180910390fd5b5050565b610b70826102a0565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b9d8282610ae2565b610ba784846108e3565b50505050565b610bb6826102a0565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610be38282610ae2565b610bed8484610cb7565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cc182826105d4565b610dae57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6060610dd88273ffffffffffffffffffffffffffffffffffffffff16601460ff16610ddf565b9050919050565b606060006002836002610df29190611734565b610dfc91906113dc565b67ffffffffffffffff811115610e1557610e14611776565b5b6040519080825280601f01601f191660200182016040528015610e475781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e7f57610e7e6113ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610ee357610ee26113ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610f239190611734565b610f2d91906113dc565b90505b6001811115610fcd577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610f6f57610f6e6113ad565b5b1a60f81b828281518110610f8657610f856113ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610fc6906117a5565b9050610f30565b5060008414611011576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110089061181a565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61105581611020565b811461106057600080fd5b50565b6000813590506110728161104c565b92915050565b60006020828403121561108e5761108d61101b565b5b600061109c84828501611063565b91505092915050565b60008115159050919050565b6110ba816110a5565b82525050565b60006020820190506110d560008301846110b1565b92915050565b6000819050919050565b6110ee816110db565b81146110f957600080fd5b50565b60008135905061110b816110e5565b92915050565b6000602082840312156111275761112661101b565b5b6000611135848285016110fc565b91505092915050565b611147816110db565b82525050565b6000602082019050611162600083018461113e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061119382611168565b9050919050565b6111a381611188565b81146111ae57600080fd5b50565b6000813590506111c08161119a565b92915050565b600080604083850312156111dd576111dc61101b565b5b60006111eb858286016110fc565b92505060206111fc858286016111b1565b9150509250929050565b60006020828403121561121c5761121b61101b565b5b600061122a848285016111b1565b91505092915050565b6000806040838503121561124a5761124961101b565b5b6000611258858286016111b1565b9250506020611269858286016111b1565b9150509250929050565b61127c81611188565b82525050565b60006020820190506112976000830184611273565b92915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061130a602f8361129d565b9150611315826112ae565b604082019050919050565b60006020820190508181036000830152611339816112fd565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061138482611340565b915061138f83611340565b92508282039050818111156113a7576113a661134a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113e782611340565b91506113f283611340565b925082820190508082111561140a5761140961134a565b5b92915050565b600061141b82611340565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361144d5761144c61134a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114e360268361129d565b91506114ee82611487565b604082019050919050565b60006020820190508181036000830152611512816114d6565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061154f60208361129d565b915061155a82611519565b602082019050919050565b6000602082019050818103600083015261157e81611542565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006115c6601783611585565b91506115d182611590565b601782019050919050565b600081519050919050565b60005b838110156116055780820151818401526020810190506115ea565b60008484015250505050565b600061161c826115dc565b6116268185611585565b93506116368185602086016115e7565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611678601183611585565b915061168382611642565b601182019050919050565b6000611699826115b9565b91506116a58285611611565b91506116b08261166b565b91506116bc8284611611565b91508190509392505050565b6000601f19601f8301169050919050565b60006116e4826115dc565b6116ee818561129d565b93506116fe8185602086016115e7565b611707816116c8565b840191505092915050565b6000602082019050818103600083015261172c81846116d9565b905092915050565b600061173f82611340565b915061174a83611340565b925082820261175881611340565b9150828204841483151761176f5761176e61134a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006117b082611340565b9150600082036117c3576117c261134a565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061180460208361129d565b915061180f826117ce565b602082019050919050565b60006020820190508181036000830152611833816117f7565b905091905056fea26469706673582212200b97f41989442ffa3f6514f574b6db57e2d272eddd6224db358e55bb3f8e06c864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH2 0x21 DUP2 PUSH2 0x27 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xEB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1870 DUP1 PUSH2 0xFA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xA8F2BE76 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xAC0CC465 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x4CC2F081 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x347 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A DUP3 DUP3 PUSH2 0x8E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x367 DUP2 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x370 DUP2 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x37D PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0xA2F JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH2 0x38A DUP2 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP4 PUSH2 0x399 DUP3 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x3C3 PUSH32 0xAF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F DUP6 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x55B JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x42F JUMPI PUSH2 0x42E PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x479 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ PUSH2 0x548 JUMPI PUSH1 0x3 PUSH1 0x1 DUP3 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4FF JUMPI PUSH2 0x4FE PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0x553 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3EB JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x56E JUMPI PUSH2 0x56D PUSH2 0x1458 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6E9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x686 JUMPI PUSH2 0x685 PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D6 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x6EF JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6E1 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x64E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x6FE DUP2 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP4 PUSH2 0x70D DUP3 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x737 PUSH32 0xAF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F DUP6 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x7D1 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x772 JUMPI PUSH2 0x771 PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BE JUMPI POP PUSH2 0x836 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7C9 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x73A JUMP JUMPDEST POP PUSH1 0x3 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x867 DUP2 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CD SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DF DUP3 PUSH2 0xBF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8ED DUP3 DUP3 PUSH2 0x5D4 JUMP JUMPDEST ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0x9EA DUP2 PUSH2 0xA6A JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA5B DUP2 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0xA65 DUP4 DUP4 PUSH2 0xCB7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA89 PUSH2 0x5AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD6 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAEC DUP3 DUP3 PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0xB63 JUMPI PUSH2 0xAF9 DUP2 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0xB07 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB18 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5A SWAP2 SWAP1 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB70 DUP3 PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB9D DUP3 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0xBA7 DUP5 DUP5 PUSH2 0x8E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xBB6 DUP3 PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE3 DUP3 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0xBED DUP5 DUP5 PUSH2 0xCB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCC1 DUP3 DUP3 PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0xDAE JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDD8 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xDDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE14 PUSH2 0x1776 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE47 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0x13AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xEE3 JUMPI PUSH2 0xEE2 PUSH2 0x13AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0xF2D SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFCD JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xF6F JUMPI PUSH2 0xF6E PUSH2 0x13AD JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF86 JUMPI PUSH2 0xF85 PUSH2 0x13AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xFC6 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST SWAP1 POP PUSH2 0xF30 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP1 PUSH2 0x181A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1055 DUP2 PUSH2 0x1020 JUMP JUMPDEST DUP2 EQ PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1072 DUP2 PUSH2 0x104C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108E JUMPI PUSH2 0x108D PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109C DUP5 DUP3 DUP6 ADD PUSH2 0x1063 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BA DUP2 PUSH2 0x10A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x10DB JUMP JUMPDEST DUP2 EQ PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x110B DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1135 DUP5 DUP3 DUP6 ADD PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1147 DUP2 PUSH2 0x10DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1162 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1193 DUP3 PUSH2 0x1168 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A3 DUP2 PUSH2 0x1188 JUMP JUMPDEST DUP2 EQ PUSH2 0x11AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11C0 DUP2 PUSH2 0x119A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11DD JUMPI PUSH2 0x11DC PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11EB DUP6 DUP3 DUP7 ADD PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11FC DUP6 DUP3 DUP7 ADD PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH2 0x121B PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122A DUP5 DUP3 DUP6 ADD PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124A JUMPI PUSH2 0x1249 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1258 DUP6 DUP3 DUP7 ADD PUSH2 0x11B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1269 DUP6 DUP3 DUP7 ADD PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x127C DUP2 PUSH2 0x1188 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1297 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1273 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130A PUSH1 0x2F DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x1315 DUP3 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1339 DUP2 PUSH2 0x12FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1384 DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH2 0x138F DUP4 PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13A7 JUMPI PUSH2 0x13A6 PUSH2 0x134A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13E7 DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 DUP4 PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x140A JUMPI PUSH2 0x1409 PUSH2 0x134A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141B DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x144D JUMPI PUSH2 0x144C PUSH2 0x134A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E3 PUSH1 0x26 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x14EE DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1512 DUP2 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154F PUSH1 0x20 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x155A DUP3 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157E DUP2 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C6 PUSH1 0x17 DUP4 PUSH2 0x1585 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D1 DUP3 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1605 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161C DUP3 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x1626 DUP2 DUP6 PUSH2 0x1585 JUMP JUMPDEST SWAP4 POP PUSH2 0x1636 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15E7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1678 PUSH1 0x11 DUP4 PUSH2 0x1585 JUMP JUMPDEST SWAP2 POP PUSH2 0x1683 DUP3 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1699 DUP3 PUSH2 0x15B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A5 DUP3 DUP6 PUSH2 0x1611 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B0 DUP3 PUSH2 0x166B JUMP JUMPDEST SWAP2 POP PUSH2 0x16BC DUP3 DUP5 PUSH2 0x1611 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E4 DUP3 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x16EE DUP2 DUP6 PUSH2 0x129D JUMP JUMPDEST SWAP4 POP PUSH2 0x16FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x16C8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172C DUP2 DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173F DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH2 0x174A DUP4 PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1758 DUP2 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x176F JUMPI PUSH2 0x176E PUSH2 0x134A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B0 DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x134A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 PUSH1 0x20 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x180F DUP3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1833 DUP2 PUSH2 0x17F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND SWAP8 DELEGATECALL NOT DUP10 PREVRANDAO 0x2F STATICCALL EXTCODEHASH PUSH6 0x14F574B6DB57 0xE2 0xD2 PUSH19 0xEDDD6224DB358E55BB3F8E06C864736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "735:2966:0:-:0;;;1329:34;;;;;;;;;;1349:10;448:29:1;467:9;448:18;;;:29;;:::i;:::-;400:85;735:2966:0;;980:192:1;1053:16;1072:6;;;;;;;;;;;1053:25;;1098:9;1089:6;;:18;;;;;;;;;;;;;;;;;;1154:9;1123:41;;1144:8;1123:41;;;;;;;;;;;;1042:130;980:192;:::o;735:2966:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_375": {
									"entryPoint": 1599,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_256": {
									"entryPoint": 2666,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_461": {
									"entryPoint": 2786,
									"id": 461,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_618": {
									"entryPoint": 3255,
									"id": 618,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_648": {
									"entryPoint": 2275,
									"id": 648,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setupRole_553": {
									"entryPoint": 2607,
									"id": 553,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_306": {
									"entryPoint": 3059,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_475": {
									"entryPoint": 672,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_495": {
									"entryPoint": 2989,
									"id": 495,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_422": {
									"entryPoint": 1492,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAccess_92": {
									"entryPoint": 1606,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_264": {
									"entryPoint": 1451,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@register_61": {
									"entryPoint": 862,
									"id": 61,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_536": {
									"entryPoint": 704,
									"id": 536,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_515": {
									"entryPoint": 2919,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_Doctor_211": {
									"entryPoint": 896,
									"id": 211,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setAdmin_390": {
									"entryPoint": 2528,
									"id": 390,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setupRole_Doctor_138": {
									"entryPoint": 1780,
									"id": 138,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1134": {
									"entryPoint": 566,
									"id": 1134,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1065": {
									"entryPoint": 3551,
									"id": 1065,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1085": {
									"entryPoint": 3506,
									"id": 1085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_287": {
									"entryPoint": 2109,
									"id": 287,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5037,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 5520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14836:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:10",
														"type": ""
													}
												],
												"src": "1518:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:10"
															},
															"nodeType": "YulIf",
															"src": "1654:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:10",
														"type": ""
													}
												],
												"src": "1601:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:10",
														"type": ""
													}
												],
												"src": "1729:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:32:10"
															},
															"nodeType": "YulIf",
															"src": "1950:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2079:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1921:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:10",
														"type": ""
													}
												],
												"src": "1874:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2262:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2269:3:10",
														"type": ""
													}
												],
												"src": "2209:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2431:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2441:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2403:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2415:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2426:4:10",
														"type": ""
													}
												],
												"src": "2333:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2616:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2588:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2598:7:10",
														"type": ""
													}
												],
												"src": "2561:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2748:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2720:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2730:7:10",
														"type": ""
													}
												],
												"src": "2693:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:43:10"
															},
															"nodeType": "YulIf",
															"src": "2848:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2831:5:10",
														"type": ""
													}
												],
												"src": "2795:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2975:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2985:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2953:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2961:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2969:5:10",
														"type": ""
													}
												],
												"src": "2923:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3151:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3197:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:32:10"
															},
															"nodeType": "YulIf",
															"src": "3161:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3290:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3334:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3417:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3113:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3124:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3136:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3144:6:10",
														"type": ""
													}
												],
												"src": "3068:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3660:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3662:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3662:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3662:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3635:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3631:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3656:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:32:10"
															},
															"nodeType": "YulIf",
															"src": "3624:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3753:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3768:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3772:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3797:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3807:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3807:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3584:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3595:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3607:6:10",
														"type": ""
													}
												],
												"src": "3548:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3966:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4012:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4014:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4014:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4014:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3987:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:32:10"
															},
															"nodeType": "YulIf",
															"src": "3976:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4105:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4120:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4134:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4124:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4149:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4184:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4195:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4180:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4180:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4204:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4159:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4159:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4149:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4232:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4247:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4261:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4251:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4277:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4312:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4323:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4308:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4308:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4332:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4287:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4287:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4277:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3928:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3939:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3951:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3959:6:10",
														"type": ""
													}
												],
												"src": "3883:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4428:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4445:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4468:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4450:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4450:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4438:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4438:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4416:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4423:3:10",
														"type": ""
													}
												],
												"src": "4363:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4585:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4595:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4607:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4618:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4603:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4603:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4595:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4675:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4699:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4684:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4631:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4557:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4569:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4580:4:10",
														"type": ""
													}
												],
												"src": "4487:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4811:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4828:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4833:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4849:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4868:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4873:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4864:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4849:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4783:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4788:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4799:11:10",
														"type": ""
													}
												],
												"src": "4715:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4996:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5030:34:10",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5007:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5007:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5086:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5094:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5082:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5082:15:10"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5099:17:10",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5075:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5075:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4988:6:10",
														"type": ""
													}
												],
												"src": "4890:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5276:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5286:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5352:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5357:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5293:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5293:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5286:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5458:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "5369:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5369:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5471:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5482:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5487:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5478:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5478:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5471:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5264:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5272:3:10",
														"type": ""
													}
												],
												"src": "5130:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5673:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5683:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5695:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5706:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5691:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5683:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5730:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5741:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5726:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5726:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5749:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5745:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5745:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5719:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5775:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5909:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5783:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5775:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5653:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5668:4:10",
														"type": ""
													}
												],
												"src": "5502:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5972:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5982:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5993:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5982:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5954:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5964:7:10",
														"type": ""
													}
												],
												"src": "5927:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6038:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6058:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6048:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6152:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6155:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6145:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6145:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6145:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6176:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6179:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6169:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6169:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6169:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6010:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6241:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6251:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6274:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6256:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6256:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6251:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6285:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6308:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6290:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6285:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6319:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6331:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6334:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6327:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6319:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6361:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6363:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6363:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6363:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6352:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6358:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6349:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6349:11:10"
															},
															"nodeType": "YulIf",
															"src": "6346:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6227:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6230:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6236:4:10",
														"type": ""
													}
												],
												"src": "6196:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6424:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6441:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6434:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6434:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6538:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6541:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6531:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6531:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6565:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6555:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6555:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6396:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6626:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6636:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6659:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6641:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6636:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6670:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6693:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6675:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6670:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6704:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6715:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6718:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6711:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6744:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6746:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6746:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6746:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6736:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6739:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6733:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6733:10:10"
															},
															"nodeType": "YulIf",
															"src": "6730:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6613:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6616:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6622:3:10",
														"type": ""
													}
												],
												"src": "6582:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6822:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6832:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6859:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6841:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6841:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6832:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6955:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6957:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6957:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6957:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6880:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6887:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6877:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:77:10"
															},
															"nodeType": "YulIf",
															"src": "6874:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6986:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6997:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7004:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6993:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6986:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6808:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6818:3:10",
														"type": ""
													}
												],
												"src": "6779:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7046:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7063:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7066:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7056:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7056:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7056:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7160:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7163:4:10",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7153:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7153:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7153:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7184:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7187:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7177:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7177:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7177:15:10"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "7018:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7310:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7332:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7340:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7328:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7328:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7344:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7321:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7321:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7400:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7408:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7396:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7396:15:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7413:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7389:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7389:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7302:6:10",
														"type": ""
													}
												],
												"src": "7204:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7581:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7591:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7657:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7662:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7598:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7598:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7591:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7674:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7674:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7776:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7787:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7792:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7783:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7783:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7776:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7569:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7577:3:10",
														"type": ""
													}
												],
												"src": "7435:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7978:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7988:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8000:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8011:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7996:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7988:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8035:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8046:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8031:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8031:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8054:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8060:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8050:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8050:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8024:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8024:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8024:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8080:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8214:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8088:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8088:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8080:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7958:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7973:4:10",
														"type": ""
													}
												],
												"src": "7807:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8338:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8360:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8368:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8356:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8356:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8372:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8349:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8349:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8349:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8330:6:10",
														"type": ""
													}
												],
												"src": "8232:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8566:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8576:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8642:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8647:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8583:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8583:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8576:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8748:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8659:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8659:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8659:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8761:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8772:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8777:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8768:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8761:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8554:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8562:3:10",
														"type": ""
													}
												],
												"src": "8420:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8963:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8973:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8985:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8996:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8981:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8981:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8973:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9020:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9031:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9016:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9039:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9045:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9035:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9035:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9009:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9009:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9009:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9065:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9199:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9073:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9073:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9065:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8943:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8958:4:10",
														"type": ""
													}
												],
												"src": "8792:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9331:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9341:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9356:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9341:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9303:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9308:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9319:11:10",
														"type": ""
													}
												],
												"src": "9217:148:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9477:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9499:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9507:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9495:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9495:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9511:25:10",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9488:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9469:6:10",
														"type": ""
													}
												],
												"src": "9371:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9714:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9724:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9808:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9813:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9731:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9731:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9724:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9914:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "9825:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9825:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9825:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9927:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9938:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9943:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9934:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9934:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9927:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9702:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9710:3:10",
														"type": ""
													}
												],
												"src": "9550:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10017:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10028:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10044:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10038:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10028:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10000:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10010:6:10",
														"type": ""
													}
												],
												"src": "9958:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10125:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10135:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10144:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10139:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10204:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10229:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10234:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10225:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10225:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10248:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10253:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10244:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10244:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10238:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10238:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10218:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10218:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10218:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10165:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10168:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10162:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10162:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10176:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10178:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10187:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10190:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10183:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10183:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10178:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10158:3:10",
																"statements": []
															},
															"src": "10154:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10287:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10292:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10283:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10283:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10301:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10276:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10276:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10276:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10107:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10112:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10117:6:10",
														"type": ""
													}
												],
												"src": "10063:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10425:280:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10435:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10482:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10449:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10449:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10439:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10497:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10581:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10586:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10504:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10504:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10497:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10641:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10648:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10637:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10637:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10655:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10660:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10602:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10602:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10602:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10676:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10687:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10692:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10683:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10676:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10406:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10413:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10421:3:10",
														"type": ""
													}
												],
												"src": "10315:390:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10817:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10839:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10847:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10835:14:10"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10851:19:10",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10828:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10828:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10828:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10809:6:10",
														"type": ""
													}
												],
												"src": "10711:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11048:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11058:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11142:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11147:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11065:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11065:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11058:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11248:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "11159:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11159:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11159:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11261:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11272:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11277:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11268:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11268:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11261:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11036:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11044:3:10",
														"type": ""
													}
												],
												"src": "10884:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11678:581:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11689:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11840:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11696:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11696:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11689:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11854:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11943:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11952:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11861:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11861:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11854:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11966:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12117:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11973:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11973:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11966:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12131:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12220:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12229:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12138:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12131:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12243:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12250:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12243:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11649:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11655:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11663:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11674:3:10",
														"type": ""
													}
												],
												"src": "11292:967:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12313:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12323:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12341:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12348:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12337:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12337:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12357:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12353:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12353:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12333:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12333:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12323:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12296:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12306:6:10",
														"type": ""
													}
												],
												"src": "12265:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12465:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12475:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12522:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12489:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12489:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12479:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12537:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12603:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12608:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12544:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12537:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12663:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12670:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12659:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12659:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12677:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12682:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12624:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12624:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12624:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12698:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12709:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12736:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12714:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12714:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12705:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12698:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12446:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12453:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12461:3:10",
														"type": ""
													}
												],
												"src": "12373:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12874:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12884:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12896:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12907:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12892:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12892:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12884:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12931:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12942:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12927:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12927:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12950:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12956:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12946:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12920:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12920:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12920:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12976:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13048:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13057:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12984:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12984:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12976:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12846:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12858:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12869:4:10",
														"type": ""
													}
												],
												"src": "12756:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13123:362:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13133:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13156:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13138:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13138:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13133:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13167:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13190:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13172:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13172:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13167:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13201:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13224:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13227:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13220:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13220:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "13205:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13238:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "13267:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13249:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13249:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13238:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13456:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13458:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13458:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13458:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13389:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13382:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13382:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13412:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "13419:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "13428:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13415:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13415:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13409:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13409:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "13362:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13362:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13342:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13342:113:10"
															},
															"nodeType": "YulIf",
															"src": "13339:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13106:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13109:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13115:7:10",
														"type": ""
													}
												],
												"src": "13075:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13519:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13539:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13529:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13529:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13633:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13636:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13626:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13626:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13626:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13657:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13660:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13650:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13650:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13650:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13491:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13720:128:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13730:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13757:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13739:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13739:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13730:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13791:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13793:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13793:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13793:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13778:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13785:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13775:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:15:10"
															},
															"nodeType": "YulIf",
															"src": "13772:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13822:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13833:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13840:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13829:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13829:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13822:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13706:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13716:3:10",
														"type": ""
													}
												],
												"src": "13677:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13960:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13982:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13990:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13978:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13978:14:10"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13994:34:10",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13971:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13971:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13971:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13952:6:10",
														"type": ""
													}
												],
												"src": "13854:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14188:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14198:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14264:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14269:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14205:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14205:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14198:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14370:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "14281:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14281:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14281:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14383:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14394:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14399:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14390:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14390:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14383:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14176:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14184:3:10",
														"type": ""
													}
												],
												"src": "14042:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14585:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14595:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14607:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14618:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14603:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14603:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14595:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14642:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14653:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14638:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14638:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14661:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14667:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14657:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14657:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14631:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14631:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14631:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14687:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14821:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14695:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14687:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14565:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14580:4:10",
														"type": ""
													}
												],
												"src": "14414:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461016257806391d1485414610180578063a217fddf146101b0578063a8f2be76146101ce578063ac0cc465146101fe578063f2fde38b1461021a576100a9565b806301ffc9a7146100ae578063248a9ca3146100de57806336568abe1461010e5780634420e4861461012a5780634cc2f08114610146575b600080fd5b6100c860048036038101906100c39190611078565b610236565b6040516100d591906110c0565b60405180910390f35b6100f860048036038101906100f39190611111565b6102a0565b604051610105919061114d565b60405180910390f35b610128600480360381019061012391906111c6565b6102c0565b005b610144600480360381019061013f9190611206565b61035e565b005b610160600480360381019061015b9190611233565b610380565b005b61016a6105ab565b6040516101779190611282565b60405180910390f35b61019a600480360381019061019591906111c6565b6105d4565b6040516101a791906110c0565b60405180910390f35b6101b861063f565b6040516101c5919061114d565b60405180910390f35b6101e860048036038101906101e39190611206565b610646565b6040516101f591906110c0565b60405180910390f35b61021860048036038101906102139190611233565b6106f4565b005b610234600480360381019061022f9190611206565b61083d565b005b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600060016000838152602001908152602001600020600101549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790611320565b60405180910390fd5b61035a82826108e3565b5050565b6103678161083d565b610370816109e0565b61037d6000801b82610a2f565b50565b8161038a81610a6a565b6000801b836103998282610ae2565b6103c37f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f85610b67565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060005b60016003805490506103fd9190611379565b81101561055b578573ffffffffffffffffffffffffffffffffffffffff166003828154811061042f5761042e6113ad565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610479578091505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82146105485760036001826104af91906113dc565b815481106104c0576104bf6113ad565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600382815481106104ff576104fe6113ad565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808061055390611410565b9150506103eb565b50600380548061056e5761056d611458565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b600080600090505b6003805490508110156106e9578273ffffffffffffffffffffffffffffffffffffffff1660038281548110610686576106856113ad565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106d65760019150506106ef565b80806106e190611410565b91505061064e565b50600090505b919050565b816106fe81610a6a565b6000801b8361070d8282610ae2565b6107377f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f85610bad565b60005b6003805490508110156107d1578473ffffffffffffffffffffffffffffffffffffffff1660038281548110610772576107716113ad565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107be5750610836565b80806107c990611410565b91505061073a565b506003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661086781610a6a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd906114f9565b60405180910390fd5b6108df82610bf3565b5050565b6108ed82826105d4565b156109dc5760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b806109ea81610a6a565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610a5b81610a6a565b610a658383610cb7565b505050565b8073ffffffffffffffffffffffffffffffffffffffff16610a896105ab565b73ffffffffffffffffffffffffffffffffffffffff1614610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad690611565565b60405180910390fd5b50565b610aec82826105d4565b610b6357610af981610db2565b610b078360001c6020610ddf565b604051602001610b1892919061168e565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a9190611712565b60405180910390fd5b5050565b610b70826102a0565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b9d8282610ae2565b610ba784846108e3565b50505050565b610bb6826102a0565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610be38282610ae2565b610bed8484610cb7565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cc182826105d4565b610dae57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6060610dd88273ffffffffffffffffffffffffffffffffffffffff16601460ff16610ddf565b9050919050565b606060006002836002610df29190611734565b610dfc91906113dc565b67ffffffffffffffff811115610e1557610e14611776565b5b6040519080825280601f01601f191660200182016040528015610e475781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e7f57610e7e6113ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610ee357610ee26113ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610f239190611734565b610f2d91906113dc565b90505b6001811115610fcd577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610f6f57610f6e6113ad565b5b1a60f81b828281518110610f8657610f856113ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610fc6906117a5565b9050610f30565b5060008414611011576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110089061181a565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61105581611020565b811461106057600080fd5b50565b6000813590506110728161104c565b92915050565b60006020828403121561108e5761108d61101b565b5b600061109c84828501611063565b91505092915050565b60008115159050919050565b6110ba816110a5565b82525050565b60006020820190506110d560008301846110b1565b92915050565b6000819050919050565b6110ee816110db565b81146110f957600080fd5b50565b60008135905061110b816110e5565b92915050565b6000602082840312156111275761112661101b565b5b6000611135848285016110fc565b91505092915050565b611147816110db565b82525050565b6000602082019050611162600083018461113e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061119382611168565b9050919050565b6111a381611188565b81146111ae57600080fd5b50565b6000813590506111c08161119a565b92915050565b600080604083850312156111dd576111dc61101b565b5b60006111eb858286016110fc565b92505060206111fc858286016111b1565b9150509250929050565b60006020828403121561121c5761121b61101b565b5b600061122a848285016111b1565b91505092915050565b6000806040838503121561124a5761124961101b565b5b6000611258858286016111b1565b9250506020611269858286016111b1565b9150509250929050565b61127c81611188565b82525050565b60006020820190506112976000830184611273565b92915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061130a602f8361129d565b9150611315826112ae565b604082019050919050565b60006020820190508181036000830152611339816112fd565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061138482611340565b915061138f83611340565b92508282039050818111156113a7576113a661134a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113e782611340565b91506113f283611340565b925082820190508082111561140a5761140961134a565b5b92915050565b600061141b82611340565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361144d5761144c61134a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114e360268361129d565b91506114ee82611487565b604082019050919050565b60006020820190508181036000830152611512816114d6565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061154f60208361129d565b915061155a82611519565b602082019050919050565b6000602082019050818103600083015261157e81611542565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006115c6601783611585565b91506115d182611590565b601782019050919050565b600081519050919050565b60005b838110156116055780820151818401526020810190506115ea565b60008484015250505050565b600061161c826115dc565b6116268185611585565b93506116368185602086016115e7565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611678601183611585565b915061168382611642565b601182019050919050565b6000611699826115b9565b91506116a58285611611565b91506116b08261166b565b91506116bc8284611611565b91508190509392505050565b6000601f19601f8301169050919050565b60006116e4826115dc565b6116ee818561129d565b93506116fe8185602086016115e7565b611707816116c8565b840191505092915050565b6000602082019050818103600083015261172c81846116d9565b905092915050565b600061173f82611340565b915061174a83611340565b925082820261175881611340565b9150828204841483151761176f5761176e61134a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006117b082611340565b9150600082036117c3576117c261134a565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061180460208361129d565b915061180f826117ce565b602082019050919050565b60006020820190508181036000830152611833816117f7565b905091905056fea26469706673582212200b97f41989442ffa3f6514f574b6db57e2d272eddd6224db358e55bb3f8e06c864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xA8F2BE76 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xAC0CC465 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x4CC2F081 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x347 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A DUP3 DUP3 PUSH2 0x8E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x367 DUP2 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x370 DUP2 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x37D PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0xA2F JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH2 0x38A DUP2 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP4 PUSH2 0x399 DUP3 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x3C3 PUSH32 0xAF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F DUP6 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x55B JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x42F JUMPI PUSH2 0x42E PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x479 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ PUSH2 0x548 JUMPI PUSH1 0x3 PUSH1 0x1 DUP3 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4FF JUMPI PUSH2 0x4FE PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0x553 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3EB JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x56E JUMPI PUSH2 0x56D PUSH2 0x1458 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6E9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x686 JUMPI PUSH2 0x685 PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D6 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x6EF JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6E1 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x64E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x6FE DUP2 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP4 PUSH2 0x70D DUP3 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x737 PUSH32 0xAF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F DUP6 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x7D1 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x772 JUMPI PUSH2 0x771 PUSH2 0x13AD JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BE JUMPI POP PUSH2 0x836 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7C9 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x73A JUMP JUMPDEST POP PUSH1 0x3 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x867 DUP2 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CD SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DF DUP3 PUSH2 0xBF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8ED DUP3 DUP3 PUSH2 0x5D4 JUMP JUMPDEST ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0x9EA DUP2 PUSH2 0xA6A JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA5B DUP2 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0xA65 DUP4 DUP4 PUSH2 0xCB7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA89 PUSH2 0x5AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD6 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAEC DUP3 DUP3 PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0xB63 JUMPI PUSH2 0xAF9 DUP2 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0xB07 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB18 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5A SWAP2 SWAP1 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB70 DUP3 PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB9D DUP3 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0xBA7 DUP5 DUP5 PUSH2 0x8E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xBB6 DUP3 PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE3 DUP3 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0xBED DUP5 DUP5 PUSH2 0xCB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCC1 DUP3 DUP3 PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0xDAE JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDD8 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xDDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE14 PUSH2 0x1776 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE47 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0x13AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xEE3 JUMPI PUSH2 0xEE2 PUSH2 0x13AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0xF2D SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFCD JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xF6F JUMPI PUSH2 0xF6E PUSH2 0x13AD JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF86 JUMPI PUSH2 0xF85 PUSH2 0x13AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xFC6 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST SWAP1 POP PUSH2 0xF30 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP1 PUSH2 0x181A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1055 DUP2 PUSH2 0x1020 JUMP JUMPDEST DUP2 EQ PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1072 DUP2 PUSH2 0x104C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108E JUMPI PUSH2 0x108D PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109C DUP5 DUP3 DUP6 ADD PUSH2 0x1063 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BA DUP2 PUSH2 0x10A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x10DB JUMP JUMPDEST DUP2 EQ PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x110B DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1135 DUP5 DUP3 DUP6 ADD PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1147 DUP2 PUSH2 0x10DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1162 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1193 DUP3 PUSH2 0x1168 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A3 DUP2 PUSH2 0x1188 JUMP JUMPDEST DUP2 EQ PUSH2 0x11AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11C0 DUP2 PUSH2 0x119A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11DD JUMPI PUSH2 0x11DC PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11EB DUP6 DUP3 DUP7 ADD PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11FC DUP6 DUP3 DUP7 ADD PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH2 0x121B PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122A DUP5 DUP3 DUP6 ADD PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124A JUMPI PUSH2 0x1249 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1258 DUP6 DUP3 DUP7 ADD PUSH2 0x11B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1269 DUP6 DUP3 DUP7 ADD PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x127C DUP2 PUSH2 0x1188 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1297 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1273 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130A PUSH1 0x2F DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x1315 DUP3 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1339 DUP2 PUSH2 0x12FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1384 DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH2 0x138F DUP4 PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13A7 JUMPI PUSH2 0x13A6 PUSH2 0x134A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13E7 DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 DUP4 PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x140A JUMPI PUSH2 0x1409 PUSH2 0x134A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141B DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x144D JUMPI PUSH2 0x144C PUSH2 0x134A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E3 PUSH1 0x26 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x14EE DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1512 DUP2 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154F PUSH1 0x20 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x155A DUP3 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157E DUP2 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C6 PUSH1 0x17 DUP4 PUSH2 0x1585 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D1 DUP3 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1605 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161C DUP3 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x1626 DUP2 DUP6 PUSH2 0x1585 JUMP JUMPDEST SWAP4 POP PUSH2 0x1636 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15E7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1678 PUSH1 0x11 DUP4 PUSH2 0x1585 JUMP JUMPDEST SWAP2 POP PUSH2 0x1683 DUP3 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1699 DUP3 PUSH2 0x15B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A5 DUP3 DUP6 PUSH2 0x1611 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B0 DUP3 PUSH2 0x166B JUMP JUMPDEST SWAP2 POP PUSH2 0x16BC DUP3 DUP5 PUSH2 0x1611 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E4 DUP3 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x16EE DUP2 DUP6 PUSH2 0x129D JUMP JUMPDEST SWAP4 POP PUSH2 0x16FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x16C8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172C DUP2 DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173F DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH2 0x174A DUP4 PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1758 DUP2 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x176F JUMPI PUSH2 0x176E PUSH2 0x134A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B0 DUP3 PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x134A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 PUSH1 0x20 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x180F DUP3 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1833 DUP2 PUSH2 0x17F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND SWAP8 DELEGATECALL NOT DUP10 PREVRANDAO 0x2F STATICCALL EXTCODEHASH PUSH6 0x14F574B6DB57 0xE2 0xD2 PUSH19 0xEDDD6224DB358E55BB3F8E06C864736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "735:2966:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;829:155:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:122:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7445:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1489:174:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3270:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;653:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4340:138:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3281:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2698:223:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2927:337;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;754:218:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;829:155:5;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;5871:122:2:-;5936:7;5963:6;:12;5970:4;5963:12;;;;;;;;;;;:22;;;5956:29;;5871:122;;;:::o;7445:206::-;7549:5;;;;;;;;;;;7538:16;;:7;:16;;;7530:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7617:26;7629:4;7635:7;7617:11;:26::i;:::-;7445:206;;:::o;1489:174:0:-;1549:27;1567:8;1549:17;:27::i;:::-;1586:18;1595:8;1586;:18::i;:::-;1614:40;3326:4:2;1625:18:0;;1645:8;1614:10;:40::i;:::-;1489:174;:::o;3270:429::-;3351:8;352:20:1;364:7;352:11;:20::i;:::-;3326:4:2::1;3378:18:0::0;::::1;3398:8;3925:23:2;3936:4;3941:6;3925:10;:23::i;:::-;3422:32:0::2;1063:24;3446:7;3422:10;:32::i;:::-;3464:7;3474:2;3464:12;;3490:9;3486:187;3516:1;3504:4;:11;;;;:13;;;;:::i;:::-;3502:1;:15;3486:187;;;3559:7;3548:18;;:4;3553:1;3548:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:18;;::::0;3545:51:::2;;3594:1;3584:12;;3545:51;3623:2;3618:3;:7;3615:47;;3653:4;3660:1;3658;:3;;;;:::i;:::-;3653:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3643:4;3648:1;3643:7;;;;;;;;:::i;:::-;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;3615:47;3518:3;;;;;:::i;:::-;;;;3486:187;;;;3682:4;:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3412:287;383:1:1::1;;3270:429:0::0;;;:::o;653:93:1:-;699:7;732:6;;;;;;;;;;;725:13;;653:93;:::o;4340:138:2:-;4417:4;4441:6;:12;4448:4;4441:12;;;;;;;;;;;:20;;:29;4462:7;4441:29;;;;;;;;;;;;;;;;;;;;;;;;;4434:36;;4340:138;;;;:::o;3281:49::-;3326:4;3281:49;;;:::o;2698:223:0:-;2755:4;2779:9;2789:1;2779:11;;2775:118;2793:4;:11;;;;2791:1;:13;2775:118;;;2846:7;2835:18;;:4;2840:1;2835:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:18;;;2832:50;;2878:4;2871:11;;;;;2832:50;2805:3;;;;;:::i;:::-;;;;2775:118;;;;2909:5;2902:12;;2698:223;;;;:::o;2927:337::-;3007:8;352:20:1;364:7;352:11;:20::i;:::-;3326:4:2::1;3031:18:0::0;::::1;3051:8;3925:23:2;3936:4;3941:6;3925:10;:23::i;:::-;3075:31:0::2;1063:24;3098:7;3075:9;:31::i;:::-;3121:9;3117:113;3135:4;:11;;;;3133:1;:13;3117:113;;;3188:7;3177:18;;:4;3182:1;3177:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:18;;::::0;3174:46:::2;;3213:7;;;3174:46;3147:3;;;;;:::i;:::-;;;;3117:113;;;;3239:4;3249:7;3239:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3959:1:2;383::1::1;;2927:337:0::0;;;:::o;754:218:1:-;825:6;;;;;;;;;;352:20;364:7;352:11;:20::i;:::-;879:1:::1;858:23;;:9;:23;;::::0;850:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;935:29;954:9;935:18;:29::i;:::-;754:218:::0;;:::o;9506:224:2:-;9582:22;9590:4;9596:7;9582;:22::i;:::-;9578:145;;;9653:5;9621:6;:12;9628:4;9621:12;;;;;;;;;;;:20;;:29;9642:7;9621:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;9705:5;;;;;;;;;;;9678:33;;9696:7;9678:33;;9690:4;9678:33;;;;;;;;;;9578:145;9506:224;;:::o;3369:102::-;3423:7;352:20:1;364:7;352:11;:20::i;:::-;3456:7:2::1;3448:5;;:15;;;;;;;;;;;;;;;;;;3369:102:::0;;:::o;8358:134::-;8436:5;;;;;;;;;;;352:20:1;364:7;352:11;:20::i;:::-;8459:25:2::1;8470:4;8476:7;8459:10;:25::i;:::-;8358:134:::0;;;:::o;497:148:1:-;593:7;582:18;;:7;:5;:7::i;:::-;:18;;;574:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;497:148;:::o;5190:492:2:-;5279:22;5287:4;5293:7;5279;:22::i;:::-;5274:401;;5467:28;5487:7;5467:19;:28::i;:::-;5568:38;5596:4;5588:13;;5603:2;5568:19;:38::i;:::-;5372:257;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5318:345;;;;;;;;;;;:::i;:::-;;;;;;;;5274:401;5190:492;;:::o;6742:148::-;6819:18;6832:4;6819:12;:18::i;:::-;6838:5;;;;;;;;;;;3925:23;3936:4;3941:6;3925:10;:23::i;:::-;6856:26:::1;6868:4;6874:7;6856:11;:26::i;:::-;6742:148:::0;;;;:::o;6303:146::-;6379:18;6392:4;6379:12;:18::i;:::-;6398:5;;;;;;;;;;;3925:23;3936:4;3941:6;3925:10;:23::i;:::-;6416:25:::1;6427:4;6433:7;6416:10;:25::i;:::-;6303:146:::0;;;;:::o;980:192:1:-;1053:16;1072:6;;;;;;;;;;;1053:25;;1098:9;1089:6;;:18;;;;;;;;;;;;;;;;;;1154:9;1123:41;;1144:8;1123:41;;;;;;;;;;;;1042:130;980:192;:::o;9087:239:2:-;9169:22;9177:4;9183:7;9169;:22::i;:::-;9164:155;;9250:4;9218:6;:12;9225:4;9218:12;;;;;;;;;;;:20;;:29;9239:7;9218:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;9301:5;;;;;;;;;;;9274:33;;9292:7;9274:33;;9286:4;9274:33;;;;;;;;;;9164:155;9087:239;;:::o;2407:149:4:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;88:117:10:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:329::-;3607:6;3656:2;3644:9;3635:7;3631:23;3627:32;3624:119;;;3662:79;;:::i;:::-;3624:119;3782:1;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3753:117;3548:329;;;;:::o;3883:474::-;3951:6;3959;4008:2;3996:9;3987:7;3983:23;3979:32;3976:119;;;4014:79;;:::i;:::-;3976:119;4134:1;4159:53;4204:7;4195:6;4184:9;4180:22;4159:53;:::i;:::-;4149:63;;4105:117;4261:2;4287:53;4332:7;4323:6;4312:9;4308:22;4287:53;:::i;:::-;4277:63;;4232:118;3883:474;;;;;:::o;4363:118::-;4450:24;4468:5;4450:24;:::i;:::-;4445:3;4438:37;4363:118;;:::o;4487:222::-;4580:4;4618:2;4607:9;4603:18;4595:26;;4631:71;4699:1;4688:9;4684:17;4675:6;4631:71;:::i;:::-;4487:222;;;;:::o;4715:169::-;4799:11;4833:6;4828:3;4821:19;4873:4;4868:3;4864:14;4849:29;;4715:169;;;;:::o;4890:234::-;5030:34;5026:1;5018:6;5014:14;5007:58;5099:17;5094:2;5086:6;5082:15;5075:42;4890:234;:::o;5130:366::-;5272:3;5293:67;5357:2;5352:3;5293:67;:::i;:::-;5286:74;;5369:93;5458:3;5369:93;:::i;:::-;5487:2;5482:3;5478:12;5471:19;;5130:366;;;:::o;5502:419::-;5668:4;5706:2;5695:9;5691:18;5683:26;;5755:9;5749:4;5745:20;5741:1;5730:9;5726:17;5719:47;5783:131;5909:4;5783:131;:::i;:::-;5775:139;;5502:419;;;:::o;5927:77::-;5964:7;5993:5;5982:16;;5927:77;;;:::o;6010:180::-;6058:77;6055:1;6048:88;6155:4;6152:1;6145:15;6179:4;6176:1;6169:15;6196:194;6236:4;6256:20;6274:1;6256:20;:::i;:::-;6251:25;;6290:20;6308:1;6290:20;:::i;:::-;6285:25;;6334:1;6331;6327:9;6319:17;;6358:1;6352:4;6349:11;6346:37;;;6363:18;;:::i;:::-;6346:37;6196:194;;;;:::o;6396:180::-;6444:77;6441:1;6434:88;6541:4;6538:1;6531:15;6565:4;6562:1;6555:15;6582:191;6622:3;6641:20;6659:1;6641:20;:::i;:::-;6636:25;;6675:20;6693:1;6675:20;:::i;:::-;6670:25;;6718:1;6715;6711:9;6704:16;;6739:3;6736:1;6733:10;6730:36;;;6746:18;;:::i;:::-;6730:36;6582:191;;;;:::o;6779:233::-;6818:3;6841:24;6859:5;6841:24;:::i;:::-;6832:33;;6887:66;6880:5;6877:77;6874:103;;6957:18;;:::i;:::-;6874:103;7004:1;6997:5;6993:13;6986:20;;6779:233;;;:::o;7018:180::-;7066:77;7063:1;7056:88;7163:4;7160:1;7153:15;7187:4;7184:1;7177:15;7204:225;7344:34;7340:1;7332:6;7328:14;7321:58;7413:8;7408:2;7400:6;7396:15;7389:33;7204:225;:::o;7435:366::-;7577:3;7598:67;7662:2;7657:3;7598:67;:::i;:::-;7591:74;;7674:93;7763:3;7674:93;:::i;:::-;7792:2;7787:3;7783:12;7776:19;;7435:366;;;:::o;7807:419::-;7973:4;8011:2;8000:9;7996:18;7988:26;;8060:9;8054:4;8050:20;8046:1;8035:9;8031:17;8024:47;8088:131;8214:4;8088:131;:::i;:::-;8080:139;;7807:419;;;:::o;8232:182::-;8372:34;8368:1;8360:6;8356:14;8349:58;8232:182;:::o;8420:366::-;8562:3;8583:67;8647:2;8642:3;8583:67;:::i;:::-;8576:74;;8659:93;8748:3;8659:93;:::i;:::-;8777:2;8772:3;8768:12;8761:19;;8420:366;;;:::o;8792:419::-;8958:4;8996:2;8985:9;8981:18;8973:26;;9045:9;9039:4;9035:20;9031:1;9020:9;9016:17;9009:47;9073:131;9199:4;9073:131;:::i;:::-;9065:139;;8792:419;;;:::o;9217:148::-;9319:11;9356:3;9341:18;;9217:148;;;;:::o;9371:173::-;9511:25;9507:1;9499:6;9495:14;9488:49;9371:173;:::o;9550:402::-;9710:3;9731:85;9813:2;9808:3;9731:85;:::i;:::-;9724:92;;9825:93;9914:3;9825:93;:::i;:::-;9943:2;9938:3;9934:12;9927:19;;9550:402;;;:::o;9958:99::-;10010:6;10044:5;10038:12;10028:22;;9958:99;;;:::o;10063:246::-;10144:1;10154:113;10168:6;10165:1;10162:13;10154:113;;;10253:1;10248:3;10244:11;10238:18;10234:1;10229:3;10225:11;10218:39;10190:2;10187:1;10183:10;10178:15;;10154:113;;;10301:1;10292:6;10287:3;10283:16;10276:27;10125:184;10063:246;;;:::o;10315:390::-;10421:3;10449:39;10482:5;10449:39;:::i;:::-;10504:89;10586:6;10581:3;10504:89;:::i;:::-;10497:96;;10602:65;10660:6;10655:3;10648:4;10641:5;10637:16;10602:65;:::i;:::-;10692:6;10687:3;10683:16;10676:23;;10425:280;10315:390;;;;:::o;10711:167::-;10851:19;10847:1;10839:6;10835:14;10828:43;10711:167;:::o;10884:402::-;11044:3;11065:85;11147:2;11142:3;11065:85;:::i;:::-;11058:92;;11159:93;11248:3;11159:93;:::i;:::-;11277:2;11272:3;11268:12;11261:19;;10884:402;;;:::o;11292:967::-;11674:3;11696:148;11840:3;11696:148;:::i;:::-;11689:155;;11861:95;11952:3;11943:6;11861:95;:::i;:::-;11854:102;;11973:148;12117:3;11973:148;:::i;:::-;11966:155;;12138:95;12229:3;12220:6;12138:95;:::i;:::-;12131:102;;12250:3;12243:10;;11292:967;;;;;:::o;12265:102::-;12306:6;12357:2;12353:7;12348:2;12341:5;12337:14;12333:28;12323:38;;12265:102;;;:::o;12373:377::-;12461:3;12489:39;12522:5;12489:39;:::i;:::-;12544:71;12608:6;12603:3;12544:71;:::i;:::-;12537:78;;12624:65;12682:6;12677:3;12670:4;12663:5;12659:16;12624:65;:::i;:::-;12714:29;12736:6;12714:29;:::i;:::-;12709:3;12705:39;12698:46;;12465:285;12373:377;;;;:::o;12756:313::-;12869:4;12907:2;12896:9;12892:18;12884:26;;12956:9;12950:4;12946:20;12942:1;12931:9;12927:17;12920:47;12984:78;13057:4;13048:6;12984:78;:::i;:::-;12976:86;;12756:313;;;;:::o;13075:410::-;13115:7;13138:20;13156:1;13138:20;:::i;:::-;13133:25;;13172:20;13190:1;13172:20;:::i;:::-;13167:25;;13227:1;13224;13220:9;13249:30;13267:11;13249:30;:::i;:::-;13238:41;;13428:1;13419:7;13415:15;13412:1;13409:22;13389:1;13382:9;13362:83;13339:139;;13458:18;;:::i;:::-;13339:139;13123:362;13075:410;;;;:::o;13491:180::-;13539:77;13536:1;13529:88;13636:4;13633:1;13626:15;13660:4;13657:1;13650:15;13677:171;13716:3;13739:24;13757:5;13739:24;:::i;:::-;13730:33;;13785:4;13778:5;13775:15;13772:41;;13793:18;;:::i;:::-;13772:41;13840:1;13833:5;13829:13;13822:20;;13677:171;;;:::o;13854:182::-;13994:34;13990:1;13982:6;13978:14;13971:58;13854:182;:::o;14042:366::-;14184:3;14205:67;14269:2;14264:3;14205:67;:::i;:::-;14198:74;;14281:93;14370:3;14281:93;:::i;:::-;14399:2;14394:3;14390:12;14383:19;;14042:366;;;:::o;14414:419::-;14580:4;14618:2;14607:9;14603:18;14595:26;;14667:9;14661:4;14657:20;14653:1;14642:9;14638:17;14631:47;14695:131;14821:4;14695:131;:::i;:::-;14687:139;;14414:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1251200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "379",
								"getRoleAdmin(bytes32)": "infinite",
								"hasRole(bytes32,address)": "3162",
								"isAccess(address)": "infinite",
								"owner()": "2522",
								"register(address)": "infinite",
								"renounceRole(bytes32,address)": "33756",
								"revokeRole_Doctor(address,address)": "infinite",
								"setupRole_Doctor(address,address)": "infinite",
								"supportsInterface(bytes4)": "639",
								"transferOwnership(address)": "32963"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 735,
									"end": 3701,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1363,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1359,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 448,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 467,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 448,
									"end": 466,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 448,
									"end": 466,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 448,
									"end": 466,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 448,
									"end": 477,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 448,
									"end": 477,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 448,
									"end": 477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 448,
									"end": 477,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 448,
									"end": 477,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 400,
									"end": 485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 980,
									"end": 1172,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 980,
									"end": 1172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1069,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1078,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 1078,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1107,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1107,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1154,
									"end": 1163,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1152,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1164,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1042,
									"end": 1172,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1172,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1172,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 3701,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b97f41989442ffa3f6514f574b6db57e2d272eddd6224db358e55bb3f8e06c864736f6c63430008120033",
									".code": [
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "A8F2BE76"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "AC0CC465"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "4420E486"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "4CC2F081"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 3701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5871,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5871,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5871,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7445,
											"end": 7651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 7445,
											"end": 7651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1489,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1489,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3270,
											"end": 3699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3270,
											"end": 3699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 653,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 653,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 653,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 653,
											"end": 746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 653,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 653,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4340,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4340,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3281,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3281,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2698,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2698,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2927,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2927,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 754,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 754,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 754,
											"end": 972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 754,
											"end": 972,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 754,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 754,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 754,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 754,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5936,
											"end": 5943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5970,
											"end": 5974,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7538,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7538,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7554,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 7530,
											"end": 7606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 7530,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7629,
											"end": 7633,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7617,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 7617,
											"end": 7643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1567,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1549,
											"end": 1576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1549,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1595,
											"end": 1603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1586,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1643,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1614,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1654,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1614,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 364,
											"end": 371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 352,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 352,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3396,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3406,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 3948,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3936,
											"end": 3940,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3947,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3925,
											"end": 3948,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3948,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3925,
											"end": 3948,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3422,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1063,
											"end": 1087,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "AF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F"
										},
										{
											"begin": 3446,
											"end": 3453,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3432,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3422,
											"end": 3454,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3454,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3422,
											"end": 3454,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3464,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3464,
											"end": 3476,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3464,
											"end": 3476,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3517,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3504,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3504,
											"end": 3515,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3515,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3517,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3504,
											"end": 3517,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3517,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3517,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3504,
											"end": 3517,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3517,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3504,
											"end": 3517,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3503,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3517,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3566,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3553,
											"end": 3554,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3548,
											"end": 3555,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3555,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3596,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3545,
											"end": 3596,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3595,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3596,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3596,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3596,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3545,
											"end": 3596,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3623,
											"end": 3625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3621,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3625,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3615,
											"end": 3662,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3657,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3660,
											"end": 3661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3658,
											"end": 3659,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3661,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3658,
											"end": 3661,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3661,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3661,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3658,
											"end": 3661,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3661,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3658,
											"end": 3661,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3653,
											"end": 3662,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3647,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3648,
											"end": 3649,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3643,
											"end": 3650,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3662,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3615,
											"end": 3662,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3518,
											"end": 3521,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3521,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3673,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3686,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3682,
											"end": 3692,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3692,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3699,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 738,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 732,
											"end": 738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 732,
											"end": 738,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 738,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 732,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 732,
											"end": 738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 725,
											"end": 738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 653,
											"end": 746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4452,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4461,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4469,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4441,
											"end": 4470,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4434,
											"end": 4470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4434,
											"end": 4470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2797,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2793,
											"end": 2804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2804,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2835,
											"end": 2842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2832,
											"end": 2882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2871,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2871,
											"end": 2882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2871,
											"end": 2882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2871,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2871,
											"end": 2882,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2882,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2832,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2805,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2902,
											"end": 2914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 364,
											"end": 371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 352,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 352,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3049,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3059,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 3948,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3936,
											"end": 3940,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3947,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3925,
											"end": 3948,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3948,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3925,
											"end": 3948,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3106,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1063,
											"end": 1087,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "AF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F"
										},
										{
											"begin": 3098,
											"end": 3105,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3075,
											"end": 3106,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3106,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3075,
											"end": 3106,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3139,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3135,
											"end": 3146,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3146,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3146,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3146,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3134,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3146,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3195,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3195,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3182,
											"end": 3183,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3177,
											"end": 3184,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3195,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3220,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3174,
											"end": 3220,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3220,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3220,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3213,
											"end": 3220,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3220,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3174,
											"end": 3220,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3147,
											"end": 3150,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3150,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3230,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3243,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3249,
											"end": 3256,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3959,
											"end": 3960,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 383,
											"end": 384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 754,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 825,
											"end": 831,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 352,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 364,
											"end": 371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 352,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 352,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 858,
											"end": 881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 858,
											"end": 867,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 858,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 858,
											"end": 881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 850,
											"end": 924,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 850,
											"end": 924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 954,
											"end": 963,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 935,
											"end": 953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 935,
											"end": 964,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 935,
											"end": 964,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 935,
											"end": 964,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 754,
											"end": 972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9730,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 9506,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9582,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9590,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9582,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 9582,
											"end": 9604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9582,
											"end": 9604,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9582,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9578,
											"end": 9723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9578,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9578,
											"end": 9723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9653,
											"end": 9658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9627,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9632,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9641,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9642,
											"end": 9649,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9696,
											"end": 9703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9690,
											"end": 9694,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "PUSH",
											"source": 2,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9678,
											"end": 9711,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9578,
											"end": 9723,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9578,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9506,
											"end": 9730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9506,
											"end": 9730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9506,
											"end": 9730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3369,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 352,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 364,
											"end": 371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 352,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 352,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3448,
											"end": 3453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8492,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8358,
											"end": 8492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 352,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 364,
											"end": 371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 352,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 352,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8459,
											"end": 8484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 8470,
											"end": 8474,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8476,
											"end": 8483,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8459,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 8459,
											"end": 8484,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8459,
											"end": 8484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 8459,
											"end": 8484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 497,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 497,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 593,
											"end": 600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 582,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 582,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 589,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 582,
											"end": 589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 582,
											"end": 600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 574,
											"end": 637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 574,
											"end": 637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 574,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 574,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 574,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 574,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 574,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5682,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5190,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5287,
											"end": 5291,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5293,
											"end": 5300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5279,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5301,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5279,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5274,
											"end": 5675,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5467,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5487,
											"end": 5494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5467,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5467,
											"end": 5495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5467,
											"end": 5495,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5467,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5596,
											"end": 5600,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5588,
											"end": 5601,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5603,
											"end": 5605,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5568,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5606,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5568,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5372,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5318,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5663,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5675,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5274,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6890,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6742,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6832,
											"end": 6836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6819,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3925,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6856,
											"end": 6882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6868,
											"end": 6872,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 6881,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6856,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 6856,
											"end": 6882,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6856,
											"end": 6882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6856,
											"end": 6882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6449,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6303,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6379,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6397,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6379,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3925,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6427,
											"end": 6431,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6416,
											"end": 6441,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6416,
											"end": 6441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 980,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 980,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1164,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9087,
											"end": 9326,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 9087,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9177,
											"end": 9181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9183,
											"end": 9190,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 9169,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9164,
											"end": 9319,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9250,
											"end": 9254,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9218,
											"end": 9224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9225,
											"end": 9229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9218,
											"end": 9238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9239,
											"end": 9246,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9218,
											"end": 9254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9292,
											"end": 9299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9319,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9164,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9087,
											"end": 9326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9087,
											"end": 9326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9087,
											"end": 9326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2497,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 4,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2162,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3631,
											"end": 3654,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3659,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3662,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3807,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3753,
											"end": 3870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3994,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4006,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4011,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4014,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4014,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3976,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4204,
											"end": 4211,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4193,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4180,
											"end": 4202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4159,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4159,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4212,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4321,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4308,
											"end": 4330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4287,
											"end": 4340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 4357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4481,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4363,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4468,
											"end": 4473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4450,
											"end": 4474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4474,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4450,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4445,
											"end": 4448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4709,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 4487,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4699,
											"end": 4700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4701,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4675,
											"end": 4681,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4631,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4702,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4631,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4709,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4884,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4715,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4799,
											"end": 4810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4873,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4868,
											"end": 4871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5124,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4890,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5064,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 5026,
											"end": 5027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5116,
											"name": "PUSH",
											"source": 10,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 5094,
											"end": 5096,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5075,
											"end": 5117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5496,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5130,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5357,
											"end": 5359,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 5352,
											"end": 5355,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5293,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5360,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5293,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5458,
											"end": 5461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5369,
											"end": 5462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5462,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5369,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5487,
											"end": 5489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5478,
											"end": 5490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5496,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 5753,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5765,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 5742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5739,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5726,
											"end": 5743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5719,
											"end": 5766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5783,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5775,
											"end": 5914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5775,
											"end": 5914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 6004,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5927,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5964,
											"end": 5971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 5998,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 6004,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 6004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 6004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 6004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6190,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6010,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6058,
											"end": 6135,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6136,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6155,
											"end": 6159,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6152,
											"end": 6153,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6145,
											"end": 6160,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6176,
											"end": 6177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6184,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6390,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 6196,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6236,
											"end": 6240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6256,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6276,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6256,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6290,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6310,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6290,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6285,
											"end": 6310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6285,
											"end": 6310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6331,
											"end": 6332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6358,
											"end": 6359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6352,
											"end": 6356,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6349,
											"end": 6360,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6363,
											"end": 6381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6390,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6390,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6576,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 6396,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6521,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6441,
											"end": 6442,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6522,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6545,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6538,
											"end": 6539,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6531,
											"end": 6546,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6569,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6570,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6773,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 6582,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6622,
											"end": 6625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 6659,
											"end": 6660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6641,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6661,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6675,
											"end": 6695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6695,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6739,
											"end": 6742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6743,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6766,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6730,
											"end": 6766,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6746,
											"end": 6764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6766,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6730,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6773,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6773,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7012,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6779,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6818,
											"end": 6821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6841,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6859,
											"end": 6864,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6841,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6865,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6841,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6832,
											"end": 6865,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6832,
											"end": 6865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6953,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6880,
											"end": 6885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6877,
											"end": 6954,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6874,
											"end": 6977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6957,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 6977,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6874,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6997,
											"end": 7002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7012,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7018,
											"end": 7198,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 7018,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7066,
											"end": 7143,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7063,
											"end": 7064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7167,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 7160,
											"end": 7161,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7187,
											"end": 7191,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7184,
											"end": 7185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7177,
											"end": 7192,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7204,
											"end": 7429,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7204,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7344,
											"end": 7378,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7340,
											"end": 7341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7332,
											"end": 7338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7379,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7408,
											"end": 7410,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7400,
											"end": 7406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7422,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7204,
											"end": 7429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7204,
											"end": 7429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7577,
											"end": 7580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7662,
											"end": 7664,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 7657,
											"end": 7660,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 7598,
											"end": 7665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7665,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7598,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7591,
											"end": 7665,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7591,
											"end": 7665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7763,
											"end": 7766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7674,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7767,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7674,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7794,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7787,
											"end": 7790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7783,
											"end": 7795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8013,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8000,
											"end": 8009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8060,
											"end": 8069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8050,
											"end": 8070,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8047,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8044,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8031,
											"end": 8048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8071,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 8214,
											"end": 8218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 8088,
											"end": 8219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8219,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 8088,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8080,
											"end": 8219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8080,
											"end": 8219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 8226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8414,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 8232,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8406,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8368,
											"end": 8369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8360,
											"end": 8366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8356,
											"end": 8370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8407,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8786,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 8420,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8562,
											"end": 8565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8583,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 8647,
											"end": 8649,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8583,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 8583,
											"end": 8650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8583,
											"end": 8650,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 8583,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8576,
											"end": 8650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8576,
											"end": 8650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8659,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8748,
											"end": 8751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8659,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 8659,
											"end": 8752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8659,
											"end": 8752,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8659,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8779,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8772,
											"end": 8775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8768,
											"end": 8780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8761,
											"end": 8780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8761,
											"end": 8780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 9211,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 8792,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 8962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8985,
											"end": 8994,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8973,
											"end": 8999,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8973,
											"end": 8999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9055,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9031,
											"end": 9032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9016,
											"end": 9033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9009,
											"end": 9056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 9199,
											"end": 9203,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 9073,
											"end": 9204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9204,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 9073,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 9211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 9211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 9211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 9211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9365,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 9217,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9319,
											"end": 9330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9356,
											"end": 9359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9365,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9371,
											"end": 9544,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 9371,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9536,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 9507,
											"end": 9508,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9509,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9488,
											"end": 9537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9371,
											"end": 9544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9371,
											"end": 9544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9952,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9550,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9710,
											"end": 9713,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9731,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 9813,
											"end": 9815,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 9808,
											"end": 9811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9731,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 9731,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9731,
											"end": 9816,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 9731,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9724,
											"end": 9816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9724,
											"end": 9816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 9914,
											"end": 9917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 9825,
											"end": 9918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9918,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 9825,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 9945,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 9938,
											"end": 9941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9934,
											"end": 9946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9927,
											"end": 9946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9927,
											"end": 9946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 10057,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9958,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10050,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 10057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 10057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 10057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 10057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10309,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10063,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10145,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10168,
											"end": 10174,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10165,
											"end": 10166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10175,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10248,
											"end": 10251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10244,
											"end": 10255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10238,
											"end": 10256,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10232,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10218,
											"end": 10257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10190,
											"end": 10192,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10187,
											"end": 10188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10183,
											"end": 10193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10178,
											"end": 10193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10178,
											"end": 10193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 10154,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10301,
											"end": 10302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10292,
											"end": 10298,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10283,
											"end": 10299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10303,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10705,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10315,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10421,
											"end": 10424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10449,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 10482,
											"end": 10487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 10449,
											"end": 10488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10488,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 10449,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10504,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10586,
											"end": 10592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10584,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10504,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 10504,
											"end": 10593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10504,
											"end": 10593,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10504,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10497,
											"end": 10593,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10497,
											"end": 10593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10602,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10660,
											"end": 10666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10655,
											"end": 10658,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 10652,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10602,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10602,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10602,
											"end": 10667,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10602,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10692,
											"end": 10698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10687,
											"end": 10690,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10699,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10705,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10878,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10711,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10851,
											"end": 10870,
											"name": "PUSH",
											"source": 10,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 10847,
											"end": 10848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10828,
											"end": 10871,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11286,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 10884,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11047,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 11147,
											"end": 11149,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11142,
											"end": 11145,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11065,
											"end": 11150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 11065,
											"end": 11150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11065,
											"end": 11150,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 11065,
											"end": 11150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11058,
											"end": 11150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11058,
											"end": 11150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 11248,
											"end": 11251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 11159,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11252,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 11159,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 11279,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11272,
											"end": 11275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11268,
											"end": 11280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11261,
											"end": 11280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11261,
											"end": 11280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 11286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 12259,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 11292,
											"end": 12259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11674,
											"end": 11677,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11696,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 11840,
											"end": 11843,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 11696,
											"end": 11844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11844,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 11696,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11689,
											"end": 11844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11689,
											"end": 11844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11861,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11952,
											"end": 11955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 11949,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11861,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 11861,
											"end": 11956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11861,
											"end": 11956,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11861,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11956,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11973,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 12117,
											"end": 12120,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11973,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 11973,
											"end": 12121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11973,
											"end": 12121,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11973,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11966,
											"end": 12121,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11966,
											"end": 12121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12138,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 12229,
											"end": 12232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12220,
											"end": 12226,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12138,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 12138,
											"end": 12233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12138,
											"end": 12233,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 12138,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12131,
											"end": 12233,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12131,
											"end": 12233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12250,
											"end": 12253,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12243,
											"end": 12253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12243,
											"end": 12253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 12259,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 12259,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 12259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 12259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 12259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 12259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12265,
											"end": 12367,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12265,
											"end": 12367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12306,
											"end": 12312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12359,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 12353,
											"end": 12360,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 12348,
											"end": 12350,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 12341,
											"end": 12346,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12337,
											"end": 12351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12361,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12323,
											"end": 12361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12323,
											"end": 12361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12265,
											"end": 12367,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12265,
											"end": 12367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12265,
											"end": 12367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12265,
											"end": 12367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12750,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 12373,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12461,
											"end": 12464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12489,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 12522,
											"end": 12527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 12489,
											"end": 12528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12528,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 12489,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 12608,
											"end": 12614,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12603,
											"end": 12606,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 12544,
											"end": 12615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12615,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 12544,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12537,
											"end": 12615,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12537,
											"end": 12615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12624,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12682,
											"end": 12688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12677,
											"end": 12680,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12670,
											"end": 12674,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12663,
											"end": 12668,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12659,
											"end": 12675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12624,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 12624,
											"end": 12689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12624,
											"end": 12689,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12624,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12714,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12736,
											"end": 12742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12714,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12714,
											"end": 12743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12714,
											"end": 12743,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12714,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12709,
											"end": 12712,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12705,
											"end": 12744,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12698,
											"end": 12744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12698,
											"end": 12744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12750,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12750,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13069,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 12756,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12869,
											"end": 12873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 12909,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12896,
											"end": 12905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12892,
											"end": 12910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12884,
											"end": 12910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12884,
											"end": 12910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12950,
											"end": 12954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12946,
											"end": 12966,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12942,
											"end": 12943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12940,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12927,
											"end": 12944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12920,
											"end": 12967,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12984,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 13057,
											"end": 13061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13054,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12984,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 12984,
											"end": 13062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12984,
											"end": 13062,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12984,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12976,
											"end": 13062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12976,
											"end": 13062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13069,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13069,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13485,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 13075,
											"end": 13485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13115,
											"end": 13122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13138,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 13156,
											"end": 13157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 13138,
											"end": 13158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13158,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 13138,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13133,
											"end": 13158,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13133,
											"end": 13158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 13190,
											"end": 13191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 13172,
											"end": 13192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13192,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 13172,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13167,
											"end": 13192,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13167,
											"end": 13192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13227,
											"end": 13228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13224,
											"end": 13225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13229,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 13267,
											"end": 13278,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 13249,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13279,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 13249,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13238,
											"end": 13279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13238,
											"end": 13279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13428,
											"end": 13429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13415,
											"end": 13430,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13412,
											"end": 13413,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13431,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13389,
											"end": 13390,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13382,
											"end": 13391,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13362,
											"end": 13445,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 13339,
											"end": 13478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 13339,
											"end": 13478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 13458,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 13458,
											"end": 13476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13476,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 13458,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13339,
											"end": 13478,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 13339,
											"end": 13478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13123,
											"end": 13485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13485,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13491,
											"end": 13671,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 13491,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13616,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13536,
											"end": 13537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13529,
											"end": 13617,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13640,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 13633,
											"end": 13634,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13626,
											"end": 13641,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13660,
											"end": 13664,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13657,
											"end": 13658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13650,
											"end": 13665,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13677,
											"end": 13848,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 13677,
											"end": 13848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13716,
											"end": 13719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13757,
											"end": 13762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 13739,
											"end": 13763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13730,
											"end": 13763,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13730,
											"end": 13763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13785,
											"end": 13789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13778,
											"end": 13783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13775,
											"end": 13790,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 13793,
											"end": 13811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13840,
											"end": 13841,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13833,
											"end": 13838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13829,
											"end": 13842,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13822,
											"end": 13842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13822,
											"end": 13842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13677,
											"end": 13848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13677,
											"end": 13848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13677,
											"end": 13848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13677,
											"end": 13848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14036,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 13854,
											"end": 14036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14028,
											"name": "PUSH",
											"source": 10,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 13990,
											"end": 13991,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 13988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13978,
											"end": 13992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13971,
											"end": 14029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14184,
											"end": 14187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 14269,
											"end": 14271,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14264,
											"end": 14267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 14205,
											"end": 14272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14198,
											"end": 14272,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14198,
											"end": 14272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14370,
											"end": 14373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 14281,
											"end": 14374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14399,
											"end": 14401,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14394,
											"end": 14397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14383,
											"end": 14402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14383,
											"end": 14402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14580,
											"end": 14584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14618,
											"end": 14620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14603,
											"end": 14621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14595,
											"end": 14621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14595,
											"end": 14621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 14676,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14661,
											"end": 14665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14657,
											"end": 14677,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14653,
											"end": 14654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14642,
											"end": 14651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14638,
											"end": 14655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14821,
											"end": 14825,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 14695,
											"end": 14826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14687,
											"end": 14826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14687,
											"end": 14826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14414,
											"end": 14833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"Patient.sol",
								"access/Owner.sol",
								"access/Roles.sol",
								"addPatients.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"hasRole(bytes32,address)": "91d14854",
							"isAccess(address)": "a8f2be76",
							"owner()": "8da5cb5b",
							"register(address)": "4420e486",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole_Doctor(address,address)": "4cc2f081",
							"setupRole_Doctor(address,address)": "ac0cc465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"isAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"revokeRole_Doctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"setupRole_Doctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Patient.sol\":\"Patient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Patient.sol\":{\"keccak256\":\"0x7332fdf0e49fd67564128338a2b9d38e020c29117bafa5ff782e547dbbbca882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f68b15c87f9da80e08161e6da0c0f41c5a8b707e6d409b1342ff87057f4f30ec\",\"dweb:/ipfs/QmSDJikKVCt5TKNWjuAvuTA1Cwyo2FoTDRgTEjufQxDdZi\"]},\"access/Owner.sol\":{\"keccak256\":\"0x02dcfd3c2e2057042035968f4503a6bca880ff9661e428eaaadb2e2a03008445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6c0ef63652abcf3a28ef582e0b7ef98982f53442c611c8f978ecf2f3d3f3e8e\",\"dweb:/ipfs/QmUttKxN4oHuUB4HKEcZFxyGnyg7TyXYzjS6cqYWMtD4eq\"]},\"access/Roles.sol\":{\"keccak256\":\"0x6eaa1a10a3e341a627cc772471321707efdda0ad9f55e767c9a9bc79edba3f3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292d3285ed472a263cb41ef8ab3ed298414e7399ba12842f82f92e0d1a1d8488\",\"dweb:/ipfs/QmU1hozn36LabGqBHjiUBjYDh4EkqR9JNc58wCbu1aXrCi\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 216,
								"contract": "Patient.sol:Patient",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 372,
								"contract": "Patient.sol:Patient",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)367_storage)"
							},
							{
								"astId": 377,
								"contract": "Patient.sol:Patient",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 10,
								"contract": "Patient.sol:Patient",
								"label": "docs",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)367_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)367_storage"
							},
							"t_struct(RoleData)367_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 364,
										"contract": "Patient.sol:Patient",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 366,
										"contract": "Patient.sol:Patient",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"access/Owner.sol": {
				"Owner": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/Owner.sol\":\"Owner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"access/Owner.sol\":{\"keccak256\":\"0x02dcfd3c2e2057042035968f4503a6bca880ff9661e428eaaadb2e2a03008445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6c0ef63652abcf3a28ef582e0b7ef98982f53442c611c8f978ecf2f3d3f3e8e\",\"dweb:/ipfs/QmUttKxN4oHuUB4HKEcZFxyGnyg7TyXYzjS6cqYWMtD4eq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 216,
								"contract": "access/Owner.sol:Owner",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"access/Roles.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"hasRole(bytes32,address)": "91d14854",
							"owner()": "8da5cb5b",
							"renounceRole(bytes32,address)": "36568abe",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/Roles.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"access/Owner.sol\":{\"keccak256\":\"0x02dcfd3c2e2057042035968f4503a6bca880ff9661e428eaaadb2e2a03008445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6c0ef63652abcf3a28ef582e0b7ef98982f53442c611c8f978ecf2f3d3f3e8e\",\"dweb:/ipfs/QmUttKxN4oHuUB4HKEcZFxyGnyg7TyXYzjS6cqYWMtD4eq\"]},\"access/Roles.sol\":{\"keccak256\":\"0x6eaa1a10a3e341a627cc772471321707efdda0ad9f55e767c9a9bc79edba3f3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292d3285ed472a263cb41ef8ab3ed298414e7399ba12842f82f92e0d1a1d8488\",\"dweb:/ipfs/QmU1hozn36LabGqBHjiUBjYDh4EkqR9JNc58wCbu1aXrCi\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 216,
								"contract": "access/Roles.sol:AccessControl",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 372,
								"contract": "access/Roles.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)367_storage)"
							},
							{
								"astId": 377,
								"contract": "access/Roles.sol:AccessControl",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)367_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)367_storage"
							},
							"t_struct(RoleData)367_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 364,
										"contract": "access/Roles.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 366,
										"contract": "access/Roles.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"addPatients.sol": {
				"Patients": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "doctor",
									"type": "address"
								}
							],
							"name": "GetRole",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "func",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "notice",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "patient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "contractPatient",
									"type": "address"
								}
							],
							"name": "NewPatient",
							"type": "event"
						},
						{
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_doctor",
									"type": "address"
								}
							],
							"name": "anualRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_patient",
									"type": "address"
								}
							],
							"name": "checkAccess",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createPatient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCountPatient",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_doctor",
									"type": "address"
								}
							],
							"name": "giveRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"addPatients.sol\":475:2757  contract Patients... */\n  mstore(0x40, 0x80)\n    /* \"addPatients.sol\":737:738  0 */\n  0x00\n    /* \"addPatients.sol\":705:738  uint256 private countPatients = 0 */\n  dup1\n  sstore\n    /* \"addPatients.sol\":843:938  constructor (address _implementation) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"addPatients.sol\":915:930  _implementation */\n  dup1\n    /* \"addPatients.sol\":898:912  implementation */\n  0x02\n  0x00\n    /* \"addPatients.sol\":898:930  implementation = _implementation */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"addPatients.sol\":843:938  constructor (address _implementation) ... */\n  pop\n    /* \"addPatients.sol\":475:2757  contract Patients... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"addPatients.sol\":475:2757  contract Patients... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"addPatients.sol\":475:2757  contract Patients... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x35a27178\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x466a0146\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc375110d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xcd8cb137\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf531072c\n      eq\n      tag_8\n      jumpi\n      jump(tag_3)\n    tag_2:\n    tag_3:\n        /* \"addPatients.sol\":2709:2746  Log(\"fallback\", msg.sender, msg.data) */\n      0xa46ff6f8d8019b1a730a7666fa32a0236c89399dd776007c7485144b71e9e279\n        /* \"addPatients.sol\":2725:2735  msg.sender */\n      caller\n        /* \"addPatients.sol\":2737:2745  msg.data */\n      0x00\n      calldatasize\n        /* \"addPatients.sol\":2709:2746  Log(\"fallback\", msg.sender, msg.data) */\n      mload(0x40)\n      tag_11\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"addPatients.sol\":475:2757  contract Patients... */\n      stop\n        /* \"addPatients.sol\":1125:1533  function createPatient() external ... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"addPatients.sol\":1541:1745  function checkAccess(address _patient) external view  existsPatient(_patient)  returns (bool)... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"addPatients.sol\":2121:2397  function giveRole(address _doctor) external... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"addPatients.sol\":1753:1852  function getCountPatient() external view returns(uint)... */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"addPatients.sol\":2405:2659  function anualRole(address _doctor) external... */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"addPatients.sol\":1125:1533  function createPatient() external ... */\n    tag_14:\n        /* \"addPatients.sol\":1221:1222  0 */\n      0x00\n        /* \"addPatients.sol\":1184:1223  adressesPatient[msg.sender]==address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":1184:1199  adressesPatient */\n      0x01\n        /* \"addPatients.sol\":1184:1211  adressesPatient[msg.sender] */\n      0x00\n        /* \"addPatients.sol\":1200:1210  msg.sender */\n      caller\n        /* \"addPatients.sol\":1184:1211  adressesPatient[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":1184:1223  adressesPatient[msg.sender]==address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"addPatients.sol\":1176:1245  require(adressesPatient[msg.sender]==address(0),\"You were register!\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"addPatients.sol\":1266:1281  address patient */\n      0x00\n        /* \"addPatients.sol\":1284:1312  Clones.clone(implementation) */\n      tag_35\n        /* \"addPatients.sol\":1297:1311  implementation */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":1284:1296  Clones.clone */\n      tag_36\n        /* \"addPatients.sol\":1284:1312  Clones.clone(implementation) */\n      jump\t// in\n    tag_35:\n        /* \"addPatients.sol\":1266:1312  address patient = Clones.clone(implementation) */\n      swap1\n      pop\n        /* \"addPatients.sol\":1333:1340  patient */\n      dup1\n        /* \"addPatients.sol\":1325:1350  Patient(patient).register */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4420e486\n        /* \"addPatients.sol\":1351:1361  msg.sender */\n      caller\n        /* \"addPatients.sol\":1325:1362  Patient(patient).register(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n        /* \"addPatients.sol\":1405:1412  patient */\n      dup1\n        /* \"addPatients.sol\":1375:1390  adressesPatient */\n      0x01\n        /* \"addPatients.sol\":1375:1402  adressesPatient[msg.sender] */\n      0x00\n        /* \"addPatients.sol\":1391:1401  msg.sender */\n      caller\n        /* \"addPatients.sol\":1375:1402  adressesPatient[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"addPatients.sol\":1375:1412  adressesPatient[msg.sender] = patient */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"addPatients.sol\":1423:1436  countPatients */\n      0x00\n      dup1\n        /* \"addPatients.sol\":1423:1438  countPatients++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"addPatients.sol\":1456:1521  NewPatient(\"Create patient: \",msg.sender,countPatients-1,patient) */\n      0x85858416f612212ddb7c6344d7b58182bad1de3be71438a88c6f19f0fa2b826d\n        /* \"addPatients.sol\":1486:1496  msg.sender */\n      caller\n        /* \"addPatients.sol\":1511:1512  1 */\n      0x01\n        /* \"addPatients.sol\":1497:1510  countPatients */\n      sload(0x00)\n        /* \"addPatients.sol\":1497:1512  countPatients-1 */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"addPatients.sol\":1513:1520  patient */\n      dup4\n        /* \"addPatients.sol\":1456:1521  NewPatient(\"Create patient: \",msg.sender,countPatients-1,patient) */\n      mload(0x40)\n      tag_46\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"addPatients.sol\":1165:1533  {... */\n      pop\n        /* \"addPatients.sol\":1125:1533  function createPatient() external ... */\n      jump\t// out\n        /* \"addPatients.sol\":1541:1745  function checkAccess(address _patient) external view  existsPatient(_patient)  returns (bool)... */\n    tag_18:\n        /* \"addPatients.sol\":1629:1633  bool */\n      0x00\n        /* \"addPatients.sol\":1609:1617  _patient */\n      dup2\n        /* \"addPatients.sol\":1046:1047  0 */\n      0x00\n        /* \"addPatients.sol\":1011:1048  adressesPatient[_patient]!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":1011:1026  adressesPatient */\n      0x01\n        /* \"addPatients.sol\":1011:1036  adressesPatient[_patient] */\n      0x00\n        /* \"addPatients.sol\":1027:1035  _patient */\n      dup4\n        /* \"addPatients.sol\":1011:1036  adressesPatient[_patient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":1011:1048  adressesPatient[_patient]!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"addPatients.sol\":1003:1097  require(adressesPatient[_patient]!=address(0),\"Patient don't exists!Check patient's account!\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"addPatients.sol\":1651:1660  Patient p */\n      0x00\n        /* \"addPatients.sol\":1671:1686  adressesPatient */\n      0x01\n        /* \"addPatients.sol\":1671:1696  adressesPatient[_patient] */\n      0x00\n        /* \"addPatients.sol\":1687:1695  _patient */\n      dup6\n        /* \"addPatients.sol\":1671:1696  adressesPatient[_patient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":1651:1697  Patient p = Patient(adressesPatient[_patient]) */\n      swap1\n      pop\n        /* \"addPatients.sol\":1715:1716  p */\n      dup1\n        /* \"addPatients.sol\":1715:1725  p.isAccess */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8f2be76\n        /* \"addPatients.sol\":1726:1736  msg.sender */\n      caller\n        /* \"addPatients.sol\":1715:1737  p.isAccess(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_53:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"addPatients.sol\":1708:1737  return p.isAccess(msg.sender) */\n      swap3\n      pop\n      pop\n        /* \"addPatients.sol\":1541:1745  function checkAccess(address _patient) external view  existsPatient(_patient)  returns (bool)... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"addPatients.sol\":2121:2397  function giveRole(address _doctor) external... */\n    tag_23:\n        /* \"addPatients.sol\":2203:2210  _doctor */\n      dup1\n        /* \"addPatients.sol\":2189:2210  msg.sender != _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":2189:2199  msg.sender */\n      caller\n        /* \"addPatients.sol\":2189:2210  msg.sender != _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"addPatients.sol\":2181:2239  require(msg.sender != _doctor, \"You can not be a doctor!\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"addPatients.sol\":2250:2259  Patient p */\n      0x00\n        /* \"addPatients.sol\":2270:2285  adressesPatient */\n      0x01\n        /* \"addPatients.sol\":2270:2297  adressesPatient[msg.sender] */\n      0x00\n        /* \"addPatients.sol\":2286:2296  msg.sender */\n      caller\n        /* \"addPatients.sol\":2270:2297  adressesPatient[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":2250:2298  Patient p = Patient(adressesPatient[msg.sender]) */\n      swap1\n      pop\n        /* \"addPatients.sol\":2309:2310  p */\n      dup1\n        /* \"addPatients.sol\":2309:2327  p.setupRole_Doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xac0cc465\n        /* \"addPatients.sol\":2328:2338  msg.sender */\n      caller\n        /* \"addPatients.sol\":2339:2346  _doctor */\n      dup5\n        /* \"addPatients.sol\":2309:2347  p.setupRole_Doctor(msg.sender,_doctor) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n        /* \"addPatients.sol\":2363:2389  GetRole(\"Doctor\", _doctor) */\n      0xcf135c3b898e1e68301ee3615d92cb56b00c3fc03db5a8b44fea7363b96e0dae\n        /* \"addPatients.sol\":2381:2388  _doctor */\n      dup3\n        /* \"addPatients.sol\":2363:2389  GetRole(\"Doctor\", _doctor) */\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"addPatients.sol\":2170:2397  {... */\n      pop\n        /* \"addPatients.sol\":2121:2397  function giveRole(address _doctor) external... */\n      pop\n      jump\t// out\n        /* \"addPatients.sol\":1753:1852  function getCountPatient() external view returns(uint)... */\n    tag_25:\n        /* \"addPatients.sol\":1802:1806  uint */\n      0x00\n        /* \"addPatients.sol\":1831:1844  countPatients */\n      dup1\n      sload\n        /* \"addPatients.sol\":1824:1844  return countPatients */\n      swap1\n      pop\n        /* \"addPatients.sol\":1753:1852  function getCountPatient() external view returns(uint)... */\n      swap1\n      jump\t// out\n        /* \"addPatients.sol\":2405:2659  function anualRole(address _doctor) external... */\n    tag_30:\n        /* \"addPatients.sol\":2488:2495  _doctor */\n      dup1\n        /* \"addPatients.sol\":2474:2495  msg.sender != _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":2474:2484  msg.sender */\n      caller\n        /* \"addPatients.sol\":2474:2495  msg.sender != _doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"addPatients.sol\":2466:2542  require(msg.sender != _doctor, \"You can not be a doctor and nothing anual!\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"addPatients.sol\":2553:2562  Patient p */\n      0x00\n        /* \"addPatients.sol\":2573:2588  adressesPatient */\n      0x01\n        /* \"addPatients.sol\":2573:2600  adressesPatient[msg.sender] */\n      0x00\n        /* \"addPatients.sol\":2589:2599  msg.sender */\n      caller\n        /* \"addPatients.sol\":2573:2600  adressesPatient[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"addPatients.sol\":2553:2601  Patient p = Patient(adressesPatient[msg.sender]) */\n      swap1\n      pop\n        /* \"addPatients.sol\":2612:2613  p */\n      dup1\n        /* \"addPatients.sol\":2612:2631  p.revokeRole_Doctor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4cc2f081\n        /* \"addPatients.sol\":2632:2642  msg.sender */\n      caller\n        /* \"addPatients.sol\":2643:2650  _doctor */\n      dup5\n        /* \"addPatients.sol\":2612:2651  p.revokeRole_Doctor(msg.sender,_doctor) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_74:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n        /* \"addPatients.sol\":2455:2659  {... */\n      pop\n        /* \"addPatients.sol\":2405:2659  function anualRole(address _doctor) external... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":973:1732  function clone(address implementation) internal returns (address instance) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1030:1046  address instance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1362:1410  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1344:1358  implementation */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1338:1342  0x60 */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1334:1359  shl(0x60, implementation) */\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1328:1332  0xe8 */\n      0xe8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1324:1360  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1321:1411  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1315:1319  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1308:1412  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1569:1601  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1552:1566  implementation */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1546:1550  0x78 */\n      0x78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1542:1567  shl(0x78, implementation) */\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1539:1602  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1533:1537  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1526:1603  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1644:1648  0x37 */\n      0x37\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1638:1642  0x09 */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1635:1636  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1628:1649  create(0, 0x09, 0x37) */\n      create\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1616:1649  instance := create(0, 0x09, 0x37) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1696:1697  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1676:1698  instance != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1676:1684  instance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1676:1698  instance != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":1668:1725  require(instance != address(0), \"ERC1167: create failed\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":973:1732  function clone(address implementation) internal returns (address instance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_82:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:340   */\n    tag_83:\n        /* \"#utility.yul\":322:332   */\n      0x66616c6c6261636b000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:333   */\n      mstore\n        /* \"#utility.yul\":182:340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":346:711   */\n    tag_84:\n        /* \"#utility.yul\":488:491   */\n      0x00\n        /* \"#utility.yul\":509:575   */\n      tag_122\n        /* \"#utility.yul\":573:574   */\n      0x08\n        /* \"#utility.yul\":568:571   */\n      dup4\n        /* \"#utility.yul\":509:575   */\n      tag_82\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":502:575   */\n      swap2\n      pop\n        /* \"#utility.yul\":584:677   */\n      tag_123\n        /* \"#utility.yul\":673:676   */\n      dup3\n        /* \"#utility.yul\":584:677   */\n      tag_83\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":702:704   */\n      0x20\n        /* \"#utility.yul\":697:700   */\n      dup3\n        /* \"#utility.yul\":693:705   */\n      add\n        /* \"#utility.yul\":686:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":717:843   */\n    tag_85:\n        /* \"#utility.yul\":754:761   */\n      0x00\n        /* \"#utility.yul\":794:836   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":787:792   */\n      dup3\n        /* \"#utility.yul\":783:837   */\n      and\n        /* \"#utility.yul\":772:837   */\n      swap1\n      pop\n        /* \"#utility.yul\":717:843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":849:945   */\n    tag_86:\n        /* \"#utility.yul\":886:893   */\n      0x00\n        /* \"#utility.yul\":915:939   */\n      tag_126\n        /* \"#utility.yul\":933:938   */\n      dup3\n        /* \"#utility.yul\":915:939   */\n      tag_85\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":904:939   */\n      swap1\n      pop\n        /* \"#utility.yul\":849:945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":951:1069   */\n    tag_87:\n        /* \"#utility.yul\":1038:1062   */\n      tag_128\n        /* \"#utility.yul\":1056:1061   */\n      dup2\n        /* \"#utility.yul\":1038:1062   */\n      tag_86\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1033:1036   */\n      dup3\n        /* \"#utility.yul\":1026:1063   */\n      mstore\n        /* \"#utility.yul\":951:1069   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1075:1243   */\n    tag_88:\n        /* \"#utility.yul\":1158:1169   */\n      0x00\n        /* \"#utility.yul\":1192:1198   */\n      dup3\n        /* \"#utility.yul\":1187:1190   */\n      dup3\n        /* \"#utility.yul\":1180:1199   */\n      mstore\n        /* \"#utility.yul\":1232:1236   */\n      0x20\n        /* \"#utility.yul\":1227:1230   */\n      dup3\n        /* \"#utility.yul\":1223:1237   */\n      add\n        /* \"#utility.yul\":1208:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1075:1243   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1249:1395   */\n    tag_89:\n        /* \"#utility.yul\":1346:1352   */\n      dup3\n        /* \"#utility.yul\":1341:1344   */\n      dup2\n        /* \"#utility.yul\":1336:1339   */\n      dup4\n        /* \"#utility.yul\":1323:1353   */\n      calldatacopy\n        /* \"#utility.yul\":1387:1388   */\n      0x00\n        /* \"#utility.yul\":1378:1384   */\n      dup4\n        /* \"#utility.yul\":1373:1376   */\n      dup4\n        /* \"#utility.yul\":1369:1385   */\n      add\n        /* \"#utility.yul\":1362:1389   */\n      mstore\n        /* \"#utility.yul\":1249:1395   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1401:1503   */\n    tag_90:\n        /* \"#utility.yul\":1442:1448   */\n      0x00\n        /* \"#utility.yul\":1493:1495   */\n      0x1f\n        /* \"#utility.yul\":1489:1496   */\n      not\n        /* \"#utility.yul\":1484:1486   */\n      0x1f\n        /* \"#utility.yul\":1477:1482   */\n      dup4\n        /* \"#utility.yul\":1473:1487   */\n      add\n        /* \"#utility.yul\":1469:1497   */\n      and\n        /* \"#utility.yul\":1459:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1401:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1531:1845   */\n    tag_91:\n        /* \"#utility.yul\":1627:1630   */\n      0x00\n        /* \"#utility.yul\":1648:1718   */\n      tag_133\n        /* \"#utility.yul\":1711:1717   */\n      dup4\n        /* \"#utility.yul\":1706:1709   */\n      dup6\n        /* \"#utility.yul\":1648:1718   */\n      tag_88\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1641:1718   */\n      swap4\n      pop\n        /* \"#utility.yul\":1728:1784   */\n      tag_134\n        /* \"#utility.yul\":1777:1783   */\n      dup4\n        /* \"#utility.yul\":1772:1775   */\n      dup6\n        /* \"#utility.yul\":1765:1770   */\n      dup5\n        /* \"#utility.yul\":1728:1784   */\n      tag_89\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1809:1838   */\n      tag_135\n        /* \"#utility.yul\":1831:1837   */\n      dup4\n        /* \"#utility.yul\":1809:1838   */\n      tag_90\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1804:1807   */\n      dup5\n        /* \"#utility.yul\":1800:1839   */\n      add\n        /* \"#utility.yul\":1793:1839   */\n      swap1\n      pop\n        /* \"#utility.yul\":1531:1845   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1851:2597   */\n    tag_12:\n        /* \"#utility.yul\":2101:2105   */\n      0x00\n        /* \"#utility.yul\":2139:2141   */\n      0x60\n        /* \"#utility.yul\":2128:2137   */\n      dup3\n        /* \"#utility.yul\":2124:2142   */\n      add\n        /* \"#utility.yul\":2116:2142   */\n      swap1\n      pop\n        /* \"#utility.yul\":2188:2197   */\n      dup2\n        /* \"#utility.yul\":2182:2186   */\n      dup2\n        /* \"#utility.yul\":2178:2198   */\n      sub\n        /* \"#utility.yul\":2174:2175   */\n      0x00\n        /* \"#utility.yul\":2163:2172   */\n      dup4\n        /* \"#utility.yul\":2159:2176   */\n      add\n        /* \"#utility.yul\":2152:2199   */\n      mstore\n        /* \"#utility.yul\":2216:2347   */\n      tag_137\n        /* \"#utility.yul\":2342:2346   */\n      dup2\n        /* \"#utility.yul\":2216:2347   */\n      tag_84\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2208:2347   */\n      swap1\n      pop\n        /* \"#utility.yul\":2357:2429   */\n      tag_138\n        /* \"#utility.yul\":2425:2427   */\n      0x20\n        /* \"#utility.yul\":2414:2423   */\n      dup4\n        /* \"#utility.yul\":2410:2428   */\n      add\n        /* \"#utility.yul\":2401:2407   */\n      dup7\n        /* \"#utility.yul\":2357:2429   */\n      tag_87\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2476:2485   */\n      dup2\n        /* \"#utility.yul\":2470:2474   */\n      dup2\n        /* \"#utility.yul\":2466:2486   */\n      sub\n        /* \"#utility.yul\":2461:2463   */\n      0x40\n        /* \"#utility.yul\":2450:2459   */\n      dup4\n        /* \"#utility.yul\":2446:2464   */\n      add\n        /* \"#utility.yul\":2439:2487   */\n      mstore\n        /* \"#utility.yul\":2504:2590   */\n      tag_139\n        /* \"#utility.yul\":2585:2589   */\n      dup2\n        /* \"#utility.yul\":2576:2582   */\n      dup5\n        /* \"#utility.yul\":2568:2574   */\n      dup7\n        /* \"#utility.yul\":2504:2590   */\n      tag_91\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2496:2590   */\n      swap1\n      pop\n        /* \"#utility.yul\":1851:2597   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2684:2801   */\n    tag_93:\n        /* \"#utility.yul\":2793:2794   */\n      0x00\n        /* \"#utility.yul\":2790:2791   */\n      dup1\n        /* \"#utility.yul\":2783:2795   */\n      revert\n        /* \"#utility.yul\":2930:3052   */\n    tag_95:\n        /* \"#utility.yul\":3003:3027   */\n      tag_144\n        /* \"#utility.yul\":3021:3026   */\n      dup2\n        /* \"#utility.yul\":3003:3027   */\n      tag_86\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2996:3001   */\n      dup2\n        /* \"#utility.yul\":2993:3028   */\n      eq\n        /* \"#utility.yul\":2983:3046   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3042:3043   */\n      0x00\n        /* \"#utility.yul\":3039:3040   */\n      dup1\n        /* \"#utility.yul\":3032:3044   */\n      revert\n        /* \"#utility.yul\":2983:3046   */\n    tag_145:\n        /* \"#utility.yul\":2930:3052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3058:3197   */\n    tag_96:\n        /* \"#utility.yul\":3104:3109   */\n      0x00\n        /* \"#utility.yul\":3142:3148   */\n      dup2\n        /* \"#utility.yul\":3129:3149   */\n      calldataload\n        /* \"#utility.yul\":3120:3149   */\n      swap1\n      pop\n        /* \"#utility.yul\":3158:3191   */\n      tag_147\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3158:3191   */\n      tag_95\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3058:3197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3203:3532   */\n    tag_17:\n        /* \"#utility.yul\":3262:3268   */\n      0x00\n        /* \"#utility.yul\":3311:3313   */\n      0x20\n        /* \"#utility.yul\":3299:3308   */\n      dup3\n        /* \"#utility.yul\":3290:3297   */\n      dup5\n        /* \"#utility.yul\":3286:3309   */\n      sub\n        /* \"#utility.yul\":3282:3314   */\n      slt\n        /* \"#utility.yul\":3279:3398   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":3317:3396   */\n      tag_150\n      tag_93\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3279:3398   */\n    tag_149:\n        /* \"#utility.yul\":3437:3438   */\n      0x00\n        /* \"#utility.yul\":3462:3515   */\n      tag_151\n        /* \"#utility.yul\":3507:3514   */\n      dup5\n        /* \"#utility.yul\":3498:3504   */\n      dup3\n        /* \"#utility.yul\":3487:3496   */\n      dup6\n        /* \"#utility.yul\":3483:3505   */\n      add\n        /* \"#utility.yul\":3462:3515   */\n      tag_96\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3452:3515   */\n      swap2\n      pop\n        /* \"#utility.yul\":3408:3525   */\n      pop\n        /* \"#utility.yul\":3203:3532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3538:3628   */\n    tag_97:\n        /* \"#utility.yul\":3572:3579   */\n      0x00\n        /* \"#utility.yul\":3615:3620   */\n      dup2\n        /* \"#utility.yul\":3608:3621   */\n      iszero\n        /* \"#utility.yul\":3601:3622   */\n      iszero\n        /* \"#utility.yul\":3590:3622   */\n      swap1\n      pop\n        /* \"#utility.yul\":3538:3628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3634:3743   */\n    tag_98:\n        /* \"#utility.yul\":3715:3736   */\n      tag_154\n        /* \"#utility.yul\":3730:3735   */\n      dup2\n        /* \"#utility.yul\":3715:3736   */\n      tag_97\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3710:3713   */\n      dup3\n        /* \"#utility.yul\":3703:3737   */\n      mstore\n        /* \"#utility.yul\":3634:3743   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3749:3959   */\n    tag_20:\n        /* \"#utility.yul\":3836:3840   */\n      0x00\n        /* \"#utility.yul\":3874:3876   */\n      0x20\n        /* \"#utility.yul\":3863:3872   */\n      dup3\n        /* \"#utility.yul\":3859:3877   */\n      add\n        /* \"#utility.yul\":3851:3877   */\n      swap1\n      pop\n        /* \"#utility.yul\":3887:3952   */\n      tag_156\n        /* \"#utility.yul\":3949:3950   */\n      0x00\n        /* \"#utility.yul\":3938:3947   */\n      dup4\n        /* \"#utility.yul\":3934:3951   */\n      add\n        /* \"#utility.yul\":3925:3931   */\n      dup5\n        /* \"#utility.yul\":3887:3952   */\n      tag_98\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3749:3959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3965:4042   */\n    tag_99:\n        /* \"#utility.yul\":4002:4009   */\n      0x00\n        /* \"#utility.yul\":4031:4036   */\n      dup2\n        /* \"#utility.yul\":4020:4036   */\n      swap1\n      pop\n        /* \"#utility.yul\":3965:4042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4048:4166   */\n    tag_100:\n        /* \"#utility.yul\":4135:4159   */\n      tag_159\n        /* \"#utility.yul\":4153:4158   */\n      dup2\n        /* \"#utility.yul\":4135:4159   */\n      tag_99\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4130:4133   */\n      dup3\n        /* \"#utility.yul\":4123:4160   */\n      mstore\n        /* \"#utility.yul\":4048:4166   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4172:4394   */\n    tag_27:\n        /* \"#utility.yul\":4265:4269   */\n      0x00\n        /* \"#utility.yul\":4303:4305   */\n      0x20\n        /* \"#utility.yul\":4292:4301   */\n      dup3\n        /* \"#utility.yul\":4288:4306   */\n      add\n        /* \"#utility.yul\":4280:4306   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4387   */\n      tag_161\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4373:4382   */\n      dup4\n        /* \"#utility.yul\":4369:4386   */\n      add\n        /* \"#utility.yul\":4360:4366   */\n      dup5\n        /* \"#utility.yul\":4316:4387   */\n      tag_100\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4172:4394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4400:4568   */\n    tag_101:\n        /* \"#utility.yul\":4540:4560   */\n      0x596f752077657265207265676973746572210000000000000000000000000000\n        /* \"#utility.yul\":4536:4537   */\n      0x00\n        /* \"#utility.yul\":4528:4534   */\n      dup3\n        /* \"#utility.yul\":4524:4538   */\n      add\n        /* \"#utility.yul\":4517:4561   */\n      mstore\n        /* \"#utility.yul\":4400:4568   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4574:4940   */\n    tag_102:\n        /* \"#utility.yul\":4716:4719   */\n      0x00\n        /* \"#utility.yul\":4737:4804   */\n      tag_164\n        /* \"#utility.yul\":4801:4803   */\n      0x12\n        /* \"#utility.yul\":4796:4799   */\n      dup4\n        /* \"#utility.yul\":4737:4804   */\n      tag_82\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4730:4804   */\n      swap2\n      pop\n        /* \"#utility.yul\":4813:4906   */\n      tag_165\n        /* \"#utility.yul\":4902:4905   */\n      dup3\n        /* \"#utility.yul\":4813:4906   */\n      tag_101\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4931:4933   */\n      0x20\n        /* \"#utility.yul\":4926:4929   */\n      dup3\n        /* \"#utility.yul\":4922:4934   */\n      add\n        /* \"#utility.yul\":4915:4934   */\n      swap1\n      pop\n        /* \"#utility.yul\":4574:4940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4946:5365   */\n    tag_34:\n        /* \"#utility.yul\":5112:5116   */\n      0x00\n        /* \"#utility.yul\":5150:5152   */\n      0x20\n        /* \"#utility.yul\":5139:5148   */\n      dup3\n        /* \"#utility.yul\":5135:5153   */\n      add\n        /* \"#utility.yul\":5127:5153   */\n      swap1\n      pop\n        /* \"#utility.yul\":5199:5208   */\n      dup2\n        /* \"#utility.yul\":5193:5197   */\n      dup2\n        /* \"#utility.yul\":5189:5209   */\n      sub\n        /* \"#utility.yul\":5185:5186   */\n      0x00\n        /* \"#utility.yul\":5174:5183   */\n      dup4\n        /* \"#utility.yul\":5170:5187   */\n      add\n        /* \"#utility.yul\":5163:5210   */\n      mstore\n        /* \"#utility.yul\":5227:5358   */\n      tag_167\n        /* \"#utility.yul\":5353:5357   */\n      dup2\n        /* \"#utility.yul\":5227:5358   */\n      tag_102\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5219:5358   */\n      swap1\n      pop\n        /* \"#utility.yul\":4946:5365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5371:5593   */\n    tag_38:\n        /* \"#utility.yul\":5464:5468   */\n      0x00\n        /* \"#utility.yul\":5502:5504   */\n      0x20\n        /* \"#utility.yul\":5491:5500   */\n      dup3\n        /* \"#utility.yul\":5487:5505   */\n      add\n        /* \"#utility.yul\":5479:5505   */\n      swap1\n      pop\n        /* \"#utility.yul\":5515:5586   */\n      tag_169\n        /* \"#utility.yul\":5583:5584   */\n      0x00\n        /* \"#utility.yul\":5572:5581   */\n      dup4\n        /* \"#utility.yul\":5568:5585   */\n      add\n        /* \"#utility.yul\":5559:5565   */\n      dup5\n        /* \"#utility.yul\":5515:5586   */\n      tag_87\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5371:5593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5599:5779   */\n    tag_103:\n        /* \"#utility.yul\":5647:5724   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5644:5645   */\n      0x00\n        /* \"#utility.yul\":5637:5725   */\n      mstore\n        /* \"#utility.yul\":5744:5748   */\n      0x11\n        /* \"#utility.yul\":5741:5742   */\n      0x04\n        /* \"#utility.yul\":5734:5749   */\n      mstore\n        /* \"#utility.yul\":5768:5772   */\n      0x24\n        /* \"#utility.yul\":5765:5766   */\n      0x00\n        /* \"#utility.yul\":5758:5773   */\n      revert\n        /* \"#utility.yul\":5785:6018   */\n    tag_43:\n        /* \"#utility.yul\":5824:5827   */\n      0x00\n        /* \"#utility.yul\":5847:5871   */\n      tag_172\n        /* \"#utility.yul\":5865:5870   */\n      dup3\n        /* \"#utility.yul\":5847:5871   */\n      tag_99\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5838:5871   */\n      swap2\n      pop\n        /* \"#utility.yul\":5893:5959   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5886:5891   */\n      dup3\n        /* \"#utility.yul\":5883:5960   */\n      sub\n        /* \"#utility.yul\":5880:5983   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5963:5981   */\n      tag_174\n      tag_103\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5880:5983   */\n    tag_173:\n        /* \"#utility.yul\":6010:6011   */\n      0x01\n        /* \"#utility.yul\":6003:6008   */\n      dup3\n        /* \"#utility.yul\":5999:6012   */\n      add\n        /* \"#utility.yul\":5992:6012   */\n      swap1\n      pop\n        /* \"#utility.yul\":5785:6018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6024:6218   */\n    tag_45:\n        /* \"#utility.yul\":6064:6068   */\n      0x00\n        /* \"#utility.yul\":6084:6104   */\n      tag_176\n        /* \"#utility.yul\":6102:6103   */\n      dup3\n        /* \"#utility.yul\":6084:6104   */\n      tag_99\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6079:6104   */\n      swap2\n      pop\n        /* \"#utility.yul\":6118:6138   */\n      tag_177\n        /* \"#utility.yul\":6136:6137   */\n      dup4\n        /* \"#utility.yul\":6118:6138   */\n      tag_99\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6113:6138   */\n      swap3\n      pop\n        /* \"#utility.yul\":6162:6163   */\n      dup3\n        /* \"#utility.yul\":6159:6160   */\n      dup3\n        /* \"#utility.yul\":6155:6164   */\n      sub\n        /* \"#utility.yul\":6147:6164   */\n      swap1\n      pop\n        /* \"#utility.yul\":6186:6187   */\n      dup2\n        /* \"#utility.yul\":6180:6184   */\n      dup2\n        /* \"#utility.yul\":6177:6188   */\n      gt\n        /* \"#utility.yul\":6174:6211   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":6191:6209   */\n      tag_179\n      tag_103\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6174:6211   */\n    tag_178:\n        /* \"#utility.yul\":6024:6218   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6224:6390   */\n    tag_104:\n        /* \"#utility.yul\":6364:6382   */\n      0x4372656174652070617469656e743a2000000000000000000000000000000000\n        /* \"#utility.yul\":6360:6361   */\n      0x00\n        /* \"#utility.yul\":6352:6358   */\n      dup3\n        /* \"#utility.yul\":6348:6362   */\n      add\n        /* \"#utility.yul\":6341:6383   */\n      mstore\n        /* \"#utility.yul\":6224:6390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6396:6762   */\n    tag_105:\n        /* \"#utility.yul\":6538:6541   */\n      0x00\n        /* \"#utility.yul\":6559:6626   */\n      tag_182\n        /* \"#utility.yul\":6623:6625   */\n      0x10\n        /* \"#utility.yul\":6618:6621   */\n      dup4\n        /* \"#utility.yul\":6559:6626   */\n      tag_82\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6552:6626   */\n      swap2\n      pop\n        /* \"#utility.yul\":6635:6728   */\n      tag_183\n        /* \"#utility.yul\":6724:6727   */\n      dup3\n        /* \"#utility.yul\":6635:6728   */\n      tag_104\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6753:6755   */\n      0x20\n        /* \"#utility.yul\":6748:6751   */\n      dup3\n        /* \"#utility.yul\":6744:6756   */\n      add\n        /* \"#utility.yul\":6737:6756   */\n      swap1\n      pop\n        /* \"#utility.yul\":6396:6762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6768:7518   */\n    tag_47:\n        /* \"#utility.yul\":7018:7022   */\n      0x00\n        /* \"#utility.yul\":7056:7059   */\n      0x80\n        /* \"#utility.yul\":7045:7054   */\n      dup3\n        /* \"#utility.yul\":7041:7060   */\n      add\n        /* \"#utility.yul\":7033:7060   */\n      swap1\n      pop\n        /* \"#utility.yul\":7106:7115   */\n      dup2\n        /* \"#utility.yul\":7100:7104   */\n      dup2\n        /* \"#utility.yul\":7096:7116   */\n      sub\n        /* \"#utility.yul\":7092:7093   */\n      0x00\n        /* \"#utility.yul\":7081:7090   */\n      dup4\n        /* \"#utility.yul\":7077:7094   */\n      add\n        /* \"#utility.yul\":7070:7117   */\n      mstore\n        /* \"#utility.yul\":7134:7265   */\n      tag_185\n        /* \"#utility.yul\":7260:7264   */\n      dup2\n        /* \"#utility.yul\":7134:7265   */\n      tag_105\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7126:7265   */\n      swap1\n      pop\n        /* \"#utility.yul\":7275:7347   */\n      tag_186\n        /* \"#utility.yul\":7343:7345   */\n      0x20\n        /* \"#utility.yul\":7332:7341   */\n      dup4\n        /* \"#utility.yul\":7328:7346   */\n      add\n        /* \"#utility.yul\":7319:7325   */\n      dup7\n        /* \"#utility.yul\":7275:7347   */\n      tag_87\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7357:7429   */\n      tag_187\n        /* \"#utility.yul\":7425:7427   */\n      0x40\n        /* \"#utility.yul\":7414:7423   */\n      dup4\n        /* \"#utility.yul\":7410:7428   */\n      add\n        /* \"#utility.yul\":7401:7407   */\n      dup6\n        /* \"#utility.yul\":7357:7429   */\n      tag_100\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":7439:7511   */\n      tag_188\n        /* \"#utility.yul\":7507:7509   */\n      0x60\n        /* \"#utility.yul\":7496:7505   */\n      dup4\n        /* \"#utility.yul\":7492:7510   */\n      add\n        /* \"#utility.yul\":7483:7489   */\n      dup5\n        /* \"#utility.yul\":7439:7511   */\n      tag_87\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6768:7518   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7524:7756   */\n    tag_106:\n        /* \"#utility.yul\":7664:7698   */\n      0x50617469656e7420646f6e27742065786973747321436865636b207061746965\n        /* \"#utility.yul\":7660:7661   */\n      0x00\n        /* \"#utility.yul\":7652:7658   */\n      dup3\n        /* \"#utility.yul\":7648:7662   */\n      add\n        /* \"#utility.yul\":7641:7699   */\n      mstore\n        /* \"#utility.yul\":7733:7748   */\n      0x6e742773206163636f756e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":7728:7730   */\n      0x20\n        /* \"#utility.yul\":7720:7726   */\n      dup3\n        /* \"#utility.yul\":7716:7731   */\n      add\n        /* \"#utility.yul\":7709:7749   */\n      mstore\n        /* \"#utility.yul\":7524:7756   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7762:8128   */\n    tag_107:\n        /* \"#utility.yul\":7904:7907   */\n      0x00\n        /* \"#utility.yul\":7925:7992   */\n      tag_191\n        /* \"#utility.yul\":7989:7991   */\n      0x2d\n        /* \"#utility.yul\":7984:7987   */\n      dup4\n        /* \"#utility.yul\":7925:7992   */\n      tag_82\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7918:7992   */\n      swap2\n      pop\n        /* \"#utility.yul\":8001:8094   */\n      tag_192\n        /* \"#utility.yul\":8090:8093   */\n      dup3\n        /* \"#utility.yul\":8001:8094   */\n      tag_106\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8119:8121   */\n      0x40\n        /* \"#utility.yul\":8114:8117   */\n      dup3\n        /* \"#utility.yul\":8110:8122   */\n      add\n        /* \"#utility.yul\":8103:8122   */\n      swap1\n      pop\n        /* \"#utility.yul\":7762:8128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8134:8553   */\n    tag_51:\n        /* \"#utility.yul\":8300:8304   */\n      0x00\n        /* \"#utility.yul\":8338:8340   */\n      0x20\n        /* \"#utility.yul\":8327:8336   */\n      dup3\n        /* \"#utility.yul\":8323:8341   */\n      add\n        /* \"#utility.yul\":8315:8341   */\n      swap1\n      pop\n        /* \"#utility.yul\":8387:8396   */\n      dup2\n        /* \"#utility.yul\":8381:8385   */\n      dup2\n        /* \"#utility.yul\":8377:8397   */\n      sub\n        /* \"#utility.yul\":8373:8374   */\n      0x00\n        /* \"#utility.yul\":8362:8371   */\n      dup4\n        /* \"#utility.yul\":8358:8375   */\n      add\n        /* \"#utility.yul\":8351:8398   */\n      mstore\n        /* \"#utility.yul\":8415:8546   */\n      tag_194\n        /* \"#utility.yul\":8541:8545   */\n      dup2\n        /* \"#utility.yul\":8415:8546   */\n      tag_107\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":8407:8546   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8559:8675   */\n    tag_108:\n        /* \"#utility.yul\":8629:8650   */\n      tag_196\n        /* \"#utility.yul\":8644:8649   */\n      dup2\n        /* \"#utility.yul\":8629:8650   */\n      tag_97\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":8622:8627   */\n      dup2\n        /* \"#utility.yul\":8619:8651   */\n      eq\n        /* \"#utility.yul\":8609:8669   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":8665:8666   */\n      0x00\n        /* \"#utility.yul\":8662:8663   */\n      dup1\n        /* \"#utility.yul\":8655:8667   */\n      revert\n        /* \"#utility.yul\":8609:8669   */\n    tag_197:\n        /* \"#utility.yul\":8559:8675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8681:8818   */\n    tag_109:\n        /* \"#utility.yul\":8735:8740   */\n      0x00\n        /* \"#utility.yul\":8766:8772   */\n      dup2\n        /* \"#utility.yul\":8760:8773   */\n      mload\n        /* \"#utility.yul\":8751:8773   */\n      swap1\n      pop\n        /* \"#utility.yul\":8782:8812   */\n      tag_199\n        /* \"#utility.yul\":8806:8811   */\n      dup2\n        /* \"#utility.yul\":8782:8812   */\n      tag_108\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":8681:8818   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8824:9169   */\n    tag_57:\n        /* \"#utility.yul\":8891:8897   */\n      0x00\n        /* \"#utility.yul\":8940:8942   */\n      0x20\n        /* \"#utility.yul\":8928:8937   */\n      dup3\n        /* \"#utility.yul\":8919:8926   */\n      dup5\n        /* \"#utility.yul\":8915:8938   */\n      sub\n        /* \"#utility.yul\":8911:8943   */\n      slt\n        /* \"#utility.yul\":8908:9027   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":8946:9025   */\n      tag_202\n      tag_93\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8908:9027   */\n    tag_201:\n        /* \"#utility.yul\":9066:9067   */\n      0x00\n        /* \"#utility.yul\":9091:9152   */\n      tag_203\n        /* \"#utility.yul\":9144:9151   */\n      dup5\n        /* \"#utility.yul\":9135:9141   */\n      dup3\n        /* \"#utility.yul\":9124:9133   */\n      dup6\n        /* \"#utility.yul\":9120:9142   */\n      add\n        /* \"#utility.yul\":9091:9152   */\n      tag_109\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9081:9152   */\n      swap2\n      pop\n        /* \"#utility.yul\":9037:9162   */\n      pop\n        /* \"#utility.yul\":8824:9169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9175:9349   */\n    tag_110:\n        /* \"#utility.yul\":9315:9341   */\n      0x596f752063616e206e6f74206265206120646f63746f72210000000000000000\n        /* \"#utility.yul\":9311:9312   */\n      0x00\n        /* \"#utility.yul\":9303:9309   */\n      dup3\n        /* \"#utility.yul\":9299:9313   */\n      add\n        /* \"#utility.yul\":9292:9342   */\n      mstore\n        /* \"#utility.yul\":9175:9349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9355:9721   */\n    tag_111:\n        /* \"#utility.yul\":9497:9500   */\n      0x00\n        /* \"#utility.yul\":9518:9585   */\n      tag_206\n        /* \"#utility.yul\":9582:9584   */\n      0x18\n        /* \"#utility.yul\":9577:9580   */\n      dup4\n        /* \"#utility.yul\":9518:9585   */\n      tag_82\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9511:9585   */\n      swap2\n      pop\n        /* \"#utility.yul\":9594:9687   */\n      tag_207\n        /* \"#utility.yul\":9683:9686   */\n      dup3\n        /* \"#utility.yul\":9594:9687   */\n      tag_110\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":9712:9714   */\n      0x20\n        /* \"#utility.yul\":9707:9710   */\n      dup3\n        /* \"#utility.yul\":9703:9715   */\n      add\n        /* \"#utility.yul\":9696:9715   */\n      swap1\n      pop\n        /* \"#utility.yul\":9355:9721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9727:10146   */\n    tag_61:\n        /* \"#utility.yul\":9893:9897   */\n      0x00\n        /* \"#utility.yul\":9931:9933   */\n      0x20\n        /* \"#utility.yul\":9920:9929   */\n      dup3\n        /* \"#utility.yul\":9916:9934   */\n      add\n        /* \"#utility.yul\":9908:9934   */\n      swap1\n      pop\n        /* \"#utility.yul\":9980:9989   */\n      dup2\n        /* \"#utility.yul\":9974:9978   */\n      dup2\n        /* \"#utility.yul\":9970:9990   */\n      sub\n        /* \"#utility.yul\":9966:9967   */\n      0x00\n        /* \"#utility.yul\":9955:9964   */\n      dup4\n        /* \"#utility.yul\":9951:9968   */\n      add\n        /* \"#utility.yul\":9944:9991   */\n      mstore\n        /* \"#utility.yul\":10008:10139   */\n      tag_209\n        /* \"#utility.yul\":10134:10138   */\n      dup2\n        /* \"#utility.yul\":10008:10139   */\n      tag_111\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10000:10139   */\n      swap1\n      pop\n        /* \"#utility.yul\":9727:10146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10152:10484   */\n    tag_63:\n        /* \"#utility.yul\":10273:10277   */\n      0x00\n        /* \"#utility.yul\":10311:10313   */\n      0x40\n        /* \"#utility.yul\":10300:10309   */\n      dup3\n        /* \"#utility.yul\":10296:10314   */\n      add\n        /* \"#utility.yul\":10288:10314   */\n      swap1\n      pop\n        /* \"#utility.yul\":10324:10395   */\n      tag_211\n        /* \"#utility.yul\":10392:10393   */\n      0x00\n        /* \"#utility.yul\":10381:10390   */\n      dup4\n        /* \"#utility.yul\":10377:10394   */\n      add\n        /* \"#utility.yul\":10368:10374   */\n      dup6\n        /* \"#utility.yul\":10324:10395   */\n      tag_87\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":10405:10477   */\n      tag_212\n        /* \"#utility.yul\":10473:10475   */\n      0x20\n        /* \"#utility.yul\":10462:10471   */\n      dup4\n        /* \"#utility.yul\":10458:10476   */\n      add\n        /* \"#utility.yul\":10449:10455   */\n      dup5\n        /* \"#utility.yul\":10405:10477   */\n      tag_87\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":10152:10484   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10490:10646   */\n    tag_112:\n        /* \"#utility.yul\":10630:10638   */\n      0x446f63746f720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10626:10627   */\n      0x00\n        /* \"#utility.yul\":10618:10624   */\n      dup3\n        /* \"#utility.yul\":10614:10628   */\n      add\n        /* \"#utility.yul\":10607:10639   */\n      mstore\n        /* \"#utility.yul\":10490:10646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10652:11017   */\n    tag_113:\n        /* \"#utility.yul\":10794:10797   */\n      0x00\n        /* \"#utility.yul\":10815:10881   */\n      tag_215\n        /* \"#utility.yul\":10879:10880   */\n      0x06\n        /* \"#utility.yul\":10874:10877   */\n      dup4\n        /* \"#utility.yul\":10815:10881   */\n      tag_82\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":10808:10881   */\n      swap2\n      pop\n        /* \"#utility.yul\":10890:10983   */\n      tag_216\n        /* \"#utility.yul\":10979:10982   */\n      dup3\n        /* \"#utility.yul\":10890:10983   */\n      tag_112\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":11008:11010   */\n      0x20\n        /* \"#utility.yul\":11003:11006   */\n      dup3\n        /* \"#utility.yul\":10999:11011   */\n      add\n        /* \"#utility.yul\":10992:11011   */\n      swap1\n      pop\n        /* \"#utility.yul\":10652:11017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11023:11552   */\n    tag_68:\n        /* \"#utility.yul\":11217:11221   */\n      0x00\n        /* \"#utility.yul\":11255:11257   */\n      0x40\n        /* \"#utility.yul\":11244:11253   */\n      dup3\n        /* \"#utility.yul\":11240:11258   */\n      add\n        /* \"#utility.yul\":11232:11258   */\n      swap1\n      pop\n        /* \"#utility.yul\":11304:11313   */\n      dup2\n        /* \"#utility.yul\":11298:11302   */\n      dup2\n        /* \"#utility.yul\":11294:11314   */\n      sub\n        /* \"#utility.yul\":11290:11291   */\n      0x00\n        /* \"#utility.yul\":11279:11288   */\n      dup4\n        /* \"#utility.yul\":11275:11292   */\n      add\n        /* \"#utility.yul\":11268:11315   */\n      mstore\n        /* \"#utility.yul\":11332:11463   */\n      tag_218\n        /* \"#utility.yul\":11458:11462   */\n      dup2\n        /* \"#utility.yul\":11332:11463   */\n      tag_113\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":11324:11463   */\n      swap1\n      pop\n        /* \"#utility.yul\":11473:11545   */\n      tag_219\n        /* \"#utility.yul\":11541:11543   */\n      0x20\n        /* \"#utility.yul\":11530:11539   */\n      dup4\n        /* \"#utility.yul\":11526:11544   */\n      add\n        /* \"#utility.yul\":11517:11523   */\n      dup5\n        /* \"#utility.yul\":11473:11545   */\n      tag_87\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":11023:11552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11558:11787   */\n    tag_114:\n        /* \"#utility.yul\":11698:11732   */\n      0x596f752063616e206e6f74206265206120646f63746f7220616e64206e6f7468\n        /* \"#utility.yul\":11694:11695   */\n      0x00\n        /* \"#utility.yul\":11686:11692   */\n      dup3\n        /* \"#utility.yul\":11682:11696   */\n      add\n        /* \"#utility.yul\":11675:11733   */\n      mstore\n        /* \"#utility.yul\":11767:11779   */\n      0x696e6720616e75616c2100000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11762:11764   */\n      0x20\n        /* \"#utility.yul\":11754:11760   */\n      dup3\n        /* \"#utility.yul\":11750:11765   */\n      add\n        /* \"#utility.yul\":11743:11780   */\n      mstore\n        /* \"#utility.yul\":11558:11787   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11793:12159   */\n    tag_115:\n        /* \"#utility.yul\":11935:11938   */\n      0x00\n        /* \"#utility.yul\":11956:12023   */\n      tag_222\n        /* \"#utility.yul\":12020:12022   */\n      0x2a\n        /* \"#utility.yul\":12015:12018   */\n      dup4\n        /* \"#utility.yul\":11956:12023   */\n      tag_82\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":11949:12023   */\n      swap2\n      pop\n        /* \"#utility.yul\":12032:12125   */\n      tag_223\n        /* \"#utility.yul\":12121:12124   */\n      dup3\n        /* \"#utility.yul\":12032:12125   */\n      tag_114\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":12150:12152   */\n      0x40\n        /* \"#utility.yul\":12145:12148   */\n      dup3\n        /* \"#utility.yul\":12141:12153   */\n      add\n        /* \"#utility.yul\":12134:12153   */\n      swap1\n      pop\n        /* \"#utility.yul\":11793:12159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12165:12584   */\n    tag_73:\n        /* \"#utility.yul\":12331:12335   */\n      0x00\n        /* \"#utility.yul\":12369:12371   */\n      0x20\n        /* \"#utility.yul\":12358:12367   */\n      dup3\n        /* \"#utility.yul\":12354:12372   */\n      add\n        /* \"#utility.yul\":12346:12372   */\n      swap1\n      pop\n        /* \"#utility.yul\":12418:12427   */\n      dup2\n        /* \"#utility.yul\":12412:12416   */\n      dup2\n        /* \"#utility.yul\":12408:12428   */\n      sub\n        /* \"#utility.yul\":12404:12405   */\n      0x00\n        /* \"#utility.yul\":12393:12402   */\n      dup4\n        /* \"#utility.yul\":12389:12406   */\n      add\n        /* \"#utility.yul\":12382:12429   */\n      mstore\n        /* \"#utility.yul\":12446:12577   */\n      tag_225\n        /* \"#utility.yul\":12572:12576   */\n      dup2\n        /* \"#utility.yul\":12446:12577   */\n      tag_115\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":12438:12577   */\n      swap1\n      pop\n        /* \"#utility.yul\":12165:12584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12590:12762   */\n    tag_116:\n        /* \"#utility.yul\":12730:12754   */\n      0x455243313136373a20637265617465206661696c656400000000000000000000\n        /* \"#utility.yul\":12726:12727   */\n      0x00\n        /* \"#utility.yul\":12718:12724   */\n      dup3\n        /* \"#utility.yul\":12714:12728   */\n      add\n        /* \"#utility.yul\":12707:12755   */\n      mstore\n        /* \"#utility.yul\":12590:12762   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12768:13134   */\n    tag_117:\n        /* \"#utility.yul\":12910:12913   */\n      0x00\n        /* \"#utility.yul\":12931:12998   */\n      tag_228\n        /* \"#utility.yul\":12995:12997   */\n      0x16\n        /* \"#utility.yul\":12990:12993   */\n      dup4\n        /* \"#utility.yul\":12931:12998   */\n      tag_82\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":12924:12998   */\n      swap2\n      pop\n        /* \"#utility.yul\":13007:13100   */\n      tag_229\n        /* \"#utility.yul\":13096:13099   */\n      dup3\n        /* \"#utility.yul\":13007:13100   */\n      tag_116\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":13125:13127   */\n      0x20\n        /* \"#utility.yul\":13120:13123   */\n      dup3\n        /* \"#utility.yul\":13116:13128   */\n      add\n        /* \"#utility.yul\":13109:13128   */\n      swap1\n      pop\n        /* \"#utility.yul\":12768:13134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13140:13559   */\n    tag_81:\n        /* \"#utility.yul\":13306:13310   */\n      0x00\n        /* \"#utility.yul\":13344:13346   */\n      0x20\n        /* \"#utility.yul\":13333:13342   */\n      dup3\n        /* \"#utility.yul\":13329:13347   */\n      add\n        /* \"#utility.yul\":13321:13347   */\n      swap1\n      pop\n        /* \"#utility.yul\":13393:13402   */\n      dup2\n        /* \"#utility.yul\":13387:13391   */\n      dup2\n        /* \"#utility.yul\":13383:13403   */\n      sub\n        /* \"#utility.yul\":13379:13380   */\n      0x00\n        /* \"#utility.yul\":13368:13377   */\n      dup4\n        /* \"#utility.yul\":13364:13381   */\n      add\n        /* \"#utility.yul\":13357:13404   */\n      mstore\n        /* \"#utility.yul\":13421:13552   */\n      tag_231\n        /* \"#utility.yul\":13547:13551   */\n      dup2\n        /* \"#utility.yul\":13421:13552   */\n      tag_117\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":13413:13552   */\n      swap1\n      pop\n        /* \"#utility.yul\":13140:13559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122015bf605286accfeb566a2ad52e5dcebd25ae1c57b2dac129426d21255f535b7664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_696": {
									"entryPoint": null,
									"id": 696,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600080553480156200001557600080fd5b50604051620010d9380380620010d983398181016040528101906200003b9190620000ed565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b58262000088565b9050919050565b620000c781620000a8565b8114620000d357600080fd5b50565b600081519050620000e781620000bc565b92915050565b60006020828403121562000106576200010562000083565b5b60006200011684828501620000d6565b91505092915050565b610faa806200012f6000396000f3fe608060405234801561001057600080fd5b506004361061005b5760003560e01c806335a271781461009a578063466a0146146100a4578063c375110d146100d4578063cd8cb137146100f0578063f531072c1461010e5761005c565b5b7fa46ff6f8d8019b1a730a7666fa32a0236c89399dd776007c7485144b71e9e27933600036604051610090939291906109a7565b60405180910390a1005b6100a261012a565b005b6100be60048036038101906100b99190610a1d565b610373565b6040516100cb9190610a65565b60405180910390f35b6100ee60048036038101906100e99190610a1d565b61052b565b005b6100f86106a5565b6040516101059190610a99565b60405180910390f35b61012860048036038101906101239190610a1d565b6106ae565b005b600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ef90610b00565b60405180910390fd5b6000610225600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166107f1565b90508073ffffffffffffffffffffffffffffffffffffffff16634420e486336040518263ffffffff1660e01b81526004016102609190610b20565b600060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b5050505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008081548092919061032290610b6a565b91905055507f85858416f612212ddb7c6344d7b58182bad1de3be71438a88c6f19f0fa2b826d3360016000546103589190610bb2565b8360405161036893929190610c32565b60405180910390a150565b600081600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610cee565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a8f2be76336040518263ffffffff1660e01b81526004016104e19190610b20565b602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105229190610d3a565b92505050919050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090610db3565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ac0cc46533846040518363ffffffff1660e01b8152600401610638929190610dd3565b600060405180830381600087803b15801561065257600080fd5b505af1158015610666573d6000803e3d6000fd5b505050507fcf135c3b898e1e68301ee3615d92cb56b00c3fc03db5a8b44fea7363b96e0dae826040516106999190610e48565b60405180910390a15050565b60008054905090565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361071c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071390610ee8565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16634cc2f08133846040518363ffffffff1660e01b81526004016107bb929190610dd3565b600060405180830381600087803b1580156107d557600080fd5b505af11580156107e9573d6000803e3d6000fd5b505050505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d90610f54565b60405180910390fd5b919050565b600082825260208201905092915050565b7f66616c6c6261636b000000000000000000000000000000000000000000000000600082015250565b60006108f26008836108ab565b91506108fd826108bc565b602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061093382610908565b9050919050565b61094381610928565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006109868385610949565b935061099383858461095a565b61099c83610969565b840190509392505050565b600060608201905081810360008301526109c0816108e5565b90506109cf602083018661093a565b81810360408301526109e281848661097a565b9050949350505050565b600080fd5b6109fa81610928565b8114610a0557600080fd5b50565b600081359050610a17816109f1565b92915050565b600060208284031215610a3357610a326109ec565b5b6000610a4184828501610a08565b91505092915050565b60008115159050919050565b610a5f81610a4a565b82525050565b6000602082019050610a7a6000830184610a56565b92915050565b6000819050919050565b610a9381610a80565b82525050565b6000602082019050610aae6000830184610a8a565b92915050565b7f596f752077657265207265676973746572210000000000000000000000000000600082015250565b6000610aea6012836108ab565b9150610af582610ab4565b602082019050919050565b60006020820190508181036000830152610b1981610add565b9050919050565b6000602082019050610b35600083018461093a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b7582610a80565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ba757610ba6610b3b565b5b600182019050919050565b6000610bbd82610a80565b9150610bc883610a80565b9250828203905081811115610be057610bdf610b3b565b5b92915050565b7f4372656174652070617469656e743a2000000000000000000000000000000000600082015250565b6000610c1c6010836108ab565b9150610c2782610be6565b602082019050919050565b60006080820190508181036000830152610c4b81610c0f565b9050610c5a602083018661093a565b610c676040830185610a8a565b610c74606083018461093a565b949350505050565b7f50617469656e7420646f6e27742065786973747321436865636b20706174696560008201527f6e742773206163636f756e742100000000000000000000000000000000000000602082015250565b6000610cd8602d836108ab565b9150610ce382610c7c565b604082019050919050565b60006020820190508181036000830152610d0781610ccb565b9050919050565b610d1781610a4a565b8114610d2257600080fd5b50565b600081519050610d3481610d0e565b92915050565b600060208284031215610d5057610d4f6109ec565b5b6000610d5e84828501610d25565b91505092915050565b7f596f752063616e206e6f74206265206120646f63746f72210000000000000000600082015250565b6000610d9d6018836108ab565b9150610da882610d67565b602082019050919050565b60006020820190508181036000830152610dcc81610d90565b9050919050565b6000604082019050610de8600083018561093a565b610df5602083018461093a565b9392505050565b7f446f63746f720000000000000000000000000000000000000000000000000000600082015250565b6000610e326006836108ab565b9150610e3d82610dfc565b602082019050919050565b60006040820190508181036000830152610e6181610e25565b9050610e70602083018461093a565b92915050565b7f596f752063616e206e6f74206265206120646f63746f7220616e64206e6f746860008201527f696e6720616e75616c2100000000000000000000000000000000000000000000602082015250565b6000610ed2602a836108ab565b9150610edd82610e76565b604082019050919050565b60006020820190508181036000830152610f0181610ec5565b9050919050565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b6000610f3e6016836108ab565b9150610f4982610f08565b602082019050919050565b60006020820190508181036000830152610f6d81610f31565b905091905056fea264697066735822122015bf605286accfeb566a2ad52e5dcebd25ae1c57b2dac129426d21255f535b7664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10D9 CODESIZE SUB DUP1 PUSH3 0x10D9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3B SWAP2 SWAP1 PUSH3 0xED JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x11F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB5 DUP3 PUSH3 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC7 DUP2 PUSH3 0xA8 JUMP JUMPDEST DUP2 EQ PUSH3 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE7 DUP2 PUSH3 0xBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x106 JUMPI PUSH3 0x105 PUSH3 0x83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x116 DUP5 DUP3 DUP6 ADD PUSH3 0xD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFAA DUP1 PUSH3 0x12F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x35A27178 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x466A0146 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0xC375110D EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xCD8CB137 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xF531072C EQ PUSH2 0x10E JUMPI PUSH2 0x5C JUMP JUMPDEST JUMPDEST PUSH32 0xA46FF6F8D8019B1A730A7666FA32A0236C89399DD776007C7485144B71E9E279 CALLER PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH2 0xA2 PUSH2 0x12A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF8 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x225 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4420E486 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x322 SWAP1 PUSH2 0xB6A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x85858416F612212DDB7C6344D7B58182BAD1DE3BE71438A88C6F19F0FA2B826D CALLER PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x368 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8F2BE76 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x522 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x590 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAC0CC465 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP3 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xCF135C3B898E1E68301EE3615D92CB56B00C3FC03DB5A8B44FEA7363B96E0DAE DUP3 PUSH1 0x40 MLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4CC2F081 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BB SWAP3 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP3 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP3 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F2 PUSH1 0x8 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0x8FD DUP3 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x943 DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 DUP4 DUP6 PUSH2 0x949 JUMP JUMPDEST SWAP4 POP PUSH2 0x993 DUP4 DUP6 DUP5 PUSH2 0x95A JUMP JUMPDEST PUSH2 0x99C DUP4 PUSH2 0x969 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C0 DUP2 PUSH2 0x8E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x9CF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x93A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x9E2 DUP2 DUP5 DUP7 PUSH2 0x97A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0x928 JUMP JUMPDEST DUP2 EQ PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA17 DUP2 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA33 JUMPI PUSH2 0xA32 PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA41 DUP5 DUP3 DUP6 ADD PUSH2 0xA08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5F DUP2 PUSH2 0xA4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA93 DUP2 PUSH2 0xA80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752077657265207265676973746572210000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA PUSH1 0x12 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xAF5 DUP3 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB19 DUP2 PUSH2 0xADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB35 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB75 DUP3 PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xBA7 JUMPI PUSH2 0xBA6 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC8 DUP4 PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBE0 JUMPI PUSH2 0xBDF PUSH2 0xB3B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4372656174652070617469656E743A2000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH1 0x10 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xC27 DUP3 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC4B DUP2 PUSH2 0xC0F JUMP JUMPDEST SWAP1 POP PUSH2 0xC5A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x93A JUMP JUMPDEST PUSH2 0xC67 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH2 0xC74 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x50617469656E7420646F6E27742065786973747321436865636B207061746965 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E742773206163636F756E742100000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD8 PUSH1 0x2D DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xCE3 DUP3 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD07 DUP2 PUSH2 0xCCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD17 DUP2 PUSH2 0xA4A JUMP JUMPDEST DUP2 EQ PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD34 DUP2 PUSH2 0xD0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD50 JUMPI PUSH2 0xD4F PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD5E DUP5 DUP3 DUP6 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206E6F74206265206120646F63746F72210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9D PUSH1 0x18 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP3 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDCC DUP2 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x93A JUMP JUMPDEST PUSH2 0xDF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446F63746F720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE32 PUSH1 0x6 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xE3D DUP3 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE61 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP PUSH2 0xE70 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206E6F74206265206120646F63746F7220616E64206E6F7468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E6720616E75616C2100000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED2 PUSH1 0x2A DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xEDD DUP3 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF01 DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3E PUSH1 0x16 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xF49 DUP3 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6D DUP2 PUSH2 0xF31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xBF PUSH1 0x52 DUP7 0xAC 0xCF 0xEB JUMP PUSH11 0x2AD52E5DCEBD25AE1C57B2 0xDA 0xC1 0x29 TIMESTAMP PUSH14 0x21255F535B7664736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "475:2282:3:-:0;;;737:1;705:33;;843:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;915:15;898:14;;:32;;;;;;;;;;;;;;;;;;843:95;475:2282;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;475:2282:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_881": {
									"entryPoint": null,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@anualRole_869": {
									"entryPoint": 1710,
									"id": 869,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkAccess_792": {
									"entryPoint": 883,
									"id": 792,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@clone_2141": {
									"entryPoint": 2033,
									"id": 2141,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createPatient_766": {
									"entryPoint": 298,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCountPatient_800": {
									"entryPoint": 1701,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@giveRole_837": {
									"entryPoint": 1323,
									"id": 837,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0_t_address_t_uint256_t_address__to_t_string_memory_ptr_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_t_address_t_bytes_calldata_ptr__to_t_string_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2471,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 2922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0": {
									"entryPoint": 3046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759": {
									"entryPoint": 3580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010": {
									"entryPoint": 2236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a": {
									"entryPoint": 3196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13562:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:10",
														"type": ""
													}
												],
												"src": "7:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:10"
																	},
																	{
																		"hexValue": "66616c6c6261636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:10:10",
																		"type": "",
																		"value": "fallback"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:34:10"
														}
													]
												},
												"name": "store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:10",
														"type": ""
													}
												],
												"src": "182:158:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:219:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "502:73:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "568:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "573:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:66:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "673:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010",
																	"nodeType": "YulIdentifier",
																	"src": "584:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "584:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "686:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "697:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "702:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "693:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "693:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "686:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "480:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "488:3:10",
														"type": ""
													}
												],
												"src": "346:365:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "762:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "772:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "787:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "783:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "772:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "744:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "754:7:10",
														"type": ""
													}
												],
												"src": "717:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "894:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "904:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "933:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "915:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "915:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "904:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "876:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "886:7:10",
														"type": ""
													}
												],
												"src": "849:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1016:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1033:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1056:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1038:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1026:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1026:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1004:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1011:3:10",
														"type": ""
													}
												],
												"src": "951:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1170:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1187:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1192:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1180:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1180:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1208:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1227:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1223:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1208:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1142:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1147:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1158:11:10",
														"type": ""
													}
												],
												"src": "1075:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1336:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1346:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1323:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1373:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1369:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1362:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1295:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1300:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1305:6:10",
														"type": ""
													}
												],
												"src": "1249:146:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1459:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1477:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1484:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1493:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1489:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1469:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1459:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1432:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1442:6:10",
														"type": ""
													}
												],
												"src": "1401:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1631:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1641:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1706:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1711:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1648:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "1765:5:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1777:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1728:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1728:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1728:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1793:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1804:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1809:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1809:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1800:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1793:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "1604:5:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1611:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1619:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1627:3:10",
														"type": ""
													}
												],
												"src": "1531:314:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2106:491:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2116:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2128:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2139:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2124:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2116:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2159:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2182:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2188:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2152:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2152:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2208:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2342:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2216:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2208:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2401:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2425:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2357:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2450:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2461:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2446:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2446:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2470:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2476:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2466:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2466:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:94:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2568:6:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2585:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2504:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:86:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2496:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_t_address_t_bytes_calldata_ptr__to_t_string_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2062:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2074:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2082:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2090:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2101:4:10",
														"type": ""
													}
												],
												"src": "1851:746:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2643:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2653:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2663:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2636:6:10",
														"type": ""
													}
												],
												"src": "2603:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2773:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2793:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2783:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2684:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2896:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2913:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2916:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2906:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2807:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2973:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3030:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3039:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3042:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3032:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3032:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3032:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2996:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3021:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3003:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3003:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2993:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2993:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:43:10"
															},
															"nodeType": "YulIf",
															"src": "2983:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2966:5:10",
														"type": ""
													}
												],
												"src": "2930:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3110:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3120:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3142:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3129:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3120:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3185:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3158:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3088:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3096:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3104:5:10",
														"type": ""
													}
												],
												"src": "3058:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3269:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3315:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3317:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3317:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3317:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3290:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3299:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3311:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3282:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:32:10"
															},
															"nodeType": "YulIf",
															"src": "3279:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3408:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3423:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3437:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3427:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3452:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3487:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3498:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3483:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3483:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3507:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3462:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3462:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3452:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3239:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3250:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3262:6:10",
														"type": ""
													}
												],
												"src": "3203:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3580:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3590:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3615:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3608:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3601:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3590:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3562:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3572:7:10",
														"type": ""
													}
												],
												"src": "3538:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3693:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3710:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3730:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3715:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3715:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3703:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3703:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3681:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3688:3:10",
														"type": ""
													}
												],
												"src": "3634:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3841:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3851:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3863:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3874:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3859:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3851:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3925:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3938:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3949:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3934:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3887:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3887:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3887:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3813:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3825:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3836:4:10",
														"type": ""
													}
												],
												"src": "3749:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4010:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4020:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4031:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4020:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3992:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4002:7:10",
														"type": ""
													}
												],
												"src": "3965:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4113:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4130:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4153:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4135:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4135:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4123:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4101:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4108:3:10",
														"type": ""
													}
												],
												"src": "4048:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4270:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4280:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4288:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4280:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4360:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4373:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4384:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4369:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4316:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4242:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4254:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4265:4:10",
														"type": ""
													}
												],
												"src": "4172:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4506:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4528:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4536:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4524:14:10"
																	},
																	{
																		"hexValue": "596f75207765726520726567697374657221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4540:20:10",
																		"type": "",
																		"value": "You were register!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4517:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4498:6:10",
														"type": ""
													}
												],
												"src": "4400:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4720:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4730:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4796:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4801:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4737:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4737:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4902:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4",
																	"nodeType": "YulIdentifier",
																	"src": "4813:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4813:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4813:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4915:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4926:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4922:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4915:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4708:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4716:3:10",
														"type": ""
													}
												],
												"src": "4574:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5117:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5127:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5139:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5127:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5174:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5185:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5170:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5193:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5199:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5189:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5189:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5163:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5219:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5353:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5227:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5219:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5112:4:10",
														"type": ""
													}
												],
												"src": "4946:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5469:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5479:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5491:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5502:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5479:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5559:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5572:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5583:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5568:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5515:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5515:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5515:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5441:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5453:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5464:4:10",
														"type": ""
													}
												],
												"src": "5371:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5627:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5644:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5647:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5637:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5741:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5744:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5734:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5768:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5758:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5758:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5599:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5828:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5838:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5865:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5847:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5838:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5961:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5963:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5963:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5963:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5886:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5893:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5883:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:77:10"
															},
															"nodeType": "YulIf",
															"src": "5880:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5992:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6003:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6010:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5999:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5992:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5814:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5824:3:10",
														"type": ""
													}
												],
												"src": "5785:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6069:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6079:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6102:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6084:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6079:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6113:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6136:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6118:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6113:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6147:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6159:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6162:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6155:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6147:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6189:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6191:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6191:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6180:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6186:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6177:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:11:10"
															},
															"nodeType": "YulIf",
															"src": "6174:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6055:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6058:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6064:4:10",
														"type": ""
													}
												],
												"src": "6024:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6330:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6352:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6360:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6348:14:10"
																	},
																	{
																		"hexValue": "4372656174652070617469656e743a20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6364:18:10",
																		"type": "",
																		"value": "Create patient: "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6341:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6341:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6322:6:10",
														"type": ""
													}
												],
												"src": "6224:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6542:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6552:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6618:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6623:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6559:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6724:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0",
																	"nodeType": "YulIdentifier",
																	"src": "6635:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6635:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6635:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6737:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6753:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6744:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6737:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6530:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6538:3:10",
														"type": ""
													}
												],
												"src": "6396:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7023:495:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7033:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7045:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7056:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7041:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7041:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7033:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7081:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7092:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7077:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7100:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7096:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7096:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7070:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7070:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7070:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7126:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7260:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7134:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7134:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7126:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7319:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7332:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7343:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7328:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7328:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7275:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7275:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7275:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7401:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7414:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7425:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7410:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7410:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7357:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7357:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7483:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7496:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7507:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7492:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7439:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7439:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7439:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0_t_address_t_uint256_t_address__to_t_string_memory_ptr_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6979:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6991:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6999:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7007:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7018:4:10",
														"type": ""
													}
												],
												"src": "6768:750:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7630:126:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7652:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7660:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:14:10"
																	},
																	{
																		"hexValue": "50617469656e7420646f6e27742065786973747321436865636b207061746965",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7664:34:10",
																		"type": "",
																		"value": "Patient don't exists!Check patie"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7641:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7641:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7641:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7720:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7728:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7716:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7716:15:10"
																	},
																	{
																		"hexValue": "6e742773206163636f756e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7733:15:10",
																		"type": "",
																		"value": "nt's account!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7709:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7709:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7622:6:10",
														"type": ""
													}
												],
												"src": "7524:232:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7908:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7918:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7984:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7989:2:10",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7925:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a",
																	"nodeType": "YulIdentifier",
																	"src": "8001:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8001:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8001:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8103:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8114:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8119:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8110:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8103:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7896:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7904:3:10",
														"type": ""
													}
												],
												"src": "7762:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8305:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8315:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8327:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8323:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8323:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8315:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8362:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8373:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8358:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8358:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8381:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8387:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8377:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8351:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8351:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8407:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8541:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8415:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8415:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8407:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8285:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8300:4:10",
														"type": ""
													}
												],
												"src": "8134:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8599:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8653:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8662:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8665:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8655:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8655:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8655:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8622:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8644:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "8629:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8629:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8619:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8619:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8612:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8612:40:10"
															},
															"nodeType": "YulIf",
															"src": "8609:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8592:5:10",
														"type": ""
													}
												],
												"src": "8559:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8741:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8751:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8766:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8760:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8760:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8751:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8806:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8782:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8782:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8719:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8735:5:10",
														"type": ""
													}
												],
												"src": "8681:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8898:271:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8944:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8946:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8946:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8946:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8919:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8928:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8915:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8915:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8940:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8911:32:10"
															},
															"nodeType": "YulIf",
															"src": "8908:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "9037:125:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9052:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9066:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9056:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9081:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9124:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9135:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9120:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9144:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9091:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9091:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9081:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8868:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8879:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8891:6:10",
														"type": ""
													}
												],
												"src": "8824:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9281:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9303:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9311:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9299:14:10"
																	},
																	{
																		"hexValue": "596f752063616e206e6f74206265206120646f63746f7221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9315:26:10",
																		"type": "",
																		"value": "You can not be a doctor!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9292:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9292:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9292:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9273:6:10",
														"type": ""
													}
												],
												"src": "9175:174:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9501:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9511:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9577:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9582:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9518:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9518:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9511:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9683:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6",
																	"nodeType": "YulIdentifier",
																	"src": "9594:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9594:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9696:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9707:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9712:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9703:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9703:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9696:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9489:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9497:3:10",
														"type": ""
													}
												],
												"src": "9355:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9898:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9908:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9920:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9931:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9916:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9916:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9908:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9955:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9966:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9951:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9974:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9980:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9970:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9970:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9944:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9944:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9944:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10000:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10134:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10008:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10000:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9878:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9893:4:10",
														"type": ""
													}
												],
												"src": "9727:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10278:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10288:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10296:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10405:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10242:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10254:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10262:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10273:4:10",
														"type": ""
													}
												],
												"src": "10152:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10596:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10618:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10626:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10614:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10614:14:10"
																	},
																	{
																		"hexValue": "446f63746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10630:8:10",
																		"type": "",
																		"value": "Doctor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10607:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10607:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10607:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10588:6:10",
														"type": ""
													}
												],
												"src": "10490:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10798:219:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10808:73:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10874:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10879:1:10",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10815:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10815:66:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10808:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10979:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759",
																	"nodeType": "YulIdentifier",
																	"src": "10890:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10890:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10992:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11003:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11008:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10999:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10999:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10992:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10786:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10794:3:10",
														"type": ""
													}
												],
												"src": "10652:365:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11222:330:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11232:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11244:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11255:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11240:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11240:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11232:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11279:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11290:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11275:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11275:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11298:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11304:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11294:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11268:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11268:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11268:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11324:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11458:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11332:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11332:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11324:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11517:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11530:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11541:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11526:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11526:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11473:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11473:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11473:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11194:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11206:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11217:4:10",
														"type": ""
													}
												],
												"src": "11023:529:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11664:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11686:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11694:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11682:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11682:14:10"
																	},
																	{
																		"hexValue": "596f752063616e206e6f74206265206120646f63746f7220616e64206e6f7468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11698:34:10",
																		"type": "",
																		"value": "You can not be a doctor and noth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11675:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11675:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11675:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11754:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11762:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11750:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11750:15:10"
																	},
																	{
																		"hexValue": "696e6720616e75616c21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11767:12:10",
																		"type": "",
																		"value": "ing anual!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11743:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11743:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11743:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11656:6:10",
														"type": ""
													}
												],
												"src": "11558:229:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11939:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11949:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12015:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12020:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11956:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11956:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11949:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12121:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a",
																	"nodeType": "YulIdentifier",
																	"src": "12032:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12032:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12032:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12134:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12145:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12150:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12141:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12141:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12134:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11927:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11935:3:10",
														"type": ""
													}
												],
												"src": "11793:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12336:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12346:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12358:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12369:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12354:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12354:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12346:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12393:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12404:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12389:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12412:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12418:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12408:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12408:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12382:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12382:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12382:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12438:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12572:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12446:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12446:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12438:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12316:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12331:4:10",
														"type": ""
													}
												],
												"src": "12165:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12696:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12718:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12726:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12714:14:10"
																	},
																	{
																		"hexValue": "455243313136373a20637265617465206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12730:24:10",
																		"type": "",
																		"value": "ERC1167: create failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12707:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12707:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12707:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12688:6:10",
														"type": ""
													}
												],
												"src": "12590:172:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12914:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12924:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12990:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12995:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12931:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12931:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12924:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13096:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																	"nodeType": "YulIdentifier",
																	"src": "13007:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13007:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13007:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13109:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13120:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13125:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13116:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13116:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13109:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12902:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12910:3:10",
														"type": ""
													}
												],
												"src": "12768:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13311:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13321:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13333:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13344:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13329:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13329:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13321:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13368:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13379:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13364:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13364:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13387:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13393:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13383:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13357:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13357:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13357:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13413:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13547:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13421:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13421:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13413:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13291:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13306:4:10",
														"type": ""
													}
												],
												"src": "13140:419:10"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010(memPtr) {\n\n        mstore(add(memPtr, 0), \"fallback\")\n\n    }\n\n    function abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010(pos)\n        end := add(pos, 32)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_t_address_t_bytes_calldata_ptr__to_t_string_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"You were register!\")\n\n    }\n\n    function abi_encode_t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Create patient: \")\n\n    }\n\n    function abi_encode_t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0_t_address_t_uint256_t_address__to_t_string_memory_ptr_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Patient don't exists!Check patie\")\n\n        mstore(add(memPtr, 32), \"nt's account!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can not be a doctor!\")\n\n    }\n\n    function abi_encode_t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Doctor\")\n\n    }\n\n    function abi_encode_t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can not be a doctor and noth\")\n\n        mstore(add(memPtr, 32), \"ing anual!\")\n\n    }\n\n    function abi_encode_t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1167: create failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061005b5760003560e01c806335a271781461009a578063466a0146146100a4578063c375110d146100d4578063cd8cb137146100f0578063f531072c1461010e5761005c565b5b7fa46ff6f8d8019b1a730a7666fa32a0236c89399dd776007c7485144b71e9e27933600036604051610090939291906109a7565b60405180910390a1005b6100a261012a565b005b6100be60048036038101906100b99190610a1d565b610373565b6040516100cb9190610a65565b60405180910390f35b6100ee60048036038101906100e99190610a1d565b61052b565b005b6100f86106a5565b6040516101059190610a99565b60405180910390f35b61012860048036038101906101239190610a1d565b6106ae565b005b600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ef90610b00565b60405180910390fd5b6000610225600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166107f1565b90508073ffffffffffffffffffffffffffffffffffffffff16634420e486336040518263ffffffff1660e01b81526004016102609190610b20565b600060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b5050505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008081548092919061032290610b6a565b91905055507f85858416f612212ddb7c6344d7b58182bad1de3be71438a88c6f19f0fa2b826d3360016000546103589190610bb2565b8360405161036893929190610c32565b60405180910390a150565b600081600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610cee565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a8f2be76336040518263ffffffff1660e01b81526004016104e19190610b20565b602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105229190610d3a565b92505050919050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090610db3565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ac0cc46533846040518363ffffffff1660e01b8152600401610638929190610dd3565b600060405180830381600087803b15801561065257600080fd5b505af1158015610666573d6000803e3d6000fd5b505050507fcf135c3b898e1e68301ee3615d92cb56b00c3fc03db5a8b44fea7363b96e0dae826040516106999190610e48565b60405180910390a15050565b60008054905090565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361071c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071390610ee8565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16634cc2f08133846040518363ffffffff1660e01b81526004016107bb929190610dd3565b600060405180830381600087803b1580156107d557600080fd5b505af11580156107e9573d6000803e3d6000fd5b505050505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d90610f54565b60405180910390fd5b919050565b600082825260208201905092915050565b7f66616c6c6261636b000000000000000000000000000000000000000000000000600082015250565b60006108f26008836108ab565b91506108fd826108bc565b602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061093382610908565b9050919050565b61094381610928565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006109868385610949565b935061099383858461095a565b61099c83610969565b840190509392505050565b600060608201905081810360008301526109c0816108e5565b90506109cf602083018661093a565b81810360408301526109e281848661097a565b9050949350505050565b600080fd5b6109fa81610928565b8114610a0557600080fd5b50565b600081359050610a17816109f1565b92915050565b600060208284031215610a3357610a326109ec565b5b6000610a4184828501610a08565b91505092915050565b60008115159050919050565b610a5f81610a4a565b82525050565b6000602082019050610a7a6000830184610a56565b92915050565b6000819050919050565b610a9381610a80565b82525050565b6000602082019050610aae6000830184610a8a565b92915050565b7f596f752077657265207265676973746572210000000000000000000000000000600082015250565b6000610aea6012836108ab565b9150610af582610ab4565b602082019050919050565b60006020820190508181036000830152610b1981610add565b9050919050565b6000602082019050610b35600083018461093a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b7582610a80565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ba757610ba6610b3b565b5b600182019050919050565b6000610bbd82610a80565b9150610bc883610a80565b9250828203905081811115610be057610bdf610b3b565b5b92915050565b7f4372656174652070617469656e743a2000000000000000000000000000000000600082015250565b6000610c1c6010836108ab565b9150610c2782610be6565b602082019050919050565b60006080820190508181036000830152610c4b81610c0f565b9050610c5a602083018661093a565b610c676040830185610a8a565b610c74606083018461093a565b949350505050565b7f50617469656e7420646f6e27742065786973747321436865636b20706174696560008201527f6e742773206163636f756e742100000000000000000000000000000000000000602082015250565b6000610cd8602d836108ab565b9150610ce382610c7c565b604082019050919050565b60006020820190508181036000830152610d0781610ccb565b9050919050565b610d1781610a4a565b8114610d2257600080fd5b50565b600081519050610d3481610d0e565b92915050565b600060208284031215610d5057610d4f6109ec565b5b6000610d5e84828501610d25565b91505092915050565b7f596f752063616e206e6f74206265206120646f63746f72210000000000000000600082015250565b6000610d9d6018836108ab565b9150610da882610d67565b602082019050919050565b60006020820190508181036000830152610dcc81610d90565b9050919050565b6000604082019050610de8600083018561093a565b610df5602083018461093a565b9392505050565b7f446f63746f720000000000000000000000000000000000000000000000000000600082015250565b6000610e326006836108ab565b9150610e3d82610dfc565b602082019050919050565b60006040820190508181036000830152610e6181610e25565b9050610e70602083018461093a565b92915050565b7f596f752063616e206e6f74206265206120646f63746f7220616e64206e6f746860008201527f696e6720616e75616c2100000000000000000000000000000000000000000000602082015250565b6000610ed2602a836108ab565b9150610edd82610e76565b604082019050919050565b60006020820190508181036000830152610f0181610ec5565b9050919050565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b6000610f3e6016836108ab565b9150610f4982610f08565b602082019050919050565b60006020820190508181036000830152610f6d81610f31565b905091905056fea264697066735822122015bf605286accfeb566a2ad52e5dcebd25ae1c57b2dac129426d21255f535b7664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x35A27178 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x466A0146 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0xC375110D EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xCD8CB137 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xF531072C EQ PUSH2 0x10E JUMPI PUSH2 0x5C JUMP JUMPDEST JUMPDEST PUSH32 0xA46FF6F8D8019B1A730A7666FA32A0236C89399DD776007C7485144B71E9E279 CALLER PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH2 0xA2 PUSH2 0x12A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF8 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x225 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4420E486 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x322 SWAP1 PUSH2 0xB6A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x85858416F612212DDB7C6344D7B58182BAD1DE3BE71438A88C6F19F0FA2B826D CALLER PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x368 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8F2BE76 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x522 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x590 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAC0CC465 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP3 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xCF135C3B898E1E68301EE3615D92CB56B00C3FC03DB5A8B44FEA7363B96E0DAE DUP3 PUSH1 0x40 MLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4CC2F081 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BB SWAP3 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP3 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP3 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F2 PUSH1 0x8 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0x8FD DUP3 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x943 DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 DUP4 DUP6 PUSH2 0x949 JUMP JUMPDEST SWAP4 POP PUSH2 0x993 DUP4 DUP6 DUP5 PUSH2 0x95A JUMP JUMPDEST PUSH2 0x99C DUP4 PUSH2 0x969 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C0 DUP2 PUSH2 0x8E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x9CF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x93A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x9E2 DUP2 DUP5 DUP7 PUSH2 0x97A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0x928 JUMP JUMPDEST DUP2 EQ PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA17 DUP2 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA33 JUMPI PUSH2 0xA32 PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA41 DUP5 DUP3 DUP6 ADD PUSH2 0xA08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5F DUP2 PUSH2 0xA4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA93 DUP2 PUSH2 0xA80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752077657265207265676973746572210000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA PUSH1 0x12 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xAF5 DUP3 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB19 DUP2 PUSH2 0xADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB35 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB75 DUP3 PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xBA7 JUMPI PUSH2 0xBA6 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC8 DUP4 PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBE0 JUMPI PUSH2 0xBDF PUSH2 0xB3B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4372656174652070617469656E743A2000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C PUSH1 0x10 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xC27 DUP3 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC4B DUP2 PUSH2 0xC0F JUMP JUMPDEST SWAP1 POP PUSH2 0xC5A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x93A JUMP JUMPDEST PUSH2 0xC67 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH2 0xC74 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x50617469656E7420646F6E27742065786973747321436865636B207061746965 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E742773206163636F756E742100000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD8 PUSH1 0x2D DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xCE3 DUP3 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD07 DUP2 PUSH2 0xCCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD17 DUP2 PUSH2 0xA4A JUMP JUMPDEST DUP2 EQ PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD34 DUP2 PUSH2 0xD0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD50 JUMPI PUSH2 0xD4F PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD5E DUP5 DUP3 DUP6 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206E6F74206265206120646F63746F72210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9D PUSH1 0x18 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP3 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDCC DUP2 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x93A JUMP JUMPDEST PUSH2 0xDF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446F63746F720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE32 PUSH1 0x6 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xE3D DUP3 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE61 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP PUSH2 0xE70 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206E6F74206265206120646F63746F7220616E64206E6F7468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E6720616E75616C2100000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED2 PUSH1 0x2A DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xEDD DUP3 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF01 DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3E PUSH1 0x16 DUP4 PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP PUSH2 0xF49 DUP3 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6D DUP2 PUSH2 0xF31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xBF PUSH1 0x52 DUP7 0xAC 0xCF 0xEB JUMP PUSH11 0x2AD52E5DCEBD25AE1C57B2 0xDA 0xC1 0x29 TIMESTAMP PUSH14 0x21255F535B7664736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "475:2282:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2709:37;2725:10;2737:8;;2709:37;;;;;;;;:::i;:::-;;;;;;;;475:2282;1125:408;;;:::i;:::-;;1541:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2121:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1753:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2405:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1125:408;1221:1;1184:39;;:15;:27;1200:10;1184:27;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;1176:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1266:15;1284:28;1297:14;;;;;;;;;;;1284:12;:28::i;:::-;1266:46;;1333:7;1325:25;;;1351:10;1325:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:7;1375:15;:27;1391:10;1375:27;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1423:13;;:15;;;;;;;;;:::i;:::-;;;;;;1456:65;1486:10;1511:1;1497:13;;:15;;;;:::i;:::-;1513:7;1456:65;;;;;;;;:::i;:::-;;;;;;;;1165:368;1125:408::o;1541:204::-;1629:4;1609:8;1046:1;1011:37;;:15;:25;1027:8;1011:25;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1003:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1651:9:::1;1671:15;:25;1687:8;1671:25;;;;;;;;;;;;;;;;;;;;;;;;;1651:46;;1715:1;:10;;;1726;1715:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1708:29;;;1541:204:::0;;;;:::o;2121:276::-;2203:7;2189:21;;:10;:21;;;2181:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2250:9;2270:15;:27;2286:10;2270:27;;;;;;;;;;;;;;;;;;;;;;;;;2250:48;;2309:1;:18;;;2328:10;2339:7;2309:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:26;2381:7;2363:26;;;;;;:::i;:::-;;;;;;;;2170:227;2121:276;:::o;1753:99::-;1802:4;1831:13;;1824:20;;1753:99;:::o;2405:254::-;2488:7;2474:21;;:10;:21;;;2466:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2553:9;2573:15;:27;2589:10;2573:27;;;;;;;;;;;;;;;;;;;;;;;;;2553:48;;2612:1;:19;;;2632:10;2643:7;2612:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:204;2405:254;:::o;973:759:9:-;1030:16;1362:48;1344:14;1338:4;1334:25;1328:4;1324:36;1321:90;1315:4;1308:104;1569:32;1552:14;1546:4;1542:25;1539:63;1533:4;1526:77;1644:4;1638;1635:1;1628:21;1616:33;;1696:1;1676:22;;:8;:22;;;1668:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;973:759;;;:::o;7:169:10:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:158::-;322:10;318:1;310:6;306:14;299:34;182:158;:::o;346:365::-;488:3;509:66;573:1;568:3;509:66;:::i;:::-;502:73;;584:93;673:3;584:93;:::i;:::-;702:2;697:3;693:12;686:19;;346:365;;;:::o;717:126::-;754:7;794:42;787:5;783:54;772:65;;717:126;;;:::o;849:96::-;886:7;915:24;933:5;915:24;:::i;:::-;904:35;;849:96;;;:::o;951:118::-;1038:24;1056:5;1038:24;:::i;:::-;1033:3;1026:37;951:118;;:::o;1075:168::-;1158:11;1192:6;1187:3;1180:19;1232:4;1227:3;1223:14;1208:29;;1075:168;;;;:::o;1249:146::-;1346:6;1341:3;1336;1323:30;1387:1;1378:6;1373:3;1369:16;1362:27;1249:146;;;:::o;1401:102::-;1442:6;1493:2;1489:7;1484:2;1477:5;1473:14;1469:28;1459:38;;1401:102;;;:::o;1531:314::-;1627:3;1648:70;1711:6;1706:3;1648:70;:::i;:::-;1641:77;;1728:56;1777:6;1772:3;1765:5;1728:56;:::i;:::-;1809:29;1831:6;1809:29;:::i;:::-;1804:3;1800:39;1793:46;;1531:314;;;;;:::o;1851:746::-;2101:4;2139:2;2128:9;2124:18;2116:26;;2188:9;2182:4;2178:20;2174:1;2163:9;2159:17;2152:47;2216:131;2342:4;2216:131;:::i;:::-;2208:139;;2357:72;2425:2;2414:9;2410:18;2401:6;2357:72;:::i;:::-;2476:9;2470:4;2466:20;2461:2;2450:9;2446:18;2439:48;2504:86;2585:4;2576:6;2568;2504:86;:::i;:::-;2496:94;;1851:746;;;;;;:::o;2684:117::-;2793:1;2790;2783:12;2930:122;3003:24;3021:5;3003:24;:::i;:::-;2996:5;2993:35;2983:63;;3042:1;3039;3032:12;2983:63;2930:122;:::o;3058:139::-;3104:5;3142:6;3129:20;3120:29;;3158:33;3185:5;3158:33;:::i;:::-;3058:139;;;;:::o;3203:329::-;3262:6;3311:2;3299:9;3290:7;3286:23;3282:32;3279:119;;;3317:79;;:::i;:::-;3279:119;3437:1;3462:53;3507:7;3498:6;3487:9;3483:22;3462:53;:::i;:::-;3452:63;;3408:117;3203:329;;;;:::o;3538:90::-;3572:7;3615:5;3608:13;3601:21;3590:32;;3538:90;;;:::o;3634:109::-;3715:21;3730:5;3715:21;:::i;:::-;3710:3;3703:34;3634:109;;:::o;3749:210::-;3836:4;3874:2;3863:9;3859:18;3851:26;;3887:65;3949:1;3938:9;3934:17;3925:6;3887:65;:::i;:::-;3749:210;;;;:::o;3965:77::-;4002:7;4031:5;4020:16;;3965:77;;;:::o;4048:118::-;4135:24;4153:5;4135:24;:::i;:::-;4130:3;4123:37;4048:118;;:::o;4172:222::-;4265:4;4303:2;4292:9;4288:18;4280:26;;4316:71;4384:1;4373:9;4369:17;4360:6;4316:71;:::i;:::-;4172:222;;;;:::o;4400:168::-;4540:20;4536:1;4528:6;4524:14;4517:44;4400:168;:::o;4574:366::-;4716:3;4737:67;4801:2;4796:3;4737:67;:::i;:::-;4730:74;;4813:93;4902:3;4813:93;:::i;:::-;4931:2;4926:3;4922:12;4915:19;;4574:366;;;:::o;4946:419::-;5112:4;5150:2;5139:9;5135:18;5127:26;;5199:9;5193:4;5189:20;5185:1;5174:9;5170:17;5163:47;5227:131;5353:4;5227:131;:::i;:::-;5219:139;;4946:419;;;:::o;5371:222::-;5464:4;5502:2;5491:9;5487:18;5479:26;;5515:71;5583:1;5572:9;5568:17;5559:6;5515:71;:::i;:::-;5371:222;;;;:::o;5599:180::-;5647:77;5644:1;5637:88;5744:4;5741:1;5734:15;5768:4;5765:1;5758:15;5785:233;5824:3;5847:24;5865:5;5847:24;:::i;:::-;5838:33;;5893:66;5886:5;5883:77;5880:103;;5963:18;;:::i;:::-;5880:103;6010:1;6003:5;5999:13;5992:20;;5785:233;;;:::o;6024:194::-;6064:4;6084:20;6102:1;6084:20;:::i;:::-;6079:25;;6118:20;6136:1;6118:20;:::i;:::-;6113:25;;6162:1;6159;6155:9;6147:17;;6186:1;6180:4;6177:11;6174:37;;;6191:18;;:::i;:::-;6174:37;6024:194;;;;:::o;6224:166::-;6364:18;6360:1;6352:6;6348:14;6341:42;6224:166;:::o;6396:366::-;6538:3;6559:67;6623:2;6618:3;6559:67;:::i;:::-;6552:74;;6635:93;6724:3;6635:93;:::i;:::-;6753:2;6748:3;6744:12;6737:19;;6396:366;;;:::o;6768:750::-;7018:4;7056:3;7045:9;7041:19;7033:27;;7106:9;7100:4;7096:20;7092:1;7081:9;7077:17;7070:47;7134:131;7260:4;7134:131;:::i;:::-;7126:139;;7275:72;7343:2;7332:9;7328:18;7319:6;7275:72;:::i;:::-;7357;7425:2;7414:9;7410:18;7401:6;7357:72;:::i;:::-;7439;7507:2;7496:9;7492:18;7483:6;7439:72;:::i;:::-;6768:750;;;;;;:::o;7524:232::-;7664:34;7660:1;7652:6;7648:14;7641:58;7733:15;7728:2;7720:6;7716:15;7709:40;7524:232;:::o;7762:366::-;7904:3;7925:67;7989:2;7984:3;7925:67;:::i;:::-;7918:74;;8001:93;8090:3;8001:93;:::i;:::-;8119:2;8114:3;8110:12;8103:19;;7762:366;;;:::o;8134:419::-;8300:4;8338:2;8327:9;8323:18;8315:26;;8387:9;8381:4;8377:20;8373:1;8362:9;8358:17;8351:47;8415:131;8541:4;8415:131;:::i;:::-;8407:139;;8134:419;;;:::o;8559:116::-;8629:21;8644:5;8629:21;:::i;:::-;8622:5;8619:32;8609:60;;8665:1;8662;8655:12;8609:60;8559:116;:::o;8681:137::-;8735:5;8766:6;8760:13;8751:22;;8782:30;8806:5;8782:30;:::i;:::-;8681:137;;;;:::o;8824:345::-;8891:6;8940:2;8928:9;8919:7;8915:23;8911:32;8908:119;;;8946:79;;:::i;:::-;8908:119;9066:1;9091:61;9144:7;9135:6;9124:9;9120:22;9091:61;:::i;:::-;9081:71;;9037:125;8824:345;;;;:::o;9175:174::-;9315:26;9311:1;9303:6;9299:14;9292:50;9175:174;:::o;9355:366::-;9497:3;9518:67;9582:2;9577:3;9518:67;:::i;:::-;9511:74;;9594:93;9683:3;9594:93;:::i;:::-;9712:2;9707:3;9703:12;9696:19;;9355:366;;;:::o;9727:419::-;9893:4;9931:2;9920:9;9916:18;9908:26;;9980:9;9974:4;9970:20;9966:1;9955:9;9951:17;9944:47;10008:131;10134:4;10008:131;:::i;:::-;10000:139;;9727:419;;;:::o;10152:332::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10152:332;;;;;:::o;10490:156::-;10630:8;10626:1;10618:6;10614:14;10607:32;10490:156;:::o;10652:365::-;10794:3;10815:66;10879:1;10874:3;10815:66;:::i;:::-;10808:73;;10890:93;10979:3;10890:93;:::i;:::-;11008:2;11003:3;10999:12;10992:19;;10652:365;;;:::o;11023:529::-;11217:4;11255:2;11244:9;11240:18;11232:26;;11304:9;11298:4;11294:20;11290:1;11279:9;11275:17;11268:47;11332:131;11458:4;11332:131;:::i;:::-;11324:139;;11473:72;11541:2;11530:9;11526:18;11517:6;11473:72;:::i;:::-;11023:529;;;;:::o;11558:229::-;11698:34;11694:1;11686:6;11682:14;11675:58;11767:12;11762:2;11754:6;11750:15;11743:37;11558:229;:::o;11793:366::-;11935:3;11956:67;12020:2;12015:3;11956:67;:::i;:::-;11949:74;;12032:93;12121:3;12032:93;:::i;:::-;12150:2;12145:3;12141:12;12134:19;;11793:366;;;:::o;12165:419::-;12331:4;12369:2;12358:9;12354:18;12346:26;;12418:9;12412:4;12408:20;12404:1;12393:9;12389:17;12382:47;12446:131;12572:4;12446:131;:::i;:::-;12438:139;;12165:419;;;:::o;12590:172::-;12730:24;12726:1;12718:6;12714:14;12707:48;12590:172;:::o;12768:366::-;12910:3;12931:67;12995:2;12990:3;12931:67;:::i;:::-;12924:74;;13007:93;13096:3;13007:93;:::i;:::-;13125:2;13120:3;13116:12;13109:19;;12768:366;;;:::o;13140:419::-;13306:4;13344:2;13333:9;13329:18;13321:26;;13393:9;13387:4;13383:20;13379:1;13368:9;13364:17;13357:47;13421:131;13547:4;13421:131;:::i;:::-;13413:139;;13140:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "802000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"anualRole(address)": "infinite",
								"checkAccess(address)": "infinite",
								"createPatient()": "infinite",
								"getCountPatient()": "2481",
								"giveRole(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 475,
									"end": 2757,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 737,
									"end": 738,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 705,
									"end": 738,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 705,
									"end": 738,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 938,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 938,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 938,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 843,
									"end": 938,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 843,
									"end": 938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 843,
									"end": 938,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 930,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 898,
									"end": 912,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 898,
									"end": 912,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 898,
									"end": 930,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 930,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 930,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 898,
									"end": 930,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 843,
									"end": 938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 475,
									"end": 2757,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015bf605286accfeb566a2ad52e5dcebd25ae1c57b2dac129426d21255f535b7664736f6c63430008120033",
									".code": [
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "35A27178"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "466A0146"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "C375110D"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "CD8CB137"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH",
											"source": 3,
											"value": "F531072C"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "PUSH",
											"source": 3,
											"value": "A46FF6F8D8019B1A730A7666FA32A0236C89399DD776007C7485144B71E9E279"
										},
										{
											"begin": 2725,
											"end": 2735,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2745,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2709,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 2757,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1125,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1541,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1541,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2121,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2121,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1753,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1753,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2405,
											"end": 2659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2405,
											"end": 2659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1125,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1221,
											"end": 1222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1223,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1223,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1199,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1210,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1223,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1223,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1223,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1176,
											"end": 1245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1176,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1284,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1312,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1284,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "PUSH",
											"source": 3,
											"value": "4420E486"
										},
										{
											"begin": 1351,
											"end": 1361,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1325,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1412,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1423,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "PUSH",
											"source": 3,
											"value": "85858416F612212DDB7C6344D7B58182BAD1DE3BE71438A88C6F19F0FA2B826D"
										},
										{
											"begin": 1486,
											"end": 1496,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1497,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1520,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1456,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1521,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 1533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1617,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1047,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1048,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1035,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1048,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1003,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1003,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1695,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1716,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1715,
											"end": 1725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A8F2BE76"
										},
										{
											"begin": 1726,
											"end": 1736,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1715,
											"end": 1737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1737,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1715,
											"end": 1737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1715,
											"end": 1737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2210,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2181,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2181,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2296,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2298,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "PUSH",
											"source": 3,
											"value": "AC0CC465"
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2346,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2309,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "PUSH",
											"source": 3,
											"value": "CF135C3B898E1E68301EE3615D92CB56B00C3FC03DB5A8B44FEA7363B96E0DAE"
										},
										{
											"begin": 2381,
											"end": 2388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2363,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1806,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1844,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1844,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2495,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2474,
											"end": 2495,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2484,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2495,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2474,
											"end": 2495,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2495,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2466,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2466,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2599,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2612,
											"end": 2631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2631,
											"name": "PUSH",
											"source": 3,
											"value": "4CC2F081"
										},
										{
											"begin": 2632,
											"end": 2642,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2612,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 1344,
											"end": 1358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1334,
											"end": 1359,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1332,
											"name": "PUSH",
											"source": 9,
											"value": "E8"
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1411,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1412,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1601,
											"name": "PUSH",
											"source": 9,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 1552,
											"end": 1566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1542,
											"end": 1567,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1602,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1644,
											"end": 1648,
											"name": "PUSH",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1642,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "CREATE",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1668,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1668,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 973,
											"end": 1732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 973,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 340,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 182,
											"end": 340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 322,
											"end": 332,
											"name": "PUSH",
											"source": 10,
											"value": "66616C6C6261636B000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 299,
											"end": 333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 182,
											"end": 340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 346,
											"end": 711,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 346,
											"end": 711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 568,
											"end": 571,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 509,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 509,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 575,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 509,
											"end": 575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 502,
											"end": 575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 502,
											"end": 575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 584,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 673,
											"end": 676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 584,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 584,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 584,
											"end": 677,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 584,
											"end": 677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 693,
											"end": 705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 686,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 686,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 346,
											"end": 711,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 346,
											"end": 711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 346,
											"end": 711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 346,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 717,
											"end": 843,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 717,
											"end": 843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 754,
											"end": 761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 783,
											"end": 837,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 772,
											"end": 837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 772,
											"end": 837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 717,
											"end": 843,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 717,
											"end": 843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 717,
											"end": 843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 717,
											"end": 843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 849,
											"end": 945,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 849,
											"end": 945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 886,
											"end": 893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 933,
											"end": 938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 915,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 915,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 915,
											"end": 939,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 915,
											"end": 939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 904,
											"end": 939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 904,
											"end": 939,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 849,
											"end": 945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 849,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 849,
											"end": 945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 849,
											"end": 945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 951,
											"end": 1069,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 951,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1056,
											"end": 1061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1038,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1062,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1038,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 951,
											"end": 1069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 951,
											"end": 1069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 951,
											"end": 1069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1243,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1075,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1180,
											"end": 1199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1236,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1243,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1249,
											"end": 1395,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1249,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1336,
											"end": 1339,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1353,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1373,
											"end": 1376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1369,
											"end": 1385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1389,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1249,
											"end": 1395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1249,
											"end": 1395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1249,
											"end": 1395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1249,
											"end": 1395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1401,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1495,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1477,
											"end": 1482,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1845,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1711,
											"end": 1717,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1706,
											"end": 1709,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1648,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1648,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1648,
											"end": 1718,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1648,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1641,
											"end": 1718,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1641,
											"end": 1718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1777,
											"end": 1783,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1775,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1765,
											"end": 1770,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1728,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1809,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1807,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1845,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1845,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 2597,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1851,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2141,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2128,
											"end": 2137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2116,
											"end": 2142,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2116,
											"end": 2142,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2188,
											"end": 2197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2178,
											"end": 2198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2342,
											"end": 2346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2216,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2347,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2216,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2208,
											"end": 2347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2208,
											"end": 2347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2357,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2429,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2357,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2476,
											"end": 2485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2486,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2459,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2487,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2585,
											"end": 2589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2504,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2590,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2504,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 2597,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 2597,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 2597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 2597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 2597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 2597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 2597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2801,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2684,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2783,
											"end": 2795,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 3052,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2930,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3003,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3027,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3003,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3040,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 3052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 3052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 3158,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3532,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 3203,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3297,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3309,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3314,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3398,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3279,
											"end": 3398,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3317,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 3317,
											"end": 3396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3396,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3317,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3398,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3279,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3507,
											"end": 3514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3498,
											"end": 3504,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3483,
											"end": 3505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3462,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3532,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3628,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3538,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3608,
											"end": 3621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3590,
											"end": 3622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3590,
											"end": 3622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3743,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3634,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3730,
											"end": 3735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3715,
											"end": 3736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3710,
											"end": 3713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3737,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3959,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3749,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3887,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3947,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3887,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3887,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3887,
											"end": 3952,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3887,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3959,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4042,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3965,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4009,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4166,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4048,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4153,
											"end": 4158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4135,
											"end": 4159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4135,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4123,
											"end": 4160,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4394,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4172,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4382,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4366,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4316,
											"end": 4387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4394,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4568,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4400,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4540,
											"end": 4560,
											"name": "PUSH",
											"source": 10,
											"value": "596F752077657265207265676973746572210000000000000000000000000000"
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4561,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4801,
											"end": 4803,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 4796,
											"end": 4799,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4737,
											"end": 4804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4902,
											"end": 4905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4813,
											"end": 4906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 4933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4926,
											"end": 4929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5365,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 4946,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5152,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5189,
											"end": 5209,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5183,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5163,
											"end": 5210,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 5353,
											"end": 5357,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 5227,
											"end": 5358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5358,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 5227,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5593,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 5371,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5468,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5491,
											"end": 5500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5585,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 5515,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5593,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5593,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5779,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5599,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5724,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5644,
											"end": 5645,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5744,
											"end": 5748,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5741,
											"end": 5742,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5734,
											"end": 5749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 5772,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5765,
											"end": 5766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6018,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 5785,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5865,
											"end": 5870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5847,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5871,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5847,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5959,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5886,
											"end": 5891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5960,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5880,
											"end": 5983,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5963,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5983,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5880,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6003,
											"end": 6008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6218,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6024,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6064,
											"end": 6068,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 6084,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6104,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 6136,
											"end": 6137,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 6118,
											"end": 6138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6155,
											"end": 6164,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6188,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6191,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6218,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6390,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 6224,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "PUSH",
											"source": 10,
											"value": "4372656174652070617469656E743A2000000000000000000000000000000000"
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6348,
											"end": 6362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6341,
											"end": 6383,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6762,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 6396,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6559,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6623,
											"end": 6625,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 6618,
											"end": 6621,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6559,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 6559,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6559,
											"end": 6626,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6559,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6552,
											"end": 6626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6552,
											"end": 6626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 6724,
											"end": 6727,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 6635,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6728,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 6635,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6753,
											"end": 6755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6744,
											"end": 6756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6762,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7518,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 6768,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7045,
											"end": 7054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7100,
											"end": 7104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7096,
											"end": 7116,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7134,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7260,
											"end": 7264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7134,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 7134,
											"end": 7265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7134,
											"end": 7265,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7134,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7126,
											"end": 7265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7126,
											"end": 7265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7343,
											"end": 7345,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7332,
											"end": 7341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7319,
											"end": 7325,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 7275,
											"end": 7347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7347,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7275,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7357,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 7425,
											"end": 7427,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7414,
											"end": 7423,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7410,
											"end": 7428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7407,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7357,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7357,
											"end": 7429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7357,
											"end": 7429,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 7357,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7507,
											"end": 7509,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7496,
											"end": 7505,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7489,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 7439,
											"end": 7511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7511,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7439,
											"end": 7511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7518,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7518,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 7518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7756,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 7524,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "50617469656E7420646F6E27742065786973747321436865636B207061746965"
										},
										{
											"begin": 7660,
											"end": 7661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 7662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7699,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "PUSH",
											"source": 10,
											"value": "6E742773206163636F756E742100000000000000000000000000000000000000"
										},
										{
											"begin": 7728,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7716,
											"end": 7731,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8128,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7762,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7904,
											"end": 7907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 7989,
											"end": 7991,
											"name": "PUSH",
											"source": 10,
											"value": "2D"
										},
										{
											"begin": 7984,
											"end": 7987,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7925,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 7925,
											"end": 7992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7925,
											"end": 7992,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 7925,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7918,
											"end": 7992,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7918,
											"end": 7992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8001,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8001,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 8001,
											"end": 8094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8001,
											"end": 8094,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 8001,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8121,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8134,
											"end": 8553,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 8134,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8323,
											"end": 8341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8377,
											"end": 8397,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8351,
											"end": 8398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 8541,
											"end": 8545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 8415,
											"end": 8546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 8546,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 8415,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8407,
											"end": 8546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8407,
											"end": 8546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8134,
											"end": 8553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8134,
											"end": 8553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8134,
											"end": 8553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8134,
											"end": 8553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8675,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 8559,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8629,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 8644,
											"end": 8649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8629,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 8629,
											"end": 8650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8629,
											"end": 8650,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 8629,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8651,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8609,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8609,
											"end": 8669,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8662,
											"end": 8663,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8655,
											"end": 8667,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8609,
											"end": 8669,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8609,
											"end": 8669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8818,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 8681,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8735,
											"end": 8740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8773,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8751,
											"end": 8773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8751,
											"end": 8773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8782,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 8806,
											"end": 8811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8782,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 8782,
											"end": 8812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8782,
											"end": 8812,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 8782,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8818,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8818,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 9169,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 8824,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8891,
											"end": 8897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8928,
											"end": 8937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8915,
											"end": 8938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8911,
											"end": 8943,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 9027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8908,
											"end": 9027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8946,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 8946,
											"end": 9025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 9025,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8946,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 9027,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8908,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9091,
											"end": 9152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 9144,
											"end": 9151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9124,
											"end": 9133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9091,
											"end": 9152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 9091,
											"end": 9152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9091,
											"end": 9152,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 9091,
											"end": 9152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9081,
											"end": 9152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9081,
											"end": 9152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 9169,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 9169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 9169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 9169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 9169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9175,
											"end": 9349,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9175,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9341,
											"name": "PUSH",
											"source": 10,
											"value": "596F752063616E206E6F74206265206120646F63746F72210000000000000000"
										},
										{
											"begin": 9311,
											"end": 9312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9303,
											"end": 9309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9299,
											"end": 9313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9292,
											"end": 9342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9175,
											"end": 9349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9175,
											"end": 9349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9721,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 9355,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9497,
											"end": 9500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9518,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 9582,
											"end": 9584,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 9577,
											"end": 9580,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 9518,
											"end": 9585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9585,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 9518,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 9683,
											"end": 9686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9594,
											"end": 9687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9687,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 9594,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9712,
											"end": 9714,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9707,
											"end": 9710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9703,
											"end": 9715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9696,
											"end": 9715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9696,
											"end": 9715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9721,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9721,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 10146,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 9727,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9893,
											"end": 9897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 9933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9916,
											"end": 9934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 9934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 9934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 9989,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9974,
											"end": 9978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 9990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9964,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10008,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10134,
											"end": 10138,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10008,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 10008,
											"end": 10139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10008,
											"end": 10139,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10008,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10000,
											"end": 10139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10000,
											"end": 10139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 10146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 10146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 10146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 10146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10484,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 10152,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10273,
											"end": 10277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10313,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10300,
											"end": 10309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10288,
											"end": 10314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10288,
											"end": 10314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10324,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 10392,
											"end": 10393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10390,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10377,
											"end": 10394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10374,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10324,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 10324,
											"end": 10395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10324,
											"end": 10395,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 10324,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10473,
											"end": 10475,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10462,
											"end": 10471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10455,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 10405,
											"end": 10477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10477,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10405,
											"end": 10477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10484,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10484,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10646,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 10490,
											"end": 10646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10630,
											"end": 10638,
											"name": "PUSH",
											"source": 10,
											"value": "446F63746F720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10626,
											"end": 10627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10624,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10614,
											"end": 10628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10607,
											"end": 10639,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 11017,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 10652,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10815,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 10874,
											"end": 10877,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 10815,
											"end": 10881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10881,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 10815,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10808,
											"end": 10881,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10808,
											"end": 10881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 10979,
											"end": 10982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 10890,
											"end": 10983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10983,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 10890,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11008,
											"end": 11010,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 11017,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 11017,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 11017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 11017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11023,
											"end": 11552,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 11023,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11217,
											"end": 11221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11255,
											"end": 11257,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11244,
											"end": 11253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11232,
											"end": 11258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11232,
											"end": 11258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11298,
											"end": 11302,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11294,
											"end": 11314,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11290,
											"end": 11291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11279,
											"end": 11288,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11268,
											"end": 11315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 11458,
											"end": 11462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 11332,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11463,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 11332,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11473,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 11541,
											"end": 11543,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11530,
											"end": 11539,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11526,
											"end": 11544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11473,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 11473,
											"end": 11545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11473,
											"end": 11545,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 11473,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11023,
											"end": 11552,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11023,
											"end": 11552,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11023,
											"end": 11552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11023,
											"end": 11552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11023,
											"end": 11552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11558,
											"end": 11787,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 11558,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11698,
											"end": 11732,
											"name": "PUSH",
											"source": 10,
											"value": "596F752063616E206E6F74206265206120646F63746F7220616E64206E6F7468"
										},
										{
											"begin": 11694,
											"end": 11695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11686,
											"end": 11692,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11682,
											"end": 11696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11675,
											"end": 11733,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11767,
											"end": 11779,
											"name": "PUSH",
											"source": 10,
											"value": "696E6720616E75616C2100000000000000000000000000000000000000000000"
										},
										{
											"begin": 11762,
											"end": 11764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11754,
											"end": 11760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11750,
											"end": 11765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11558,
											"end": 11787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11558,
											"end": 11787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 12159,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 11793,
											"end": 12159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11935,
											"end": 11938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11956,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 12020,
											"end": 12022,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 12015,
											"end": 12018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11956,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 11956,
											"end": 12023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11956,
											"end": 12023,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 11956,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11949,
											"end": 12023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11949,
											"end": 12023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 12121,
											"end": 12124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 12032,
											"end": 12125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12125,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 12032,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12150,
											"end": 12152,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12145,
											"end": 12148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12134,
											"end": 12153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12134,
											"end": 12153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 12159,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 12159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 12159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 12159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12584,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 12165,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12331,
											"end": 12335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12358,
											"end": 12367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12354,
											"end": 12372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12346,
											"end": 12372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12346,
											"end": 12372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12418,
											"end": 12427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12408,
											"end": 12428,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12393,
											"end": 12402,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12446,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 12572,
											"end": 12576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12446,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 12446,
											"end": 12577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12446,
											"end": 12577,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 12446,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12438,
											"end": 12577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12438,
											"end": 12577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12590,
											"end": 12762,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 12590,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12754,
											"name": "PUSH",
											"source": 10,
											"value": "455243313136373A20637265617465206661696C656400000000000000000000"
										},
										{
											"begin": 12726,
											"end": 12727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12718,
											"end": 12724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12714,
											"end": 12728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12707,
											"end": 12755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12590,
											"end": 12762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12590,
											"end": 12762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 13134,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 12768,
											"end": 13134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12910,
											"end": 12913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 12995,
											"end": 12997,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 12990,
											"end": 12993,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12931,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 12931,
											"end": 12998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12931,
											"end": 12998,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 12931,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12998,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13007,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 13096,
											"end": 13099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13007,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 13007,
											"end": 13100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13007,
											"end": 13100,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 13007,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13116,
											"end": 13128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13109,
											"end": 13128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13109,
											"end": 13128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 13134,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 13134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 13134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 13134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13140,
											"end": 13559,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 13140,
											"end": 13559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13306,
											"end": 13310,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13344,
											"end": 13346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13333,
											"end": 13342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13329,
											"end": 13347,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13393,
											"end": 13402,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13387,
											"end": 13391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13383,
											"end": 13403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13379,
											"end": 13380,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13368,
											"end": 13377,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13364,
											"end": 13381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 13547,
											"end": 13551,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 13421,
											"end": 13552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13552,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 13421,
											"end": 13552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13140,
											"end": 13559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13140,
											"end": 13559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13140,
											"end": 13559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13140,
											"end": 13559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"Patient.sol",
								"access/Owner.sol",
								"access/Roles.sol",
								"addPatients.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"anualRole(address)": "f531072c",
							"checkAccess(address)": "466a0146",
							"createPatient()": "35a27178",
							"getCountPatient()": "cd8cb137",
							"giveRole(address)": "c375110d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"GetRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"notice\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractPatient\",\"type\":\"address\"}],\"name\":\"NewPatient\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"anualRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"checkAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCountPatient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"giveRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"addPatients.sol\":\"Patients\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Patient.sol\":{\"keccak256\":\"0x7332fdf0e49fd67564128338a2b9d38e020c29117bafa5ff782e547dbbbca882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f68b15c87f9da80e08161e6da0c0f41c5a8b707e6d409b1342ff87057f4f30ec\",\"dweb:/ipfs/QmSDJikKVCt5TKNWjuAvuTA1Cwyo2FoTDRgTEjufQxDdZi\"]},\"access/Owner.sol\":{\"keccak256\":\"0x02dcfd3c2e2057042035968f4503a6bca880ff9661e428eaaadb2e2a03008445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6c0ef63652abcf3a28ef582e0b7ef98982f53442c611c8f978ecf2f3d3f3e8e\",\"dweb:/ipfs/QmUttKxN4oHuUB4HKEcZFxyGnyg7TyXYzjS6cqYWMtD4eq\"]},\"access/Roles.sol\":{\"keccak256\":\"0x6eaa1a10a3e341a627cc772471321707efdda0ad9f55e767c9a9bc79edba3f3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292d3285ed472a263cb41ef8ab3ed298414e7399ba12842f82f92e0d1a1d8488\",\"dweb:/ipfs/QmU1hozn36LabGqBHjiUBjYDh4EkqR9JNc58wCbu1aXrCi\"]},\"addPatients.sol\":{\"keccak256\":\"0x443a6c6376cc6db8073db20aa07b3684354e6c09f7dd61d75e30169ae2b307f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321e4784cc951199fec487823c8b1141362e00ac9da7b326cca4b09c3733a735\",\"dweb:/ipfs/QmV5VWXyG9dWRgDHc67ZcwGx1JnQA6vA1rKnN6QxwDKU7i\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x0e1fe02da411a6293004e5ee85bdd1facef5f1b6ef2aab8d36c73f0d77b448db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bfd474499866fe24ac6b88eb92969395baf1e644a0f0b0054e66f9ae90c00e\",\"dweb:/ipfs/QmS5j268UauZARToNJazEBJDWvWM35j8kHx779PF3c5rib\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 680,
								"contract": "addPatients.sol:Patients",
								"label": "countPatients",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 684,
								"contract": "addPatients.sol:Patients",
								"label": "adressesPatient",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 686,
								"contract": "addPatients.sol:Patients",
								"label": "implementation",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ee9c6edc46ae32f4682906419921f4a8b9dfd8f70eb7d3cd12ee4ab2d5db344264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee9c6edc46ae32f4682906419921f4a8b9dfd8f70eb7d3cd12ee4ab2d5db344264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP13 PUSH15 0xDC46AE32F4682906419921F4A8B9DF 0xD8 0xF7 0xE 0xB7 0xD3 0xCD SLT 0xEE 0x4A 0xB2 0xD5 0xDB CALLVALUE TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee9c6edc46ae32f4682906419921f4a8b9dfd8f70eb7d3cd12ee4ab2d5db344264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP13 PUSH15 0xDC46AE32F4682906419921F4A8B9DF 0xD8 0xF7 0xE 0xB7 0xD3 0xCD SLT 0xEE 0x4A 0xB2 0xD5 0xDB CALLVALUE TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee9c6edc46ae32f4682906419921f4a8b9dfd8f70eb7d3cd12ee4ab2d5db344264736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"Patient.sol",
								"access/Owner.sol",
								"access/Roles.sol",
								"addPatients.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220decd2029f21d16a7b5b8cb6a44c18775a1e7bc1aa55b1a754ecbc63723852b2264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220decd2029f21d16a7b5b8cb6a44c18775a1e7bc1aa55b1a754ecbc63723852b2264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xCD KECCAK256 0x29 CALLCODE SAR AND 0xA7 0xB5 0xB8 0xCB PUSH11 0x44C18775A1E7BC1AA55B1A PUSH22 0x4ECBC63723852B2264736F6C63430008120033000000 ",
							"sourceMap": "202:12582:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220decd2029f21d16a7b5b8cb6a44c18775a1e7bc1aa55b1a754ecbc63723852b2264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xCD KECCAK256 0x29 CALLCODE SAR AND 0xA7 0xB5 0xB8 0xCB PUSH11 0x44C18775A1E7BC1AA55B1A PUSH22 0x4ECBC63723852B2264736F6C63430008120033000000 ",
							"sourceMap": "202:12582:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220decd2029f21d16a7b5b8cb6a44c18775a1e7bc1aa55b1a754ecbc63723852b2264736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"Patient.sol",
								"access/Owner.sol",
								"access/Roles.sol",
								"addPatients.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220548d79a578b73cc3f72cfa161ddadcd880153a6cef7ebdd42ac954adcd716b6d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220548d79a578b73cc3f72cfa161ddadcd880153a6cef7ebdd42ac954adcd716b6d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP14 PUSH26 0xA578B73CC3F72CFA161DDADCD880153A6CEF7EBDD42AC954ADCD PUSH18 0x6B6D64736F6C634300081200330000000000 ",
							"sourceMap": "215:1047:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220548d79a578b73cc3f72cfa161ddadcd880153a6cef7ebdd42ac954adcd716b6d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP14 PUSH26 0xA578B73CC3F72CFA161DDADCD880153A6CEF7EBDD42AC954ADCD PUSH18 0x6B6D64736F6C634300081200330000000000 ",
							"sourceMap": "215:1047:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220548d79a578b73cc3f72cfa161ddadcd880153a6cef7ebdd42ac954adcd716b6d64736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"Patient.sol",
								"access/Owner.sol",
								"access/Roles.sol",
								"addPatients.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":755:4030  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":755:4030  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220113083d789d76092a4ed6117a2e532d8ea1ec66b03d0efb870ba91a904aa86a964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220113083d789d76092a4ed6117a2e532d8ea1ec66b03d0efb870ba91a904aa86a964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT ADDRESS DUP4 0xD7 DUP10 0xD7 PUSH1 0x92 LOG4 0xED PUSH2 0x17A2 0xE5 ORIGIN 0xD8 0xEA 0x1E 0xC6 PUSH12 0x3D0EFB870BA91A904AA86A9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "755:3275:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220113083d789d76092a4ed6117a2e532d8ea1ec66b03d0efb870ba91a904aa86a964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT ADDRESS DUP4 0xD7 DUP10 0xD7 PUSH1 0x92 LOG4 0xED PUSH2 0x17A2 0xE5 ORIGIN 0xD8 0xEA 0x1E 0xC6 PUSH12 0x3D0EFB870BA91A904AA86A9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "755:3275:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220113083d789d76092a4ed6117a2e532d8ea1ec66b03d0efb870ba91a904aa86a964736f6c63430008120033",
									".code": [
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"Patient.sol",
								"access/Owner.sol",
								"access/Roles.sol",
								"addPatients.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x0e1fe02da411a6293004e5ee85bdd1facef5f1b6ef2aab8d36c73f0d77b448db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bfd474499866fe24ac6b88eb92969395baf1e644a0f0b0054e66f9ae90c00e\",\"dweb:/ipfs/QmS5j268UauZARToNJazEBJDWvWM35j8kHx779PF3c5rib\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Patient.sol": {
				"ast": {
					"absolutePath": "Patient.sol",
					"exportedSymbols": {
						"AccessControl": [
							649
						],
						"ERC165": [
							1135
						],
						"IERC165": [
							1147
						],
						"Math": [
							2013
						],
						"Owner": [
							323
						],
						"Patient": [
							212
						],
						"SignedMath": [
							2118
						],
						"Strings": [
							1111
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:0"
						},
						{
							"absolutePath": "access/Owner.sol",
							"file": "./access/Owner.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 324,
							"src": "57:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "access/Roles.sol",
							"file": "./access/Roles.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 650,
							"src": "202:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Owner",
										"nameLocations": [
											"755:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 323,
										"src": "755:5:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "755:5:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "AccessControl",
										"nameLocations": [
											"762:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "762:13:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "762:13:0"
								}
							],
							"canonicalName": "Patient",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212,
								649,
								323,
								1135,
								1147
							],
							"name": "Patient",
							"nameLocation": "744:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "docs",
									"nameLocation": "927:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "909:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 8,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "909:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 9,
										"nodeType": "ArrayTypeName",
										"src": "909:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 15,
									"mutability": "constant",
									"name": "DOCTOR_ROLE",
									"nameLocation": "1049:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1024:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1024:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "444f43544f525f524f4c45",
												"id": 13,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1073:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f",
													"typeString": "literal_string \"DOCTOR_ROLE\""
												},
												"value": "DOCTOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f",
													"typeString": "literal_string \"DOCTOR_ROLE\""
												}
											],
											"id": 12,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1063:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1063:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "1146:177:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 21,
																		"name": "DOCTOR_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1172:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 22,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "1185:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 20,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "1164:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1164:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 25,
																		"name": "DEFAULT_ADMIN_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "1221:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 26,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "1241:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 24,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "1213:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1213:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1164:85:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "2043616c6c6572206973206e6f7420646f63206f722070617469656e7421",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1263:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5edf7d9ef9f58e3a507ba2d1aeda1c5e33164fef1e8f429a8a95349f786da035",
																"typeString": "literal_string \" Caller is not doc or patient!\""
															},
															"value": " Caller is not doc or patient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5edf7d9ef9f58e3a507ba2d1aeda1c5e33164fef1e8f429a8a95349f786da035",
																"typeString": "literal_string \" Caller is not doc or patient!\""
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1156:149:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "1156:149:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "1315:1:0"
											}
										]
									},
									"id": 34,
									"name": "onlyePatientOrDoctor",
									"nameLocation": "1103:20:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1132:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1124:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:17:0"
									},
									"src": "1094:229:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1361:2:0",
										"statements": []
									},
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 37,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1349:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1353:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1349:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 39,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 36,
												"name": "Owner",
												"nameLocations": [
													"1343:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 323,
												"src": "1343:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1343:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:0"
									},
									"scope": 212,
									"src": "1329:34:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "1539:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "_patient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1567:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 47,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "1549:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "1549:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "_patient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1595:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 51,
														"name": "setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "1586:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1586:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 56,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1625:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 57,
															"name": "_patient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1645:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 55,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1614:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1614:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1614:40:0"
											}
										]
									},
									"functionSelector": "4420e486",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "1498:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_patient",
												"nameLocation": "1515:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1507:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:18:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:0:0"
									},
									"scope": 212,
									"src": "1489:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "2765:156:0",
										"statements": [
											{
												"body": {
													"id": 87,
													"nodeType": "Block",
													"src": "2818:75:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 79,
																		"name": "docs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "2835:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 81,
																	"indexExpression": {
																		"id": 80,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 69,
																		"src": "2840:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2835:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 82,
																	"name": "_doctor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "2846:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2835:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 86,
															"nodeType": "IfStatement",
															"src": "2832:50:0",
															"trueBody": {
																"expression": {
																	"hexValue": "74727565",
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2878:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 67,
																"id": 85,
																"nodeType": "Return",
																"src": "2871:11:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 72,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "2791:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 73,
															"name": "docs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "2793:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2798:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2793:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2791:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"initializationExpression": {
													"assignments": [
														69
													],
													"declarations": [
														{
															"constant": false,
															"id": 69,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2787:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 88,
															"src": "2779:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 68,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2779:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 71,
													"initialValue": {
														"hexValue": "30",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2789:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2779:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2805:3:0",
														"subExpression": {
															"id": 76,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "2805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 78,
													"nodeType": "ExpressionStatement",
													"src": "2805:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2775:118:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2909:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 67,
												"id": 90,
												"nodeType": "Return",
												"src": "2902:12:0"
											}
										]
									},
									"functionSelector": "a8f2be76",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAccess",
									"nameLocation": "2707:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_doctor",
												"nameLocation": "2724:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2716:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2715:17:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2755:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2755:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:6:0"
									},
									"scope": 212,
									"src": "2698:223:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "3065:199:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "DOCTOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "3085:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 108,
															"name": "_doctor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "3098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 106,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3075:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3075:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "3075:31:0"
											},
											{
												"body": {
													"id": 129,
													"nodeType": "Block",
													"src": "3160:70:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 122,
																		"name": "docs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "3177:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 124,
																	"indexExpression": {
																		"id": 123,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 112,
																		"src": "3182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3177:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 125,
																	"name": "_doctor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "3188:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3177:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 128,
															"nodeType": "IfStatement",
															"src": "3174:46:0",
															"trueBody": {
																"functionReturnParameters": 105,
																"id": 127,
																"nodeType": "Return",
																"src": "3213:7:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 115,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3133:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 116,
															"name": "docs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "3135:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3140:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3135:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3133:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"initializationExpression": {
													"assignments": [
														112
													],
													"declarations": [
														{
															"constant": false,
															"id": 112,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3129:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 130,
															"src": "3121:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 111,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3121:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 114,
													"initialValue": {
														"hexValue": "30",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3121:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3147:3:0",
														"subExpression": {
															"id": 119,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "3147:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ExpressionStatement",
													"src": "3147:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3117:113:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "_doctor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "3249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 131,
															"name": "docs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "3239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3244:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3239:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "3239:18:0"
											}
										]
									},
									"functionSelector": "ac0cc465",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 99,
													"name": "_patient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "3007:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "onlyOwner",
												"nameLocations": [
													"2997:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "2997:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2997:19:0"
										},
										{
											"arguments": [
												{
													"id": 102,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 375,
													"src": "3031:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												{
													"id": 103,
													"name": "_patient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "3051:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 101,
												"name": "onlyRole",
												"nameLocations": [
													"3022:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "3022:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3022:38:0"
										}
									],
									"name": "setupRole_Doctor",
									"nameLocation": "2936:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_patient",
												"nameLocation": "2961:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2953:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "_doctor",
												"nameLocation": "2979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2952:35:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3065:0:0"
									},
									"scope": 212,
									"src": "2927:337:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3412:287:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "DOCTOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "3433:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 154,
															"name": "_doctor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "3446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 152,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "3422:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3422:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "3422:32:0"
											},
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "pos",
														"nameLocation": "3468:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "3464:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 157,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3464:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 161,
												"initialValue": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "-",
													"prefix": true,
													"src": "3474:2:0",
													"subExpression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_rational_minus_1_by_1",
														"typeString": "int_const -1"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3464:12:0"
											},
											{
												"body": {
													"id": 203,
													"nodeType": "Block",
													"src": "3531:142:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 175,
																		"name": "docs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "3548:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 177,
																	"indexExpression": {
																		"id": 176,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "3553:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 178,
																	"name": "_doctor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "3559:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3548:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 187,
															"nodeType": "IfStatement",
															"src": "3545:51:0",
															"trueBody": {
																"expression": {
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 180,
																		"name": "pos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "3584:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 183,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "3594:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3590:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 181,
																				"name": "int",
																				"nodeType": "ElementaryTypeName",
																				"src": "3590:3:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3590:6:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "3584:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 186,
																"nodeType": "ExpressionStatement",
																"src": "3584:12:0"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 188,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "3618:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "3623:2:0",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3624:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "3618:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 202,
															"nodeType": "IfStatement",
															"src": "3615:47:0",
															"trueBody": {
																"expression": {
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 192,
																			"name": "docs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "3643:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 194,
																		"indexExpression": {
																			"id": 193,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "3648:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "3643:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 195,
																			"name": "docs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "3653:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 199,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 196,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "3658:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3660:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3658:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3653:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3643:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 201,
																"nodeType": "ExpressionStatement",
																"src": "3643:19:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 166,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "3502:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 167,
																"name": "docs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3509:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3504:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3516:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3504:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3502:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"initializationExpression": {
													"assignments": [
														163
													],
													"declarations": [
														{
															"constant": false,
															"id": 163,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3498:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 204,
															"src": "3490:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 162,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3490:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 165,
													"initialValue": {
														"hexValue": "30",
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3490:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3518:3:0",
														"subExpression": {
															"id": 172,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3518:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 174,
													"nodeType": "ExpressionStatement",
													"src": "3518:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3486:187:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 205,
															"name": "docs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "3682:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3687:3:0",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "3682:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3682:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "3682:10:0"
											}
										]
									},
									"functionSelector": "4cc2f081",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 145,
													"name": "_patient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "3351:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 144,
												"name": "onlyOwner",
												"nameLocations": [
													"3341:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "3341:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3341:19:0"
										},
										{
											"arguments": [
												{
													"id": 148,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 375,
													"src": "3378:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												{
													"id": 149,
													"name": "_patient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "3398:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 147,
												"name": "onlyRole",
												"nameLocations": [
													"3369:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "3369:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3369:38:0"
										}
									],
									"name": "revokeRole_Doctor",
									"nameLocation": "3279:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "_patient",
												"nameLocation": "3305:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3297:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_doctor",
												"nameLocation": "3323:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3315:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3296:35:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3412:0:0"
									},
									"scope": 212,
									"src": "3270:429:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 213,
							"src": "735:2966:0",
							"usedErrors": []
						}
					],
					"src": "31:3671:0"
				},
				"id": 0
			},
			"access/Owner.sol": {
				"ast": {
					"absolutePath": "access/Owner.sol",
					"exportedSymbols": {
						"Owner": [
							323
						]
					},
					"id": 324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Owner",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 323,
							"linearizedBaseContracts": [
								323
							],
							"name": "Owner",
							"nameLocation": "162:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 216,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "192:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 323,
									"src": "176:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 215,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "176:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 222,
									"name": "OwnershipTransferred",
									"nameLocation": "213:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "250:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "234:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "281:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "265:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:57:1"
									},
									"src": "207:84:1"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "341:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "364:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "352:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "352:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "352:20:1"
											},
											{
												"id": 230,
												"nodeType": "PlaceholderStatement",
												"src": "383:1:1"
											}
										]
									},
									"id": 232,
									"name": "onlyOwner",
									"nameLocation": "309:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "319:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:17:1"
									},
									"src": "300:92:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "437:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "467:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 237,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "448:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "448:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "448:29:1"
											}
										]
									},
									"id": 242,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "420:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "412:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:19:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:0:1"
									},
									"scope": 323,
									"src": "400:85:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "563:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 248,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "582:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "582:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 250,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "593:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "582:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "602:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "574:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "574:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "574:63:1"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:17:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:0:1"
									},
									"scope": 323,
									"src": "497:148:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "714:32:1",
										"statements": [
											{
												"expression": {
													"id": 261,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "732:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 260,
												"id": 262,
												"nodeType": "Return",
												"src": "725:13:1"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "662:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:2:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "699:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:9:1"
									},
									"scope": 323,
									"src": "653:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "839:133:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 273,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "858:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "879:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "871:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 274,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "871:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "871:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "858:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "883:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "850:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "850:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "850:74:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 283,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "954:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 282,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "935:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "935:29:1"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 269,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "825:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 268,
												"name": "onlyOwner",
												"nameLocations": [
													"815:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "815:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "815:17:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "763:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "789:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "781:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:19:1"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:0:1"
									},
									"scope": 323,
									"src": "754:218:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1042:130:1",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1061:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 305,
														"src": "1053:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1053:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"id": 294,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "1072:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1053:25:1"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1089:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1098:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1089:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "1089:18:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 301,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1144:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "1154:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1123:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1123:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "EmitStatement",
												"src": "1118:46:1"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "989:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1016:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1008:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:19:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:0:1"
									},
									"scope": 323,
									"src": "980:192:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "1280:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1318:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1310:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1310:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1310:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 314,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "1291:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1291:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "1291:30:1"
											}
										]
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 311,
													"name": "_ownerContract",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 308,
													"src": "1258:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 310,
												"name": "onlyOwner",
												"nameLocations": [
													"1248:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "1248:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1248:25:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1189:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "_ownerContract",
												"nameLocation": "1215:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "1207:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:24:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:0:1"
									},
									"scope": 323,
									"src": "1180:149:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 324,
							"src": "144:1194:1",
							"usedErrors": []
						}
					],
					"src": "117:1221:1"
				},
				"id": 1
			},
			"access/Roles.sol": {
				"ast": {
					"absolutePath": "access/Roles.sol",
					"exportedSymbols": {
						"AccessControl": [
							649
						],
						"ERC165": [
							1135
						],
						"IERC165": [
							1147
						],
						"Math": [
							2013
						],
						"Owner": [
							323
						],
						"SignedMath": [
							2118
						],
						"Strings": [
							1111
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"file": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 1136,
							"src": "136:109:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "access/Owner.sol",
							"file": "./Owner.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 324,
							"src": "247:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"file": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 1112,
							"src": "270:96:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 330,
										"name": "ERC165",
										"nameLocations": [
											"1978:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1135,
										"src": "1978:6:2"
									},
									"id": 331,
									"nodeType": "InheritanceSpecifier",
									"src": "1978:6:2"
								},
								{
									"baseName": {
										"id": 332,
										"name": "Owner",
										"nameLocations": [
											"1985:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 323,
										"src": "1985:5:2"
									},
									"id": 333,
									"nodeType": "InheritanceSpecifier",
									"src": "1985:5:2"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 329,
								"nodeType": "StructuredDocumentation",
								"src": "370:1571:2",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": false,
							"id": 649,
							"linearizedBaseContracts": [
								649,
								323,
								1135,
								1147
							],
							"name": "AccessControl",
							"nameLocation": "1961:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1999:299:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 342,
									"name": "RoleAdminChanged",
									"nameLocation": "2310:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2343:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2327:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "2365:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2349:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "2400:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2384:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 339,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:87:2"
									},
									"src": "2304:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "2422:217:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 351,
									"name": "RoleGranted",
									"nameLocation": "2651:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2679:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2663:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2701:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2685:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2726:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2710:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2662:71:2"
									},
									"src": "2645:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "2742:281:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 360,
									"name": "RoleRevoked",
									"nameLocation": "3035:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3063:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3047:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 353,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3085:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3069:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3110:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3094:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3046:71:2"
									},
									"src": "3029:89:2"
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 367,
									"members": [
										{
											"constant": false,
											"id": 364,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "3178:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 367,
											"src": "3153:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 363,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "3153:24:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3172:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 366,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "3204:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 367,
											"src": "3196:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 365,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3196:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "3133:8:2",
									"nodeType": "StructDefinition",
									"scope": 649,
									"src": "3126:95:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "3266:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "3229:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$367_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 371,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 368,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "3237:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "3229:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$367_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 369,
												"name": "RoleData",
												"nameLocations": [
													"3248:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "3248:8:2"
											},
											"referencedDeclaration": 367,
											"src": "3248:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$367_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 375,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "3305:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "3281:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 373,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3281:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3326:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 377,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "3355:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "3339:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 376,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3339:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3437:34:2",
										"statements": [
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "3448:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 386,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "3456:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3448:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3448:15:2"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 382,
													"name": "_sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 379,
													"src": "3423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 381,
												"name": "onlyOwner",
												"nameLocations": [
													"3413:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "3413:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3413:18:2"
										}
									],
									"name": "setAdmin",
									"nameLocation": "3378:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "3395:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3387:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3387:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:17:2"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3437:0:2"
									},
									"scope": 649,
									"src": "3369:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3914:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "3936:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 399,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "3941:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3925:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3925:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3925:23:2"
											},
											{
												"id": 402,
												"nodeType": "PlaceholderStatement",
												"src": "3959:1:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3477:384:2",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 404,
									"name": "onlyRole",
									"nameLocation": "3876:8:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3906:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3898:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:29:2"
									},
									"src": "3867:101:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "4423:55:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 414,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "4441:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$367_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 416,
															"indexExpression": {
																"id": 415,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "4448:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4441:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$367_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4454:7:2",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "4441:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 419,
													"indexExpression": {
														"id": 418,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "4462:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4441:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 413,
												"id": 420,
												"nodeType": "Return",
												"src": "4434:36:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "4256:78:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "4349:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4365:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4357:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4379:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4371:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4356:31:2"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4417:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4417:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:6:2"
									},
									"scope": 649,
									"src": "4340:138:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "5263:419:2",
										"statements": [
											{
												"condition": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5278:23:2",
													"subExpression": {
														"arguments": [
															{
																"id": 431,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5287:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 432,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "5293:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 430,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "5279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5279:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "5274:401:2",
												"trueBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "5303:372:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 440,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5415:25:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 443,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 427,
																								"src": "5487:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 441,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1111,
																								"src": "5467:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1111_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 442,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5475:11:2",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1085,
																							"src": "5467:19:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5467:28:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5522:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 450,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 425,
																										"src": "5596:4:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 449,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "5588:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 448,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "5588:7:2",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 451,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5588:13:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 452,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5603:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 446,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1111,
																								"src": "5568:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1111_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 447,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5576:11:2",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1065,
																							"src": "5568:19:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 453,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5568:38:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 438,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "5372:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 439,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "5376:12:2",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "5372:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5372:257:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5343:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 436,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "5343:6:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5343:305:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 435,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "5318:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5318:345:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 457,
															"nodeType": "ExpressionStatement",
															"src": "5318:345:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "4908:276:2",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "5199:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5218:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5210:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5210:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5232:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5224:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5209:31:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5263:0:2"
									},
									"scope": 649,
									"src": "5190:492:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "5945:48:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 469,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5963:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$367_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 471,
														"indexExpression": {
															"id": 470,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "5970:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5963:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$367_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5976:9:2",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 366,
													"src": "5963:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 468,
												"id": 473,
												"nodeType": "Return",
												"src": "5956:29:2"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "5690:175:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "5880:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5901:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5893:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 463,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5892:14:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5936:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5935:9:2"
									},
									"scope": 649,
									"src": "5871:122:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "6405:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6427:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 491,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "6433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 489,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "6416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6416:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "6416:25:2"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "6001:296:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 484,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6392:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 483,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "6379:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												{
													"id": 486,
													"name": "admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 377,
													"src": "6398:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "onlyRole",
												"nameLocations": [
													"6370:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "6370:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6370:34:2"
										}
									],
									"name": "grantRole",
									"nameLocation": "6312:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6330:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6322:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6322:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6344:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6336:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:31:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6405:0:2"
									},
									"scope": 649,
									"src": "6303:146:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "6845:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "6868:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "6874:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 509,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "6856:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6856:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "6856:26:2"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "6457:279:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 504,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "6832:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 503,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "6819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6819:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												{
													"id": 506,
													"name": "admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 377,
													"src": "6838:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 502,
												"name": "onlyRole",
												"nameLocations": [
													"6810:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "6810:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6810:34:2"
										}
									],
									"name": "revokeRole",
									"nameLocation": "6751:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6770:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6762:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 497,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6762:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6784:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6776:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6761:31:2"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6845:0:2"
									},
									"scope": 649,
									"src": "6742:148:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "7519:132:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 524,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "7538:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 525,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "7549:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7538:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7556:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7530:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7530:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "7530:76:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "7629:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 532,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "7635:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "7617:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7617:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "7617:26:2"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "6898:541:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "7454:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7475:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7467:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7489:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7481:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7466:31:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7519:0:2"
									},
									"scope": 649,
									"src": "7445:206:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "8448:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "8470:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 549,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "8476:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 547,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "8459:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8459:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "8459:25:2"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "7659:693:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 544,
													"name": "admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 377,
													"src": "8436:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 543,
												"name": "onlyOwner",
												"nameLocations": [
													"8426:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "8426:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8426:16:2"
										}
									],
									"name": "_setupRole",
									"nameLocation": "8367:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8386:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "8378:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 538,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8378:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8400:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "8392:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8392:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8377:31:2"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8448:0:2"
									},
									"scope": 649,
									"src": "8358:134:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "8732:178:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "8751:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "8743:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 567,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8743:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [
														{
															"id": 570,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "8784:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 569,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "8771:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8771:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8743:46:2"
											},
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 573,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "8800:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$367_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 575,
															"indexExpression": {
																"id": 574,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "8807:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8800:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$367_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8813:9:2",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "8800:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 577,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "8825:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "8800:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "8800:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 581,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "8867:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 582,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "8873:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 583,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "8892:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 580,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "8850:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8850:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "EmitStatement",
												"src": "8845:57:2"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "8500:118:2",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 562,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "8719:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 561,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "8706:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8706:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												{
													"id": 564,
													"name": "admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 377,
													"src": "8725:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 565,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 560,
												"name": "onlyRole",
												"nameLocations": [
													"8697:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "8697:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8697:34:2"
										}
									],
									"name": "_setRoleAdmin",
									"nameLocation": "8633:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8655:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "8647:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "8669:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "8661:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 557,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:33:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8732:0:2"
									},
									"scope": 649,
									"src": "8624:286:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "9153:173:2",
										"statements": [
											{
												"condition": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9168:23:2",
													"subExpression": {
														"arguments": [
															{
																"id": 596,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "9177:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 597,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "9183:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 595,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "9169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "9164:155:2",
												"trueBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "9203:116:2",
													"statements": [
														{
															"expression": {
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 600,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "9218:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$367_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 602,
																			"indexExpression": {
																				"id": 601,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "9225:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9218:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$367_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9231:7:2",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 364,
																		"src": "9218:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 605,
																	"indexExpression": {
																		"id": 604,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "9239:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9218:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9250:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "9218:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 608,
															"nodeType": "ExpressionStatement",
															"src": "9218:36:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 610,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "9286:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 611,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "9292:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 612,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "9301:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 609,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "9274:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9274:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 614,
															"nodeType": "EmitStatement",
															"src": "9269:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "8918:163:2",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "9096:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "9115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "9107:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 589,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9129:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "9121:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9121:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9106:31:2"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9153:0:2"
									},
									"scope": 649,
									"src": "9087:239:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "9567:163:2",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 627,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "9590:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 628,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 626,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "9582:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9582:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "IfStatement",
												"src": "9578:145:2",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "9606:117:2",
													"statements": [
														{
															"expression": {
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 630,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "9621:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$367_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 632,
																			"indexExpression": {
																				"id": 631,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 621,
																				"src": "9628:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9621:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$367_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 633,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9634:7:2",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 364,
																		"src": "9621:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 635,
																	"indexExpression": {
																		"id": 634,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "9642:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9621:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9653:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "9621:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "9621:37:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 640,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "9690:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 641,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "9696:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "9705:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 639,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "9678:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9678:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "EmitStatement",
															"src": "9673:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "9334:166:2",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "9515:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "9535:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9527:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 620,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9549:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9541:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9541:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9526:31:2"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9567:0:2"
									},
									"scope": 649,
									"src": "9506:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 650,
							"src": "1943:7790:2",
							"usedErrors": []
						}
					],
					"src": "109:9624:2"
				},
				"id": 2
			},
			"addPatients.sol": {
				"ast": {
					"absolutePath": "addPatients.sol",
					"exportedSymbols": {
						"AccessControl": [
							649
						],
						"Clones": [
							2198
						],
						"ERC165": [
							1135
						],
						"IERC165": [
							1147
						],
						"Math": [
							2013
						],
						"Owner": [
							323
						],
						"Patient": [
							212
						],
						"Patients": [
							882
						],
						"SignedMath": [
							2118
						],
						"Strings": [
							1111
						]
					},
					"id": 883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "Patient.sol",
							"file": "./Patient.sol",
							"id": 652,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 883,
							"sourceUnit": 213,
							"src": "59:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
							"id": 653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 883,
							"sourceUnit": 2199,
							"src": "84:103:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Patients",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 882,
							"linearizedBaseContracts": [
								882
							],
							"name": "Patients",
							"nameLocation": "484:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "85858416f612212ddb7c6344d7b58182bad1de3be71438a88c6f19f0fa2b826d",
									"id": 663,
									"name": "NewPatient",
									"nameLocation": "507:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"indexed": false,
												"mutability": "mutable",
												"name": "notice",
												"nameLocation": "525:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "518:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "518:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"indexed": false,
												"mutability": "mutable",
												"name": "patient",
												"nameLocation": "541:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "533:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": false,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "558:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "550:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "contractPatient",
												"nameLocation": "574:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "566:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:73:3"
									},
									"src": "501:90:3"
								},
								{
									"anonymous": false,
									"eventSelector": "cf135c3b898e1e68301ee3615d92cb56b00c3fc03db5a8b44fea7363b96e0dae",
									"id": 669,
									"name": "GetRole",
									"nameLocation": "603:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "618:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "611:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "611:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": false,
												"mutability": "mutable",
												"name": "doctor",
												"nameLocation": "632:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "624:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:29:3"
									},
									"src": "597:43:3"
								},
								{
									"anonymous": false,
									"eventSelector": "a46ff6f8d8019b1a730a7666fa32a0236c89399dd776007c7485144b71e9e279",
									"id": 677,
									"name": "Log",
									"nameLocation": "652:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"indexed": false,
												"mutability": "mutable",
												"name": "func",
												"nameLocation": "663:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "656:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 670,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "656:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "677:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "669:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "691:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "685:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "685:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:41:3"
									},
									"src": "646:51:3"
								},
								{
									"constant": false,
									"id": 680,
									"mutability": "mutable",
									"name": "countPatients",
									"nameLocation": "721:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 882,
									"src": "705:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 678,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 679,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "737:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 684,
									"mutability": "mutable",
									"name": "adressesPatient",
									"nameLocation": "781:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 882,
									"src": "745:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 683,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 681,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "753:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "745:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 682,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "764:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 686,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "822:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 882,
									"src": "806:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 685,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "887:51:3",
										"statements": [
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 691,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "898:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 692,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "915:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "898:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "898:32:3"
											}
										]
									},
									"id": 696,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "864:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "856:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:25:3"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:3"
									},
									"scope": 882,
									"src": "843:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "992:125:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 701,
																	"name": "adressesPatient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "1011:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 703,
																"indexExpression": {
																	"id": 702,
																	"name": "_patient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "1027:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1011:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1046:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1038:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 704,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1038:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1038:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1011:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50617469656e7420646f6e27742065786973747321436865636b2070617469656e742773206163636f756e7421",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1049:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a",
																"typeString": "literal_string \"Patient don't exists!Check patient's account!\""
															},
															"value": "Patient don't exists!Check patient's account!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e490966200d6d8a9dccf866961ae983c04fabf8758c5916b0cf2541dd5cd7f4a",
																"typeString": "literal_string \"Patient don't exists!Check patient's account!\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1003:94:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "1003:94:3"
											},
											{
												"id": 712,
												"nodeType": "PlaceholderStatement",
												"src": "1108:1:3"
											}
										]
									},
									"id": 714,
									"name": "existsPatient",
									"nameLocation": "955:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "_patient",
												"nameLocation": "977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:18:3"
									},
									"src": "946:171:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "1165:368:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 718,
																	"name": "adressesPatient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "1184:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 721,
																"indexExpression": {
																	"expression": {
																		"id": 719,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1200:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1204:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1200:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1184:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1221:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1213:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 722,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1213:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1213:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1184:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75207765726520726567697374657221",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1224:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4",
																"typeString": "literal_string \"You were register!\""
															},
															"value": "You were register!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_969231c6281af79ca2e6b40fdcc2c2c9b896f39609b201bebbccafa24c2707f4",
																"typeString": "literal_string \"You were register!\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1176:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "1176:69:3"
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "patient",
														"nameLocation": "1274:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "1266:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 730,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1266:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [
														{
															"id": 734,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "1297:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 732,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "1284:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$2198_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1291:5:3",
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2141,
														"src": "1284:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1266:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 741,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1351:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1355:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1351:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 738,
																	"name": "patient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "1333:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 737,
																"name": "Patient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "1325:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Patient_$212_$",
																	"typeString": "type(contract Patient)"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1325:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Patient_$212",
																"typeString": "contract Patient"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1342:8:3",
														"memberName": "register",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 61,
														"src": "1325:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1325:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "1325:37:3"
											},
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 745,
															"name": "adressesPatient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "1375:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 748,
														"indexExpression": {
															"expression": {
																"id": 746,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1391:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1395:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1391:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1375:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 749,
														"name": "patient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "1405:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1375:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "1375:37:3"
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1423:15:3",
													"subExpression": {
														"id": 752,
														"name": "countPatients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "1423:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "1423:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "4372656174652070617469656e743a20",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1467:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0",
																"typeString": "literal_string \"Create patient: \""
															},
															"value": "Create patient: "
														},
														{
															"expression": {
																"id": 757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1486:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1490:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1486:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "countPatients",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "1497:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1511:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1497:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 762,
															"name": "patient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "1513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0b7c16414ca167412ca8ca3e8ed204c02307deeb7ddd99b283abaa162926bfb0",
																"typeString": "literal_string \"Create patient: \""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 755,
														"name": "NewPatient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "1456:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (string memory,address,uint256,address)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1456:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "EmitStatement",
												"src": "1451:70:3"
											}
										]
									},
									"functionSelector": "35a27178",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPatient",
									"nameLocation": "1134:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:2:3"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:0:3"
									},
									"scope": 882,
									"src": "1125:408:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "1640:105:3",
										"statements": [
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "1659:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 791,
														"src": "1651:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Patient_$212",
															"typeString": "contract Patient"
														},
														"typeName": {
															"id": 777,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 776,
																"name": "Patient",
																"nameLocations": [
																	"1651:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 212,
																"src": "1651:7:3"
															},
															"referencedDeclaration": 212,
															"src": "1651:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Patient_$212",
																"typeString": "contract Patient"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 780,
																"name": "adressesPatient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "1671:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 782,
															"indexExpression": {
																"id": 781,
																"name": "_patient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "1687:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1671:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 779,
														"name": "Patient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1663:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Patient_$212_$",
															"typeString": "type(contract Patient)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1663:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Patient_$212",
														"typeString": "contract Patient"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1651:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 787,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1726:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1730:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1726:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 785,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "1715:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Patient_$212",
																"typeString": "contract Patient"
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1717:8:3",
														"memberName": "isAccess",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "1715:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view external returns (bool)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1715:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 775,
												"id": 790,
												"nodeType": "Return",
												"src": "1708:29:3"
											}
										]
									},
									"functionSelector": "466a0146",
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 771,
													"name": "_patient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 768,
													"src": "1609:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 772,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 770,
												"name": "existsPatient",
												"nameLocations": [
													"1595:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 714,
												"src": "1595:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1595:23:3"
										}
									],
									"name": "checkAccess",
									"nameLocation": "1550:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "_patient",
												"nameLocation": "1570:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1562:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1561:18:3"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1629:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1629:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:6:3"
									},
									"scope": 882,
									"src": "1541:204:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "1813:39:3",
										"statements": [
											{
												"expression": {
													"id": 797,
													"name": "countPatients",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 680,
													"src": "1831:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 796,
												"id": 798,
												"nodeType": "Return",
												"src": "1824:20:3"
											}
										]
									},
									"functionSelector": "cd8cb137",
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCountPatient",
									"nameLocation": "1762:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1777:2:3"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1802:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1802:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1801:6:3"
									},
									"scope": 882,
									"src": "1753:99:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "2170:227:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 806,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2189:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2193:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2189:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 808,
																"name": "_doctor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2203:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2189:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206e6f74206265206120646f63746f7221",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2212:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6",
																"typeString": "literal_string \"You can not be a doctor!\""
															},
															"value": "You can not be a doctor!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_334a70e7c66dd3c4c17b92a3ede776786bac678b0cb702618ad2e557620e9bd6",
																"typeString": "literal_string \"You can not be a doctor!\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2181:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "2181:58:3"
											},
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "2258:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 836,
														"src": "2250:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Patient_$212",
															"typeString": "contract Patient"
														},
														"typeName": {
															"id": 814,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 813,
																"name": "Patient",
																"nameLocations": [
																	"2250:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 212,
																"src": "2250:7:3"
															},
															"referencedDeclaration": 212,
															"src": "2250:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Patient_$212",
																"typeString": "contract Patient"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 817,
																"name": "adressesPatient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "2270:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 820,
															"indexExpression": {
																"expression": {
																	"id": 818,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2286:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2290:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2286:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2270:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 816,
														"name": "Patient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2262:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Patient_$212_$",
															"typeString": "type(contract Patient)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Patient_$212",
														"typeString": "contract Patient"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2250:48:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 826,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2328:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2332:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2328:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "_doctor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "2339:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 823,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2309:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Patient_$212",
																"typeString": "contract Patient"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2311:16:3",
														"memberName": "setupRole_Doctor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "2309:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) external"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "2309:38:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "446f63746f72",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759",
																"typeString": "literal_string \"Doctor\""
															},
															"value": "Doctor"
														},
														{
															"id": 833,
															"name": "_doctor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "2381:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_81801538196f6575c6900044ae3429ef092e7ad29a7f4da69ed7f897d69f5759",
																"typeString": "literal_string \"Doctor\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 831,
														"name": "GetRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2363:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2363:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "2358:31:3"
											}
										]
									},
									"functionSelector": "c375110d",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRole",
									"nameLocation": "2130:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "_doctor",
												"nameLocation": "2147:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "2139:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:17:3"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2170:0:3"
									},
									"scope": 882,
									"src": "2121:276:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "2455:204:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 843,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2474:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2478:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2474:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 845,
																"name": "_doctor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "2488:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2474:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206e6f74206265206120646f63746f7220616e64206e6f7468696e6720616e75616c21",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2497:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a",
																"typeString": "literal_string \"You can not be a doctor and nothing anual!\""
															},
															"value": "You can not be a doctor and nothing anual!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_88d6fe525554e4d4697eb3370bb948fff3ac20af0cbd2959474b16eccc47146a",
																"typeString": "literal_string \"You can not be a doctor and nothing anual!\""
															}
														],
														"id": 842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2466:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "2466:76:3"
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "2561:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "2553:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Patient_$212",
															"typeString": "contract Patient"
														},
														"typeName": {
															"id": 851,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 850,
																"name": "Patient",
																"nameLocations": [
																	"2553:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 212,
																"src": "2553:7:3"
															},
															"referencedDeclaration": 212,
															"src": "2553:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Patient_$212",
																"typeString": "contract Patient"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 854,
																"name": "adressesPatient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "2573:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 857,
															"indexExpression": {
																"expression": {
																	"id": 855,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2589:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2593:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2589:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2573:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "Patient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2565:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Patient_$212_$",
															"typeString": "type(contract Patient)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2565:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Patient_$212",
														"typeString": "contract Patient"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2553:48:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 863,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2632:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2636:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2632:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "_doctor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "2643:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 860,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "2612:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Patient_$212",
																"typeString": "contract Patient"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2614:17:3",
														"memberName": "revokeRole_Doctor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "2612:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) external"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2612:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "2612:39:3"
											}
										]
									},
									"functionSelector": "f531072c",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "anualRole",
									"nameLocation": "2414:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "_doctor",
												"nameLocation": "2432:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2424:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:17:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:0:3"
									},
									"scope": 882,
									"src": "2405:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "2693:61:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "66616c6c6261636b",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2713:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010",
																"typeString": "literal_string \"fallback\""
															},
															"value": "fallback"
														},
														{
															"expression": {
																"id": 874,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2725:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2729:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2725:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 876,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2737:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2741:4:3",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"src": "2737:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010",
																"typeString": "literal_string \"fallback\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 872,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "2709:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (string memory,address,bytes memory)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2709:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "EmitStatement",
												"src": "2704:42:3"
											}
										]
									},
									"id": 881,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:3"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:0:3"
									},
									"scope": 882,
									"src": "2667:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 883,
							"src": "475:2282:3",
							"usedErrors": []
						}
					],
					"src": "32:2727:3"
				},
				"id": 3
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2013
						],
						"SignedMath": [
							2118
						],
						"Strings": [
							1111
						]
					},
					"id": 1112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 884,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 2014,
							"src": "126:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 2119,
							"src": "152:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1111,
							"linearizedBaseContracts": [
								1111
							],
							"name": "Strings",
							"nameLocation": "228:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 890,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "242:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 888,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 889,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 893,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "302:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 891,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 892,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "518:625:4",
										"statements": [
											{
												"id": 939,
												"nodeType": "UncheckedBlock",
												"src": "528:609:4",
												"statements": [
													{
														"assignments": [
															902
														],
														"declarations": [
															{
																"constant": false,
																"id": 902,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 939,
																"src": "552:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 901,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 909,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 905,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "580:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 903,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2013,
																		"src": "569:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2013_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:4",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1850,
																	"src": "569:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:4"
													},
													{
														"assignments": [
															911
														],
														"declarations": [
															{
																"constant": false,
																"id": 911,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 939,
																"src": "604:20:4",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 910,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 916,
														"initialValue": {
															"arguments": [
																{
																	"id": 914,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "638:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 912,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:4"
													},
													{
														"assignments": [
															918
														],
														"declarations": [
															{
																"constant": false,
																"id": 918,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 939,
																"src": "659:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 917,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 919,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:4",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:4"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:4"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 911,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:4",
																"valueSize": 1
															},
															{
																"declaration": 902,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:4",
																"valueSize": 1
															},
															{
																"declaration": 918,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:4",
																"valueSize": 1
															}
														],
														"id": 920,
														"nodeType": "InlineAssembly",
														"src": "731:76:4"
													},
													{
														"body": {
															"id": 935,
															"nodeType": "Block",
															"src": "833:267:4",
															"statements": [
																{
																	"expression": {
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:4",
																		"subExpression": {
																			"id": 922,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 918,
																			"src": "851:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 924,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:4"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:4",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:4"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:4"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:4"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 890,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 918,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 896,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:4",
																			"valueSize": 1
																		}
																	],
																	"id": 925,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:4"
																},
																{
																	"expression": {
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 926,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "1035:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 929,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 930,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "1068:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 934,
																	"nodeType": "IfStatement",
																	"src": "1064:21:4",
																	"trueBody": {
																		"id": 933,
																		"nodeType": "Break",
																		"src": "1080:5:4"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 936,
														"nodeType": "WhileStatement",
														"src": "820:280:4"
													},
													{
														"expression": {
															"id": 937,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "1120:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 900,
														"id": 938,
														"nodeType": "Return",
														"src": "1113:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "503:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:4"
									},
									"scope": 1111,
									"src": "447:696:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "1313:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 953,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "1354:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:4",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 962,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "1400:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 960,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2118,
																					"src": "1385:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2118_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:4",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2117,
																				"src": "1385:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 959,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			941,
																			969
																		],
																		"referencedDeclaration": 941,
																		"src": "1376:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 951,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 949,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 948,
												"id": 967,
												"nodeType": "Return",
												"src": "1323:86:4"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:4",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1261:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 943,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:4"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1298:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:4"
									},
									"scope": 1111,
									"src": "1243:173:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "1595:100:4",
										"statements": [
											{
												"id": 987,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "1648:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 981,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "1667:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 979,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2013,
																				"src": "1655:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2013_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:4",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1973,
																			"src": "1655:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 977,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	989,
																	1065,
																	1085
																],
																"referencedDeclaration": 1065,
																"src": "1636:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 976,
														"id": 986,
														"nodeType": "Return",
														"src": "1629:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1542:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:4"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1580:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:4"
									},
									"scope": 1111,
									"src": "1521:174:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "1908:347:4",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "1918:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 999,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1004,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "1954:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1001,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:4"
											},
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1010,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "1975:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1012,
														"indexExpression": {
															"hexValue": "30",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:4"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1016,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "2000:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1018,
														"indexExpression": {
															"hexValue": "31",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:4"
											},
											{
												"body": {
													"id": 1050,
													"nodeType": "Block",
													"src": "2070:83:4",
													"statements": [
														{
															"expression": {
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1036,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "2084:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1038,
																	"indexExpression": {
																		"id": 1037,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1023,
																		"src": "2091:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1039,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2096:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1043,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1040,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "2105:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1045,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:4"
														},
														{
															"expression": {
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1046,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "2131:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1049,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1030,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "2058:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"initializationExpression": {
													"assignments": [
														1023
													],
													"declarations": [
														{
															"constant": false,
															"id": 1023,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1051,
															"src": "2030:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1022,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1029,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1025,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "2046:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:4",
														"subExpression": {
															"id": 1033,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "2067:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1035,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "2170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1061,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "2241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1059,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 998,
												"id": 1063,
												"nodeType": "Return",
												"src": "2227:21:4"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1839:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1893:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 996,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:4"
									},
									"scope": 1111,
									"src": "1818:437:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "2480:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1078,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1068,
																			"src": "2525:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1076,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1074,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1081,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "2533:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1073,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															989,
															1065,
															1085
														],
														"referencedDeclaration": 1065,
														"src": "2497:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1083,
												"nodeType": "Return",
												"src": "2490:59:4"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:4",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2428:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:4"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1070,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"scope": 1111,
									"src": "2407:149:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "2711:66:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1098,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "2744:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1095,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1104,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "2767:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1102,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1101,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1108,
												"nodeType": "Return",
												"src": "2721:49:4"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:4",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2648:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2665:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1089,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2705:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:4"
									},
									"scope": 1111,
									"src": "2633:144:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1112,
							"src": "220:2559:4",
							"usedErrors": []
						}
					],
					"src": "101:2679:4"
				},
				"id": 4
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1135
						],
						"IERC165": [
							1147
						]
					},
					"id": 1136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 1148,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "IERC165",
										"nameLocations": [
											"754:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1147,
										"src": "754:7:5"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1135,
							"linearizedBaseContracts": [
								1135,
								1147
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1146
									],
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1126,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1128,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1147_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1147_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1127,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1147",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1132,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 1135,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1136,
							"src": "726:260:5",
							"usedErrors": []
						}
					],
					"src": "99:888:5"
				},
				"id": 5
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1147
						]
					},
					"id": 1148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1138,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1147,
							"linearizedBaseContracts": [
								1147
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1140,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 1147,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1148,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2013
						]
					},
					"id": 2014,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2013,
							"linearizedBaseContracts": [
								2013
							],
							"name": "Math",
							"nameLocation": "210:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1154,
									"members": [
										{
											"id": 1151,
											"name": "Down",
											"nameLocation": "245:4:7",
											"nodeType": "EnumValue",
											"src": "245:4:7"
										},
										{
											"id": 1152,
											"name": "Up",
											"nameLocation": "287:2:7",
											"nodeType": "EnumValue",
											"src": "287:2:7"
										},
										{
											"id": 1153,
											"name": "Zero",
											"nameLocation": "318:4:7",
											"nodeType": "EnumValue",
											"src": "318:4:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:7",
									"nodeType": "EnumDefinition",
									"src": "221:122:7"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "480:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "497:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "501:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1168,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "509:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:7",
													"trueExpression": {
														"id": 1167,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "505:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1170,
												"nodeType": "Return",
												"src": "490:20:7"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "426:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "437:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:7"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "471:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:7"
									},
									"scope": 2013,
									"src": "413:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "655:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1182,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "672:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1183,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "676:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "684:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:7",
													"trueExpression": {
														"id": 1185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "680:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1181,
												"id": 1188,
												"nodeType": "Return",
												"src": "665:20:7"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:7"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "646:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:7"
									},
									"scope": 2013,
									"src": "588:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "876:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1200,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "931:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1201,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "935:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1203,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1204,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "941:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1205,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "945:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1207,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1211,
												"nodeType": "Return",
												"src": "923:28:7"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "822:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "833:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:7"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "867:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:7"
									},
									"scope": 2013,
									"src": "805:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "1228:123:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1223,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "1316:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1227,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1216,
																			"src": "1330:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1231,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "1339:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1222,
												"id": 1236,
												"nodeType": "Return",
												"src": "1309:35:7"
											}
										]
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1174:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1185:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:7"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1219:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:7"
									},
									"scope": 2013,
									"src": "1157:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "1765:4115:7",
										"statements": [
											{
												"id": 1359,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:7",
												"statements": [
													{
														"assignments": [
															1251
														],
														"declarations": [
															{
																"constant": false,
																"id": 1251,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1359,
																"src": "2096:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1250,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1252,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:7"
													},
													{
														"assignments": [
															1254
														],
														"declarations": [
															{
																"constant": false,
																"id": 1254,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1359,
																"src": "2168:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1253,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1255,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1251,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1251,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1251,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1254,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1241,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1241,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1243,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1243,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:7",
																"valueSize": 1
															}
														],
														"id": 1256,
														"nodeType": "InlineAssembly",
														"src": "2239:166:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1257,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "2486:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1265,
														"nodeType": "IfStatement",
														"src": "2482:368:7",
														"trueBody": {
															"id": 1264,
															"nodeType": "Block",
															"src": "2498:352:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1260,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "2816:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1261,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "2824:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1249,
																	"id": 1263,
																	"nodeType": "Return",
																	"src": "2809:26:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1267,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "2960:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1268,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "2974:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1266,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1272,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:7"
													},
													{
														"assignments": [
															1274
														],
														"declarations": [
															{
																"constant": false,
																"id": 1274,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1359,
																"src": "3261:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1275,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:7"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:7"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1251,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1251,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1251,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1254,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1254,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1274,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1274,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1274,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1241,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1243,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:7",
																"valueSize": 1
															}
														],
														"id": 1276,
														"nodeType": "InlineAssembly",
														"src": "3292:300:7"
													},
													{
														"assignments": [
															1278
														],
														"declarations": [
															{
																"constant": false,
																"id": 1278,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1359,
																"src": "3899:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1286,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1279,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "3914:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:7",
																			"subExpression": {
																				"id": 1280,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1245,
																				"src": "3930:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:7"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1251,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1251,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1278,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1278,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1278,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1278,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1278,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:7",
																"valueSize": 1
															}
														],
														"id": 1287,
														"nodeType": "InlineAssembly",
														"src": "3960:371:7"
													},
													{
														"expression": {
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1288,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "4397:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1289,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "4406:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1290,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "4414:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1293,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:7"
													},
													{
														"assignments": [
															1295
														],
														"declarations": [
															{
																"constant": false,
																"id": 1295,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 1359,
																"src": "4736:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1294,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1302,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1297,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "4759:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:7"
													},
													{
														"expression": {
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1303,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "4992:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1305,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5007:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1306,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "5021:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1310,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:7"
													},
													{
														"expression": {
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1311,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "5061:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1313,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5076:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1314,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "5090:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1318,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:7"
													},
													{
														"expression": {
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1319,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "5131:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1321,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5146:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1322,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "5160:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1326,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:7"
													},
													{
														"expression": {
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1327,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "5201:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1329,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5216:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1330,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "5230:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1334,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:7"
													},
													{
														"expression": {
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1335,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "5271:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1337,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5286:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1338,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "5300:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1342,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:7"
													},
													{
														"expression": {
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1343,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "5342:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1345,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5357:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1346,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "5371:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1350,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:7"
													},
													{
														"expression": {
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1351,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "5812:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1352,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "5821:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1353,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "5829:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1356,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:7"
													},
													{
														"expression": {
															"id": 1357,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "5857:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1249,
														"id": 1358,
														"nodeType": "Return",
														"src": "5850:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1683:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1694:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1705:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:7"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1749:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:7"
									},
									"scope": 2013,
									"src": "1667:4213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "6122:189:7",
										"statements": [
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1404,
														"src": "6132:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1376,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1383,
												"initialValue": {
													"arguments": [
														{
															"id": 1379,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "6156:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1380,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "6159:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1381,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "6162:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1378,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1361,
															1405
														],
														"referencedDeclaration": 1361,
														"src": "6149:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1154",
															"typeString": "enum Math.Rounding"
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1384,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "6188:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1154",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1385,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "6200:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1154_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:7",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1152,
															"src": "6200:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1154",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1389,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "6222:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1390,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "6225:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1391,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "6228:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1388,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1401,
												"nodeType": "IfStatement",
												"src": "6184:98:7",
												"trueBody": {
													"id": 1400,
													"nodeType": "Block",
													"src": "6246:36:7",
													"statements": [
														{
															"expression": {
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1396,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "6260:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1399,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1402,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1377,
													"src": "6298:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1403,
												"nodeType": "Return",
												"src": "6291:13:7"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6028:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6039:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6050:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6071:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1154",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1154,
														"src": "6071:8:7"
													},
													"referencedDeclaration": 1154,
													"src": "6071:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1154",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:7"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6113:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:7"
									},
									"scope": 2013,
									"src": "6012:299:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "6587:1585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1413,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "6601:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1419,
												"nodeType": "IfStatement",
												"src": "6597:45:7",
												"trueBody": {
													"id": 1418,
													"nodeType": "Block",
													"src": "6609:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1412,
															"id": 1417,
															"nodeType": "Return",
															"src": "6623:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "7321:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1424,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "7349:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1423,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1685,
																			1721
																		],
																		"referencedDeclaration": 1685,
																		"src": "7344:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1428,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:7"
											},
											{
												"id": 1515,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:7",
												"statements": [
													{
														"expression": {
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1431,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "7782:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1432,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "7792:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1433,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "7801:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1434,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "7805:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1441,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:7"
													},
													{
														"expression": {
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1442,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "7831:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1443,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "7841:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1444,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "7850:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1445,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "7854:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1448,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1452,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:7"
													},
													{
														"expression": {
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1453,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "7880:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1454,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "7890:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1455,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "7899:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1456,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "7903:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1459,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1463,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:7"
													},
													{
														"expression": {
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1464,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "7929:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1465,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "7939:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1466,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "7948:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1467,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "7952:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1470,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1474,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:7"
													},
													{
														"expression": {
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1475,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "7978:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1476,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "7988:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1477,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "7997:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1478,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "8001:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1481,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1485,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:7"
													},
													{
														"expression": {
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1486,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "8027:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1487,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "8037:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1488,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "8046:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1489,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "8050:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1492,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1496,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:7"
													},
													{
														"expression": {
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1497,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "8076:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1498,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "8086:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1499,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1408,
																					"src": "8095:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1500,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "8099:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1503,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1507,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1509,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "8136:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1510,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "8144:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1511,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1421,
																		"src": "8148:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1508,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "8132:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1412,
														"id": 1514,
														"nodeType": "Return",
														"src": "8125:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "6544:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "6578:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:7"
									},
									"scope": 2013,
									"src": "6530:1642:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "8348:161:7",
										"statements": [
											{
												"id": 1551,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:7",
												"statements": [
													{
														"assignments": [
															1529
														],
														"declarations": [
															{
																"constant": false,
																"id": 1529,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1551,
																"src": "8382:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1533,
														"initialValue": {
															"arguments": [
																{
																	"id": 1531,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "8404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1530,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1517,
																	1553
																],
																"referencedDeclaration": 1517,
																"src": "8399:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1534,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "8427:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1154",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1535,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1523,
																					"src": "8437:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1154",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1536,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1154,
																						"src": "8449:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1154_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1152,
																					"src": "8449:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1154",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1539,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1529,
																						"src": "8464:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1540,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1529,
																						"src": "8473:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1542,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1520,
																					"src": "8482:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1548,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1527,
														"id": 1550,
														"nodeType": "Return",
														"src": "8420:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "8286:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "8297:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1154",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1521,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1154,
														"src": "8297:8:7"
													},
													"referencedDeclaration": 1154,
													"src": "8297:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1154",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:7"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "8339:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:7"
									},
									"scope": 2013,
									"src": "8272:237:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "8694:922:7",
										"statements": [
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1684,
														"src": "8704:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1561,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"hexValue": "30",
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:7"
											},
											{
												"id": 1681,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "8760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1579,
														"nodeType": "IfStatement",
														"src": "8756:99:7",
														"trueBody": {
															"id": 1578,
															"nodeType": "Block",
															"src": "8778:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1570,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "8796:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1573,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:7"
																},
																{
																	"expression": {
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1574,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "8827:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1577,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "8872:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1594,
														"nodeType": "IfStatement",
														"src": "8868:96:7",
														"trueBody": {
															"id": 1593,
															"nodeType": "Block",
															"src": "8889:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "8907:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1588,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:7"
																},
																{
																	"expression": {
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "8937:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1592,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "8981:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1609,
														"nodeType": "IfStatement",
														"src": "8977:96:7",
														"trueBody": {
															"id": 1608,
															"nodeType": "Block",
															"src": "8998:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "9016:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1603,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:7"
																},
																{
																	"expression": {
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1604,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "9046:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1607,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1610,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "9090:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1624,
														"nodeType": "IfStatement",
														"src": "9086:96:7",
														"trueBody": {
															"id": 1623,
															"nodeType": "Block",
															"src": "9107:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "9125:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1618,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:7"
																},
																{
																	"expression": {
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1619,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "9155:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1622,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "9199:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1639,
														"nodeType": "IfStatement",
														"src": "9195:93:7",
														"trueBody": {
															"id": 1638,
															"nodeType": "Block",
															"src": "9215:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1630,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "9233:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1633,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:7"
																},
																{
																	"expression": {
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1634,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "9262:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1637,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1640,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "9305:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1654,
														"nodeType": "IfStatement",
														"src": "9301:93:7",
														"trueBody": {
															"id": 1653,
															"nodeType": "Block",
															"src": "9321:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1645,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "9339:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1648,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:7"
																},
																{
																	"expression": {
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1649,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "9368:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1652,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1655,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "9411:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1669,
														"nodeType": "IfStatement",
														"src": "9407:93:7",
														"trueBody": {
															"id": 1668,
															"nodeType": "Block",
															"src": "9427:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1660,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "9445:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1663,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:7"
																},
																{
																	"expression": {
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1664,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "9474:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1667,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1670,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "9517:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1680,
														"nodeType": "IfStatement",
														"src": "9513:64:7",
														"trueBody": {
															"id": 1679,
															"nodeType": "Block",
															"src": "9533:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1675,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "9551:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1678,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1682,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1562,
													"src": "9603:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1560,
												"id": 1683,
												"nodeType": "Return",
												"src": "9596:13:7"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:7",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "8647:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:7"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "8685:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:7"
									},
									"scope": 2013,
									"src": "8633:983:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "9849:165:7",
										"statements": [
											{
												"id": 1719,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:7",
												"statements": [
													{
														"assignments": [
															1697
														],
														"declarations": [
															{
																"constant": false,
																"id": 1697,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1719,
																"src": "9883:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1696,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1701,
														"initialValue": {
															"arguments": [
																{
																	"id": 1699,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "9905:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1698,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1685,
																	1721
																],
																"referencedDeclaration": 1685,
																"src": "9900:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1702,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "9932:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1154",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1703,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1691,
																					"src": "9942:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1154",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1704,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1154,
																						"src": "9954:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1154_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1705,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1152,
																					"src": "9954:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1154",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1707,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1708,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "9974:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1710,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1688,
																					"src": "9983:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1716,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1695,
														"id": 1718,
														"nodeType": "Return",
														"src": "9925:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "9783:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "9798:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1154",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1690,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1689,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1154,
														"src": "9798:8:7"
													},
													"referencedDeclaration": 1154,
													"src": "9798:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1154",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:7"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "9840:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:7"
									},
									"scope": 2013,
									"src": "9769:245:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "10201:854:7",
										"statements": [
											{
												"assignments": [
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1849,
														"src": "10211:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1732,
												"initialValue": {
													"hexValue": "30",
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:7"
											},
											{
												"id": 1846,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1733,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "10267:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1749,
														"nodeType": "IfStatement",
														"src": "10263:103:7",
														"trueBody": {
															"id": 1748,
															"nodeType": "Block",
															"src": "10286:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1738,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "10304:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1743,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:7"
																},
																{
																	"expression": {
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1744,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "10339:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1747,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1750,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "10383:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1766,
														"nodeType": "IfStatement",
														"src": "10379:103:7",
														"trueBody": {
															"id": 1765,
															"nodeType": "Block",
															"src": "10402:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1755,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "10420:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1760,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:7"
																},
																{
																	"expression": {
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1761,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "10455:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1764,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1767,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "10499:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1783,
														"nodeType": "IfStatement",
														"src": "10495:103:7",
														"trueBody": {
															"id": 1782,
															"nodeType": "Block",
															"src": "10518:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1772,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "10536:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1777,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:7"
																},
																{
																	"expression": {
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1778,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "10571:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1781,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1784,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "10615:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1800,
														"nodeType": "IfStatement",
														"src": "10611:100:7",
														"trueBody": {
															"id": 1799,
															"nodeType": "Block",
															"src": "10633:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1789,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "10651:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1794,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:7"
																},
																{
																	"expression": {
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1795,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "10685:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1798,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1801,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "10728:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1817,
														"nodeType": "IfStatement",
														"src": "10724:100:7",
														"trueBody": {
															"id": 1816,
															"nodeType": "Block",
															"src": "10746:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1806,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "10764:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1811,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:7"
																},
																{
																	"expression": {
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1812,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "10798:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1815,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1818,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "10841:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1834,
														"nodeType": "IfStatement",
														"src": "10837:100:7",
														"trueBody": {
															"id": 1833,
															"nodeType": "Block",
															"src": "10859:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1823,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "10877:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1828,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:7"
																},
																{
																	"expression": {
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1829,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "10911:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1832,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1835,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "10954:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1845,
														"nodeType": "IfStatement",
														"src": "10950:66:7",
														"trueBody": {
															"id": 1844,
															"nodeType": "Block",
															"src": "10972:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1840,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "10990:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1843,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1847,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1730,
													"src": "11042:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1848,
												"nodeType": "Return",
												"src": "11035:13:7"
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:7",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "10154:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:7"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "10192:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:7"
									},
									"scope": 2013,
									"src": "10139:916:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "11290:167:7",
										"statements": [
											{
												"id": 1884,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:7",
												"statements": [
													{
														"assignments": [
															1862
														],
														"declarations": [
															{
																"constant": false,
																"id": 1862,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1884,
																"src": "11324:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1861,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1866,
														"initialValue": {
															"arguments": [
																{
																	"id": 1864,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "11347:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1863,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1850,
																	1886
																],
																"referencedDeclaration": 1850,
																"src": "11341:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1867,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "11374:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1154",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1868,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1856,
																					"src": "11384:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1154",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1869,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1154,
																						"src": "11396:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1154_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1870,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1152,
																					"src": "11396:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1154",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1872,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1873,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1862,
																						"src": "11417:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1875,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1853,
																					"src": "11426:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1881,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1860,
														"id": 1883,
														"nodeType": "Return",
														"src": "11367:73:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "11224:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "11239:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1154",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1854,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1154,
														"src": "11239:8:7"
													},
													"referencedDeclaration": 1154,
													"src": "11239:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1154",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:7"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "11281:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:7"
									},
									"scope": 2013,
									"src": "11209:248:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "11771:600:7",
										"statements": [
											{
												"assignments": [
													1895
												],
												"declarations": [
													{
														"constant": false,
														"id": 1895,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1972,
														"src": "11781:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1897,
												"initialValue": {
													"hexValue": "30",
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:7"
											},
											{
												"id": 1969,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1898,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "11837:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1912,
														"nodeType": "IfStatement",
														"src": "11833:98:7",
														"trueBody": {
															"id": 1911,
															"nodeType": "Block",
															"src": "11855:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1903,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "11873:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1906,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:7"
																},
																{
																	"expression": {
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1907,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1895,
																			"src": "11904:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1910,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "11948:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1927,
														"nodeType": "IfStatement",
														"src": "11944:95:7",
														"trueBody": {
															"id": 1926,
															"nodeType": "Block",
															"src": "11965:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1918,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "11983:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1921,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:7"
																},
																{
																	"expression": {
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1922,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1895,
																			"src": "12013:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1925,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1928,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "12056:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1942,
														"nodeType": "IfStatement",
														"src": "12052:95:7",
														"trueBody": {
															"id": 1941,
															"nodeType": "Block",
															"src": "12073:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1933,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "12091:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1936,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:7"
																},
																{
																	"expression": {
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1937,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1895,
																			"src": "12121:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1940,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1943,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "12164:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1957,
														"nodeType": "IfStatement",
														"src": "12160:95:7",
														"trueBody": {
															"id": 1956,
															"nodeType": "Block",
															"src": "12181:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1948,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "12199:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1951,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:7"
																},
																{
																	"expression": {
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1952,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1895,
																			"src": "12229:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1955,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1958,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "12272:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1968,
														"nodeType": "IfStatement",
														"src": "12268:64:7",
														"trueBody": {
															"id": 1967,
															"nodeType": "Block",
															"src": "12288:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1895,
																			"src": "12306:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1966,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1970,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1895,
													"src": "12358:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1893,
												"id": 1971,
												"nodeType": "Return",
												"src": "12351:13:7"
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:7",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "11724:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:7"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "11762:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:7"
									},
									"scope": 2013,
									"src": "11708:663:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "12608:174:7",
										"statements": [
											{
												"id": 2010,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:7",
												"statements": [
													{
														"assignments": [
															1985
														],
														"declarations": [
															{
																"constant": false,
																"id": 1985,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2010,
																"src": "12642:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1984,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1989,
														"initialValue": {
															"arguments": [
																{
																	"id": 1987,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "12666:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1986,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1973,
																	2012
																],
																"referencedDeclaration": 1973,
																"src": "12659:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1990,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "12693:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1154",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1991,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1979,
																					"src": "12703:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1154",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1992,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1154,
																						"src": "12715:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1154_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1152,
																					"src": "12715:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1154",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2000,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1995,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1998,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1996,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1985,
																									"src": "12736:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1997,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1999,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2001,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1976,
																					"src": "12751:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2007,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1983,
														"id": 2009,
														"nodeType": "Return",
														"src": "12686:79:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:7",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "12542:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "12557:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1154",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1977,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1154,
														"src": "12557:8:7"
													},
													"referencedDeclaration": 1154,
													"src": "12557:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1154",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:7"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "12599:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:7"
									},
									"scope": 2013,
									"src": "12526:256:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2014,
							"src": "202:12582:7",
							"usedErrors": []
						}
					],
					"src": "103:12682:7"
				},
				"id": 7
			},
			"github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2118
						]
					},
					"id": 2119,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2015,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2016,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:8",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2118,
							"linearizedBaseContracts": [
								2118
							],
							"name": "SignedMath",
							"nameLocation": "223:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "375:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2026,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "392:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2027,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "396:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2030,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "404:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:8",
													"trueExpression": {
														"id": 2029,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "400:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2032,
												"nodeType": "Return",
												"src": "385:20:8"
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:8",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "324:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2018,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "334:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2020,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:8"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "367:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2023,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:8"
									},
									"scope": 2118,
									"src": "311:101:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "554:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2044,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "571:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2045,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "575:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2048,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "583:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:8",
													"trueExpression": {
														"id": 2047,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "579:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2043,
												"id": 2050,
												"nodeType": "Return",
												"src": "564:20:8"
											}
										]
									},
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:8",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "503:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2036,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "513:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2038,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:8"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "546:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2041,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:8"
									},
									"scope": 2118,
									"src": "490:101:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "796:162:8",
										"statements": [
											{
												"assignments": [
													2063
												],
												"declarations": [
													{
														"constant": false,
														"id": 2063,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2095,
														"src": "858:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2062,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2076,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2064,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2055,
																	"src": "870:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2065,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2057,
																	"src": "874:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2067,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2068,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "881:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2069,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2057,
																				"src": "885:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2071,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2074,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2077,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "910:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2082,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2063,
																						"src": "930:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2081,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2080,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2078,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2087,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "944:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2088,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2057,
																				"src": "948:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2090,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2092,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2061,
												"id": 2094,
												"nodeType": "Return",
												"src": "903:48:8"
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:8",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "745:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2054,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "755:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2056,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:8"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "788:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2059,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:8"
									},
									"scope": 2118,
									"src": "728:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "1102:158:8",
										"statements": [
											{
												"id": 2115,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2106,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "1227:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:8",
																		"subExpression": {
																			"id": 2110,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "1241:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:8",
																	"trueExpression": {
																		"id": 2109,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "1236:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2104,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2103,
														"id": 2114,
														"nodeType": "Return",
														"src": "1212:31:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:8",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1060:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2098,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:8"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "1093:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:8"
									},
									"scope": 2118,
									"src": "1047:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2119,
							"src": "215:1047:8",
							"usedErrors": []
						}
					],
					"src": "109:1154:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							2198
						]
					},
					"id": 2199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2120,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2121,
								"nodeType": "StructuredDocumentation",
								"src": "125:629:9",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 2198,
							"linearizedBaseContracts": [
								2198
							],
							"name": "Clones",
							"nameLocation": "763:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "1048:684:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1110:549:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:4:9",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1328:4:9",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1338:4:9",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "1344:14:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1334:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1334:25:9"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1324:36:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:48:9",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1321:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1321:90:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:104:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:104:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1533:4:9",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1546:4:9",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "1552:14:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1542:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1542:25:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:32:9",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1539:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:63:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:77:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1526:77:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:33:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:9",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1644:4:9",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:21:9"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "1616:8:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2124,
														"isOffset": false,
														"isSlot": false,
														"src": "1344:14:9",
														"valueSize": 1
													},
													{
														"declaration": 2124,
														"isOffset": false,
														"isSlot": false,
														"src": "1552:14:9",
														"valueSize": 1
													},
													{
														"declaration": 2127,
														"isOffset": false,
														"isSlot": false,
														"src": "1616:8:9",
														"valueSize": 1
													}
												],
												"id": 2129,
												"nodeType": "InlineAssembly",
												"src": "1101:558:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2131,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "1676:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1688:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2132,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1688:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1688:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1676:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1700:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 2130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1668:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1668:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2139,
												"nodeType": "ExpressionStatement",
												"src": "1668:57:9"
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "776:192:9",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "982:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "996:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "988:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:24:9"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1038:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "1030:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:18:9"
									},
									"scope": 2198,
									"src": "973:759:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "2209:692:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2271:556:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2476:4:9",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2489:4:9",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2499:4:9",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "2505:14:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2495:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2495:25:9"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "2485:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2485:36:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2523:48:9",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2482:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2482:90:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:104:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2469:104:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:4:9",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2707:4:9",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "2713:14:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2703:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2703:25:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2730:32:9",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2700:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:63:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:77:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2687:77:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2777:40:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2797:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:4:9",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:9",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2812:4:9"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2789:7:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:28:9"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "2777:8:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2144,
														"isOffset": false,
														"isSlot": false,
														"src": "2505:14:9",
														"valueSize": 1
													},
													{
														"declaration": 2144,
														"isOffset": false,
														"isSlot": false,
														"src": "2713:14:9",
														"valueSize": 1
													},
													{
														"declaration": 2149,
														"isOffset": false,
														"isSlot": false,
														"src": "2777:8:9",
														"valueSize": 1
													},
													{
														"declaration": 2146,
														"isOffset": false,
														"isSlot": false,
														"src": "2812:4:9",
														"valueSize": 1
													}
												],
												"id": 2151,
												"nodeType": "InlineAssembly",
												"src": "2262:565:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2153,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "2844:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2864:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2856:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2154,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2856:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2856:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2844:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2868:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 2152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2836:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2161,
												"nodeType": "ExpressionStatement",
												"src": "2836:58:9"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "1738:364:9",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2116:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2143:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2135:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2167:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2159:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:38:9"
									},
									"returnParameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2199:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2191:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:18:9"
									},
									"scope": 2198,
									"src": "2107:794:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "3176:515:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3238:447:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3252:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:9",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3263:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:11:9"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "3256:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3298:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3303:4:9",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3294:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3294:14:9"
																	},
																	{
																		"name": "deployer",
																		"nodeType": "YulIdentifier",
																		"src": "3310:8:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3287:32:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3343:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3348:4:9",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3339:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:34:9",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3332:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:4:9",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3410:14:9"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "3426:14:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:38:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:42:9",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3533:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:4:9",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:14:9"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3545:4:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3574:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:9",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3570:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "3600:3:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3605:4:9",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3596:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3596:14:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3612:4:9",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3586:9:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:31:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3563:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3631:44:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3658:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3663:4:9",
																				"type": "",
																				"value": "0x43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:9",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3644:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:31:9"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nodeType": "YulIdentifier",
																	"src": "3631:9:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2170,
														"isOffset": false,
														"isSlot": false,
														"src": "3310:8:9",
														"valueSize": 1
													},
													{
														"declaration": 2166,
														"isOffset": false,
														"isSlot": false,
														"src": "3426:14:9",
														"valueSize": 1
													},
													{
														"declaration": 2173,
														"isOffset": false,
														"isSlot": false,
														"src": "3631:9:9",
														"valueSize": 1
													},
													{
														"declaration": 2168,
														"isOffset": false,
														"isSlot": false,
														"src": "3545:4:9",
														"valueSize": 1
													}
												],
												"id": 2175,
												"nodeType": "InlineAssembly",
												"src": "3229:456:9"
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "2907:99:9",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3020:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3065:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "3057:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3097:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "3089:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2167,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "3119:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "3111:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:86:9"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3165:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "3157:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:19:9"
									},
									"scope": 2198,
									"src": "3011:680:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "3940:88:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2188,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "3985:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2189,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "4001:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2192,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4015:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$2198",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$2198",
																		"typeString": "library Clones"
																	}
																],
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4007:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2190,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4007:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4007:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2187,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2177,
															2197
														],
														"referencedDeclaration": 2177,
														"src": "3957:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3957:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2186,
												"id": 2195,
												"nodeType": "Return",
												"src": "3950:71:9"
											}
										]
									},
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "3697:99:9",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3810:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3855:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3847:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3847:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3887:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3879:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2181,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:60:9"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3929:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3921:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:19:9"
									},
									"scope": 2198,
									"src": "3801:227:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2199,
							"src": "755:3275:9",
							"usedErrors": []
						}
					],
					"src": "100:3931:9"
				},
				"id": 9
			}
		}
	}
}